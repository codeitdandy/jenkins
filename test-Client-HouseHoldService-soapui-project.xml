<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-HouseHoldService-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="258b2078-7fde-4e84-b415-90e79b93b3a0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="HouseHoldHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/household/v1}HouseHoldHTTPBinding" soapVersion="1_1" anonymous="optional" definition="/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/HouseHoldService_v1.wsdl" id="752d788d-c721-4a26-ac29-1242e27aacf6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/HouseHoldService_v1.wsdl"><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/HouseHoldService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/household/v1" name="HouseHoldService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/household/messages/v1" xmlns:tns="http://fidus.brussels/service/household/v1">
  <xsd:annotation>
    <xsd:documentation>HouseHold service WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/household/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/household/messages/v1" schemaLocation="messages/houseHoldMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getHouseHoldRequestMessage">
    <wsdl:part name="GetHouseHoldRequest" element="mes:getHouseHoldRequest"/>
  </wsdl:message>
  <wsdl:message name="getHouseHoldResponseMessage">
    <wsdl:part name="GetHouseHoldResponse" element="mes:getHouseHoldResponse"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionBySsinRequestMessage">
    <wsdl:part name="SearchFamilyCompositionBySsinRequest" element="mes:searchFamilyCompositionBySsinRequest"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionBySsinResponseMessage">
    <wsdl:part name="SearchFamilyCompositionBySsinResponse" element="mes:searchFamilyCompositionBySsinResponse"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionHistoryBySsinRequestMessage">
    <wsdl:part name="SearchFamilyCompositionHistoryBySsinRequest" element="mes:searchFamilyCompositionHistoryBySsinRequest"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionHistoryBySsinResponseMessage">
    <wsdl:part name="SearchFamilyCompositionHistoryBySsinResponse" element="mes:searchFamilyCompositionHistoryBySsinResponse"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionBySsinAndDateRequestMessage">
    <wsdl:part name="SearchFamilyCompositionBySsinAndDateRequest" element="mes:searchFamilyCompositionBySsinAndDateRequest"/>
  </wsdl:message>
  <wsdl:message name="searchFamilyCompositionBySsinAndDateResponseMessage">
    <wsdl:part name="SearchFamilyCompositionBySsinAndDateResponse" element="mes:searchFamilyCompositionBySsinAndDateResponse"/>
  </wsdl:message>
  <wsdl:portType name="HouseHoldPortType">
    <wsdl:operation name="getHouseHold">
      <wsdl:input message="tns:getHouseHoldRequestMessage"/>
      <wsdl:output message="tns:getHouseHoldResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionBySsin">
      <wsdl:input message="tns:searchFamilyCompositionBySsinRequestMessage"/>
      <wsdl:output message="tns:searchFamilyCompositionBySsinResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionHistoryBySsin">
      <wsdl:input message="tns:searchFamilyCompositionHistoryBySsinRequestMessage"/>
      <wsdl:output message="tns:searchFamilyCompositionHistoryBySsinResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionBySsinAndDate">
      <wsdl:input message="tns:searchFamilyCompositionBySsinAndDateRequestMessage"/>
      <wsdl:output message="tns:searchFamilyCompositionBySsinAndDateResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HouseHoldHTTPBinding" type="tns:HouseHoldPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHouseHold">
      <soap:operation soapAction="http://fidus.brussels/services/household/getHouseHold"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionBySsin">
      <soap:operation soapAction="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionHistoryBySsin">
      <soap:operation soapAction="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchFamilyCompositionBySsinAndDate">
      <soap:operation soapAction="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HouseHoldService_v1">
    <wsdl:port name="HouseHoldService_v1" binding="tns:HouseHoldHTTPBinding">
      <soap:address location="http://fidus.brussels/services/household/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/messages/houseHoldMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/household/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/household/messages/v1" xmlns:fam="http://kszbcss.fgov.be/types/registries/FamilyCompositionService/v1" xmlns:fam2="http://kszbcss.fgov.be/types/familycomposition/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/registries/FamilyCompositionService/v1" schemaLocation="../familycomposition/registries/FamilyCompositionService/FamilyCompositionServiceV1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/familycomposition/v1" schemaLocation="../familycomposition/familycomposition/FamilyCompositionDataV1.xsd"/>
  <!--<xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../familycomposition/common/CommonV3.xsd"/>-->
  <xsd:complexType name="HouseHoldRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getHouseHold definition-->
  <xsd:complexType name="GetHouseHoldRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:HouseHoldRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getHouseHold definition-->
  <xsd:complexType name="GetHouseHoldResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request searchFamilyCompositionBySsin definition-->
  <xsd:complexType name="SearchFamilyCompositionBySsinRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:FamilyCompositionBySsinRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FamilyCompositionBySsinRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Reponse searchFamilyCompositionBySsin definition-->
  <xsd:complexType name="SearchFamilyCompositionBySsinResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <!--<xsd:element name="responses" type="fam:SearchFamilyCompositionBySsinResponseType" minOccurs="0"/>-->
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request searchFamilyCompositionHistoryBySsin definition-->
  <xsd:complexType name="SearchFamilyCompositionHistoryBySsinRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:FamilyCompositionBySsinAndDateRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Reponse searchFamilyCompositionHistoryBySsin definition-->
  <xsd:complexType name="SearchFamilyCompositionHistoryBySsinResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="fam:SearchFamilyCompositionHistoryBySsinResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request searchFamilyCompositionBySsinAndDate definition-->
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:FamilyCompositionBySsinAndDateRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FamilyCompositionBySsinAndDateRequestType">
    <xsd:sequence>
      <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinAndDateCriteriaType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateCriteriaType">
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="date" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date to obtain the family composition situation on a given date</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="enrichWithActualPersonData" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates if the data must be enriched with the legal data of all persons in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Reponse searchFamilyCompositionBySsinAndDate definition-->
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="fam:SearchFamilyCompositionBySsinAndDateResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="familyComposition" type="fam2:FamilyCompositionResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="getHouseHoldRequest" type="tns:GetHouseHoldRequestType"/>
  <xsd:element name="getHouseHoldResponse" type="tns:GetHouseHoldResponseType"/>
  <xsd:element name="searchFamilyCompositionBySsinRequest" type="tns:SearchFamilyCompositionBySsinRequestType"/>
  <xsd:element name="searchFamilyCompositionBySsinResponse" type="tns:SearchFamilyCompositionBySsinResponseType"/>
  <xsd:element name="searchFamilyCompositionHistoryBySsinRequest" type="tns:SearchFamilyCompositionHistoryBySsinRequestType"/>
  <xsd:element name="searchFamilyCompositionHistoryBySsinResponse" type="tns:SearchFamilyCompositionBySsinResponseType"/>
  <xsd:element name="searchFamilyCompositionBySsinAndDateRequest" type="tns:SearchFamilyCompositionBySsinAndDateRequestType"/>
  <xsd:element name="searchFamilyCompositionBySsinAndDateResponse" type="tns:SearchFamilyCompositionBySsinAndDateResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/registries/FamilyCompositionService/FamilyCompositionServiceV1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: FamilyCompositionServiceV1.xsd
	* Author				: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain				: CBSS Registries Public Services
	* Creation Date			: 18-06-2013
	* Last revision date	: 18-06-2013
	* Description			: This XML schema document contains a set of XML types used in request/response messages of the FamilyComposition Service. 
	* Status				: 
	* Current Version		: 0.1
	* Revision History		: 18-06-2013	Creation
	*						  17-10-2013	Move replacingSsin to top
	*						  24-10-2013	Rename element familyCompositionHistory to familyCompositions + byDate response can have multiple compositions
	* ====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/registries/FamilyCompositionService/v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/registries/FamilyCompositionService/v1" xmlns:family="http://kszbcss.fgov.be/types/familycomposition/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:registriesCommon="http://kszbcss.fgov.be/types/registries/common/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/familycomposition/v1" schemaLocation="../../familycomposition/FamilyCompositionDataV1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/registries/common/v3" schemaLocation="../../registries/common/RegistriesCommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <!--======================================== GetBySsin capability ========================================-->
  <xsd:complexType name="SearchFamilyCompositionBySsinRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the request to fetch family composition information based on a number</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="common:BaseRequestType">
        <xsd:sequence>
          <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinCriteriaType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SearchFamilyCompositionBySsinResponseType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the family composition information fetched based on a number</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="common:BaseResponseType">
        <xsd:sequence>
          <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinCriteriaType">
            <xsd:annotation>
              <xsd:documentation>The search criteria from the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="status" type="registriesCommon:StatusType"/>
          <xsd:sequence>
            <xsd:element name="result" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="replacingSsin" type="common:SsinType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>The SSIN replacing the requested SSIN</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="familyComposition" type="family:FamilyCompositionResponseType">
                    <xsd:annotation>
                      <xsd:documentation>The family composition found based on the given NR number</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:group ref="common:BusinessAnomaliesContentFragment"/>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--======================================== GetBySsinAndDate capability ========================================-->
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the request to fetch family composition information based on a number and a date</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="common:BaseRequestType">
        <xsd:sequence>
          <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinAndDateCriteriaType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateResponseType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the family composition information fetched based on a number</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="common:BaseResponseType">
        <xsd:sequence>
          <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinAndDateCriteriaType">
            <xsd:annotation>
              <xsd:documentation>The search criteria from the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="status" type="registriesCommon:StatusType"/>
          <xsd:sequence>
            <xsd:element name="result" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="replacingSsin" type="common:SsinType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>The SSIN replacing the requested SSIN</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="familyCompositions" type="family:FamilyCompositionsResponseType">
                    <xsd:annotation>
                      <xsd:documentation>The family composition found based on the given NR number</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:group ref="common:BusinessAnomaliesContentFragment"/>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--======================================== History capability ========================================-->
  <xsd:complexType name="SearchFamilyCompositionHistoryBySsinResponseType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the family composition history information fetched based on a number</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="common:BaseResponseType">
        <xsd:sequence>
          <xsd:element name="criteria" type="tns:SearchFamilyCompositionBySsinCriteriaType">
            <xsd:annotation>
              <xsd:documentation>The search criteria from the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="status" type="registriesCommon:StatusType"/>
          <xsd:sequence>
            <xsd:element name="result" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="replacingSsin" type="common:SsinType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>The SSIN replacing the requested SSIN</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="familyCompositions" type="family:FamilyCompositionsResponseType">
                    <xsd:annotation>
                      <xsd:documentation>The family compositions found based on the given NR number</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:group ref="common:BusinessAnomaliesContentFragment"/>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--======================================== criteria ========================================-->
  <xsd:complexType name="SearchFamilyCompositionBySsinCriteriaType">
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NRnumber used to fetch family composition information</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="enrichWithActualPersonData" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicates if the data must be enriched with the legal data of all persons in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchFamilyCompositionBySsinAndDateCriteriaType">
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NRnumber used to fetch family composition information</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="date" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>The date to obtain the family composition situation on a given date</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="enrichWithActualPersonData" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicates if the data must be enriched with the legal data of all persons in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/familycomposition/FamilyCompositionDataV1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: FamilyCompositionDataV1.xsd
	* Author				: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain				: CBSS Registries Public Services
	* Creation Date			: 18-06-2013
	* Last revision date	: 18-06-2013
	* Description			: This XML schema document contains a set of XML types and content model fragments used to model family compositions data within the CBSS domain. 
	* Status				: 
	* Current Version		: 0.1
	* Revision History		: 18-06-2013	Creation
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/familycomposition/v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/familycomposition/v1" xmlns:person="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../legaldata/BaseLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/person/v3" schemaLocation="../legaldata/person/PersonLegalDataV3.xsd"/>
  <xsd:complexType name="FamilyCompositionResponseType">
    <xsd:sequence>
      <xsd:element name="familyMember" type="tns:FamilyMemberType" maxOccurs="50"/>
    </xsd:sequence>
    <xsd:attribute name="source" type="base:SourceType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the providing source of the family composition.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="FamilyMemberType">
    <xsd:group ref="tns:FamilyMemberContentFragment"/>
    <xsd:attribute name="source" type="base:SourceType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the providing source of the family composition.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="FamilyMemberHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:FamilyMemberType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FamilyCompositionWithLegalCohabitationResponseType">
    <xsd:sequence>
      <xsd:element name="familyMember" maxOccurs="50">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:FamilyMemberContentFragment"/>
            <xsd:element name="legalCohabitation" type="tns:LegalCohabitationType" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="source" type="base:SourceType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the family composition.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="FamilyCompositionsResponseType">
    <xsd:sequence>
      <xsd:element name="familyComposition" type="tns:FamilyCompositionType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FamilyCompositionType">
    <xsd:sequence>
      <xsd:element name="familyMember" type="tns:FamilyMemberHistoryType" maxOccurs="50"/>
    </xsd:sequence>
    <xsd:attribute name="source" type="base:SourceType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the providing source of the family composition.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="FamilyMemberContentFragment">
    <xsd:sequence>
      <xsd:group ref="tns:FamilyMemberIdentificationContentFragment"/>
      <xsd:element name="positionCode" type="tns:PositionCodeType"/>
      <xsd:element name="positionDescription" type="base:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:sequence minOccurs="0">
        <xsd:element name="cohousingCode" type="tns:CohousingCodeType">
          <xsd:annotation>
            <xsd:documentation>Only present for NR</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="cohousingDescription" type="base:DescriptionType" minOccurs="0" maxOccurs="3"/>
      </xsd:sequence>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FamilyMemberIdentificationContentFragment">
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="ssin" type="common:SsinType"/>
        <xsd:element name="actualPerson" type="person:PersonResponseType" minOccurs="0"/>
      </xsd:sequence>
      <xsd:element name="fictionalIdentificationNumber">
        <xsd:annotation>
          <xsd:documentation>non-SSIN reference used at the NR for family members without NR number</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="11"/>
            <xsd:minLength value="1"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:choice>
  </xsd:group>
  <xsd:simpleType name="PositionCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CohousingCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="LegalCohabitationType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="base:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="registrationBailiff" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="bailiffName">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1"/>
                  <xsd:maxLength value="48"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="location" type="base:LocationType" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 25-03-2011
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.1
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/legaldata/BaseLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: BaseLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.2
	* Revision History		: 09-03-2011  	ForeignAddressContentFragment now contains an optional foreignCityCode element.
    *														ForeignLocationContentFragment now contains an optional foreignCityCode element.
	*														ForeignAddressRequestContentFragment now contains an optional foreignCityCode element.
	*														ForeignLocationRequestContentFragment now contains an optional foreignCityCode element.
	*														AddressContentFragment/number + length 10 constraint
	*														AddressContentFragment/boxNumber + length 10 constraint
	*														CivilStateInfoContentFragment/civilStateCode length constraint 5 changed to 2 (Leading to incompatible change)
	*														NisCodeType + length 5 constraint (Leading to incompatible change)
	*														NobilityTitleContenctFragment added
	*														BirthInfoContentFragment extended with ActContentFragment
	*														ForeignLocationContentFragment added to CivilStateInfoContentFragment
	*														ForeignLocationContentFragment. length constraint 3 changed to 5
	*														foreignCityCode length constraint 10 changed to 5
	*														foreignCityName length constraint 50 changed to 100
	*														Refactored RegisterType to PersonType
	*														Refactored to use common:SSINType
	*														Removed SSINType
	*														GenderCode refactored from String1Type to GenderType
	*														Refactored to use common:IncompleteDateType
	*														Removed IncompleteDateType
	*														FamilyMember information removed
	*									25-10-2011	Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored firstname to givenName
	*									16-02-2012	New major version
	*									16-03-2012	Added a content fragment for temporary address
	*														Created AddressClassType
	*														DescriptionType in CommonV3 changed, no language anymore: added specific DescriptionType here with optional language
	*														Using CommonV3 DescriptionType for civilstate and nobilitytitle (adding a size constraint of 100)
	*									04-04-2012	Removed class attribute from address types
	*														Added new structure for diplomatic addresses and posts
	*									07-09-2012	Codes in LegalData now possible in three languages
	*												Removed act from BirthInfo 
	*									01-10-2012	gender in request renamed to genderCode
	*														Changed type for inceptionDate elements: now xsd:date
	*									08-11-2012	name/name in request and response renamed to name/lastName
	*									28-01-2013	New minor version 3.1
	*														Added optional diplomaticPostName
	*														Added switch for partnerSsin with new element partnerReference
	*														Added AdministratorContentFragment
	*									08-04-2014	New minor version 3.2:
	*														Added BirthActContentFragment and BirthActTypeCode
	*														Added birthAct to BirthInfoContentFragment
	*														Added LegalCohabitationGroup, SubregisterGroup, AbsenceGroup, FiliationGroup
	*														Added BirthGroup, DeceaseGroup, CivilStateGroup and NationalityGroup for consultation per datagroup
	*									08-10-2014	Added expiration details for LegalCohabitation
	*									08-10-2014	Extracted partner type from Civilstate and also used it in LegalCohabitation
	*									04-02-2015	Created DiplomaticAddressHistoryContentFragment with multiple postaddresses to use in ResidentialAddressHistoryContentFragment
	*									10-02-2015	Created PlainAddressHistoryType to reflect expiry dates for diplomatic addresses and post addresses
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <!--Response content fragments-->
  <xsd:group name="NameInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" type="tns:PartnerType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SisOrIsiContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the social identification part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hasSocialIdentificationCard" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:group>
  <!--Request content fragments-->
  <xsd:group name="NameInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="partnerSsin" type="common:SsinType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--General content fragments-->
  <xsd:group name="NobilityTitleContentFragment">
    <xsd:annotation>
      <xsd:documentation>Type describing the nobility title of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitleCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="2"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nobilityTitleDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressHistoryType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressHistoryContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AdministratorContentFragment">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="location" type="tns:LocationType"/>
        <xsd:element name="specialNotion" type="tns:SpecialNotionType"/>
      </xsd:choice>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An optional post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressHistoryType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressHistoryType" minOccurs="0" maxOccurs="10">
        <xsd:annotation>
          <xsd:documentation>An optional list of post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TemporaryAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="temporaryAddress" type="tns:PlainAddressType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Datagroup content fragments-->
  <xsd:group name="SubregisterGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subregisterCode" type="tns:NRSubregisterCodeType"/>
      <xsd:element name="subregisterDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partner" type="tns:PartnerType"/>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="tns:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationBailiff" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="bailiffName">
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1"/>
                        <xsd:maxLength value="48"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="location" type="tns:LocationType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Place where civil state was registered.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationExpirationGroup">
    <xsd:sequence>
      <xsd:element name="expiryDate" type="xsd:date"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="reasonDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="location" type="tns:LocationType"/>
      <xsd:element name="notificationDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FiliationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filiationCode" type="tns:FiliationCodeType"/>
      <xsd:element name="filiationDescription" type="common:DescriptionType" minOccurs="0"/>
      <xsd:element name="parent" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="tns:ParentType">
              <xsd:attribute name="sequence" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:unsignedShort">
                    <xsd:maxInclusive value="3"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AbsenceGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="absenceCode" type="tns:AbsenceCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthGroup">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the DeceaseInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the CivilState information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="partnerSsin" type="common:SsinType"/>
              <xsd:element name="partnerReference">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="11"/>
                    <xsd:minLength value="1"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
            <xsd:element name="partnerName" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="tns:NameInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the NationalityInfo as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="justification" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="justificationCode">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:minInclusive value="0"/>
                  <xsd:maxInclusive value="999"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="justificationDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Types-->
  <xsd:simpleType name="GenderCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CivilstateCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonRegisterType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR"/>
      <xsd:enumeration value="BIS"/>
      <xsd:enumeration value="RAD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NRSubregisterCodeType">
    <xsd:annotation>
      <xsd:documentation>Code specifying the subregister of the National Registry in which the person can be found</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="CBSS"/>
      <xsd:enumeration value="BOTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FiliationCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GivenNameValueType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="48"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GivenNameType">
    <xsd:simpleContent>
      <xsd:extension base="tns:GivenNameValueType">
        <xsd:attribute name="sequence" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="3"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartnerType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="partnerName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ParentType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="parentSsin" type="common:SsinType"/>
        <xsd:element name="parentReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="parentBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="parentGender" type="tns:GenderCodeType" minOccurs="0"/>
      <xsd:element name="parentName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>Type describing a Belgian location (BelgianMunicipality). Can be used as a birthplace or decease place.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActType">
    <xsd:sequence>
      <xsd:element name="actTypeCode" type="tns:ActCodeType"/>
      <xsd:element name="actTypeDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SpecialNotionType">
    <xsd:annotation>
      <xsd:documentation>Container for special NIS codes occurring in the information type 001</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specialNotionCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="specialNotionName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PostalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StreetCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseIndexType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PlainAddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>the country of this address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="address" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the actual address, in unformatted form</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PlainAddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:PlainAddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" type="tns:CityCodeType" minOccurs="0"/>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="postalCode" type="tns:PostalCodeType" minOccurs="0"/>
      <xsd:element name="streetCode" type="tns:StreetCodeType" minOccurs="0"/>
      <xsd:element name="streetName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="houseNumber" type="tns:HouseNumberType" minOccurs="0"/>
      <xsd:element name="boxNumber" type="tns:BoxNumberType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:AddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DiplomaticPostType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>Country code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="diplomaticPostCode" type="tns:DiplomaticPostCodeType">
        <xsd:annotation>
          <xsd:documentation>The official code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticPostName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CountryCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CityCodeType">
    <xsd:annotation>
      <xsd:documentation>For Belgian locations this is the "NISCode", for foreign locations the cityCode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="DiplomaticPostCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AbsenceCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DatagroupStatusType">
    <xsd:annotation>
      <xsd:documentation>Type defining possible statuses of a datagroup occurrence</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DATA_FOUND"/>
      <xsd:enumeration value="NO_DATA_FOUND"/>
      <xsd:enumeration value="NOT_SUPPORTED"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/legaldata/person/PersonLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 16-03-2012
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 09-03-2011  	NobilityTitleContentFragment added
	*														FamilyMembers datagroup removed
	*														PaymentAddress information removed
	*									25-10-2011	Refactored SSIN to camel case
	*														Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored unbounded NationalityInfo to 20
	*														Refactored unbounded CivilStateInfo to 20
	*									16-02-2012	New major version
	*									16-03-2012	Renamed residentialAddress to address
	*														Readded temporaryAddress
	*														CommonV3 BaseDescriptionType was renamed to DescriptionType
	*									07-09-2012	Removed subregister
	*									31-01-2013	added administrator
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/person/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/parent/householdservice/HouseHoldServiceGateway/src/main/resources/wsdl/houseHoldService/1.0.0/familycomposition/registries/common/RegistriesCommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: RegistriesCommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 25-10-2011
	* Last revision date	: 25-10-2011
	* Description				: This XML schema document contains a set of Common XML  type definitions specific for the registries domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 25-10-2011	Initial Version
	*							16-02-2012	New major version
	*							06-09-2012: 	Removed BaseRequestType and BaseResponseType because after removal of the characterSet, they offered nothing more than the common 	
	*   											BaseRequestType and BaseResponseType
	*												Added IntegrationContextType
	*												Added StatusType specific for these services
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/registries/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/registries/common/v3" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="GivenNameMatchingType">
    <xsd:annotation>
      <xsd:documentation>Type defining the possible ways to interpret the given firstnames during the phonetic search.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FIRST_LETTER_FIRST_GIVENNAME"/>
      <xsd:enumeration value="COMPLETE_FIRST_GIVENNAME"/>
      <xsd:enumeration value="ALL_GIVENNAME"/>
      <xsd:enumeration value="IGNORE_GIVENNAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="RegisterIntegrationType">
    <xsd:sequence>
      <xsd:element name="integrationContext" type="common:IntegrationContextType">
        <xsd:annotation>
          <xsd:documentation>Context under which to register a person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="period" type="common:OpenPeriodType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint>
    <con:endpoint>https://localhost:8243/services/HouseHoldService_v1.0</con:endpoint></con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/household/getHouseHold" name="getHouseHold" bindingOperationName="getHouseHold" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="05d88c81-f948-48d7-89a1-c13fb8741c3a">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" useWsAddressing="false" id="19be0677-5b82-484d-9afb-d10784fac509">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="2 - Dev - Request" incomingWss="Inflow DEV" outgoingWss="Outflow DEV" id="5a938188-1774-4765-9d67-b99b91ef590f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="ed3d1eb5-d306-432b-91a6-c817a03b0767">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="ff0700d8-5416-4544-91af-743c4a1b3c90">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="4faeecdb-d5a2-410c-aa25-1e741b4c0536">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="81b807f8-b7f5-43e5-a219-b28ab15faac9">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="9c759ca2-2c8f-472c-911e-de2729d1a9e3">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="4a583ea5-e3d8-4e77-8edc-8742873a9115">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="5412ec25-29d2-4085-86a3-b1f3f7a22260">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="de598005-03b6-4952-8d74-7f25847d745d">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - External - Request" incomingWss="Inflow PROD" outgoingWss="Outflow PROD" id="9473e0dc-407b-4cfe-86c1-9d1b3de5bee2">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="ca1edb7f-c28b-43b4-9d7c-fa6d0569524a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker1 - Request" incomingWss="Inflow PROD" outgoingWss="Outflow PROD" id="977efaed-5d22-49df-9002-b96d945caa0f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="85ff8029-606d-438a-b6e3-1a2ff1dcb533">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/HouseHoldService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="25cf3719-b816-4e82-9c2c-cea0e7b741d2" name="Local - Request_12003001507" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ddbba560-cc7a-416c-9d37-bd5cde7f0741" name="Local - Request_12003001508" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001508</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a2182de5-68e3-4dd0-abbb-3af3d4285d49" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7893473b-cba1-4971-8961-3166a5ff6dce" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3d85c761-2549-4449-88d7-5ae964744ae6" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5dda9982-2510-499e-bfd5-0c78d9097949" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.191:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90c00e5f-9622-4bbe-9278-4d998c40fc2b" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.198:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
  <con:operation id="88c6464b-3a5a-4726-bcff-eef81cff792f" isOneWay="false" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin" name="searchFamilyCompositionBySsin" bindingOperationName="searchFamilyCompositionBySsin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="add440f2-a438-434b-85a1-e171da642e2f" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:searchFamilyCompositionBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/><con:wsrmConfig version="1.2"/></con:call><con:call id="34478df6-c94a-4493-9b1c-2896f8e658be" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:searchFamilyCompositionBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/><con:wsrmConfig version="1.2"/></con:call><con:call id="31e90467-4715-4bf5-b839-bd48bdf3ba37" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:searchFamilyCompositionBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="d5d87873-a4f5-4e67-bca5-b17e27fe795c" isOneWay="false" action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin" name="searchFamilyCompositionHistoryBySsin" bindingOperationName="searchFamilyCompositionHistoryBySsin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16d9ae8d-2e19-44bf-8735-4fc03e913938" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionHistoryBySsinRequest>
        <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionHistoryBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/><con:wsrmConfig version="1.2"/></con:call><con:call id="924ec1e6-8f64-4fd0-a2aa-b83449788c88" name="2 - Dev - Request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionHistoryBySsinRequest>
        <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionHistoryBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/><con:wsrmConfig version="1.2"/></con:call><con:call id="af29a3aa-6017-4c81-bc18-1ffe4e1093b0" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionHistoryBySsinRequest>
        <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionHistoryBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c27b0730-05b4-48a9-9d3a-56dcb7c24a8c" isOneWay="false" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate" name="searchFamilyCompositionBySsinAndDate" bindingOperationName="searchFamilyCompositionBySsinAndDate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4cb8a198-32fb-480f-9b57-a04339f4b3a0" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinAndDateRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionBySsinAndDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5506e813-19ed-4488-8723-9aa36bdf943b" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinAndDateRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionBySsinAndDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a9ed1af9-cd00-4114-9bd4-48a6f925e9f7" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinAndDateRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionBySsinAndDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:testSuite id="6bfce84b-7ef1-431e-b95d-a8a6baefc4cc" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="fb6ab901-ba42-40e8-91b7-921dfb65a9af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHouseHold" searchProperties="true"><con:settings/><con:testStep type="request" id="1e0c62c1-f5c8-4bbc-b218-f4cbe557ee59" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase2 - Dev - Request" id="bf5567f8-b208-4803-810c-18d9e07a1be0" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1e6da79e-61ec-4a2f-8a3f-be5c3f194703" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ce7cbb3d-1d55-470c-bb79-bdfaf4fa6b1e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="17648983-aaa8-4e14-b6ec-c1fb92f1ed57" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="c654f843-533e-42b7-aeb4-c74483c5bfe7" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase2 - DevNew - Request" id="aa60ea7f-f052-4776-8d4a-5aa526a9200f" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="df7199d2-8e81-42a5-b630-ec1ddec45c1e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fd127bc6-73b9-4fc8-89c9-53dffe9ad8ad" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c6b9d03c-32a6-4bc2-9255-000cc91352cb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f51390e0-41ad-47e2-b204-d75905a814f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchFamilyCompositionBySsin" searchProperties="true"><con:settings/><con:testStep type="request" id="8cdb1d20-a0bc-40cc-ad45-3663e3290b26" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionBySsin</con:operation><con:request name="testcase2 - Dev - Request" id="03505542-711d-4d8a-86e4-b8e466bf0913" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:searchFamilyCompositionBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="21799011-4c94-411e-9c86-337e30d49e6e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0e8eb3b7-7e31-42fa-81a4-755199d1c571" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4f95dd29-436a-419b-9079-76488c88a559" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/></con:request></con:config></con:testStep><con:testStep type="request" id="7a798e7a-6181-41d1-b248-c348afcbe73d" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionBySsin</con:operation><con:request name="testcase2 - DevNew - Request" id="f7ffe2f6-58eb-4786-8ba4-cb437c65648d" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:searchFamilyCompositionBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="653d80c6-7879-4256-b5d5-f644541dabf3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d7626fc8-c41d-45c9-b5d5-6b45c22bff34" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6e4f50f4-70fe-4037-ab7a-4b0ebfe204b4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionBySsin"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="507310a6-0bd2-4c39-85e4-1ffc757d4f83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchFamilyCompositionHistoryBySsin" searchProperties="true"><con:settings/><con:testStep type="request" id="550a7e6b-fba0-409e-ad34-6f79808e34cf" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionHistoryBySsin</con:operation><con:request name="testcase2 - Dev - Request" id="3eb1be0f-d58c-4010-a7c4-720bae493ece" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionHistoryBySsinRequest>
        <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionHistoryBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5698d694-5cea-472d-b95f-466070b660f9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f62fe628-9b58-4dcc-b604-33062dbe045a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c43f8e17-011b-4086-a506-d5d56bea0dd6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/></con:request></con:config></con:testStep><con:testStep type="request" id="6e71c047-e9ab-448e-875e-e0fdba218fab" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionHistoryBySsin</con:operation><con:request name="testcase2 - DevNew - Request" id="37b9681e-3f0d-4a3b-86bb-f59c61f77570" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionHistoryBySsinRequest>
        <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionHistoryBySsinRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ea63c136-d4ef-4ba4-b4c6-c9fe9d8ff12e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f55e9ea5-c25d-47f6-890c-51a89002efc3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="900f0b64-a568-431d-9ff4-5e3d897f20ce" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionHistoryBySsin"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fbeee407-95e3-4d0d-b69e-448b1d6f128b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchFamilyCompositionBySsinAndDate" searchProperties="true"><con:settings/><con:testStep type="request" id="8ad5f552-9cc7-4eb2-882b-f0caca0c8226" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionBySsinAndDate</con:operation><con:request name="testcase2 - Dev - Request" id="78e33f6f-f9d2-41bd-a878-3eb55cc3cf01" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinAndDateRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionBySsinAndDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="faef7fff-7c11-47ee-8d0c-5fa9cf5df708" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="58a919ba-d7fd-4463-9e06-081f188a1ea5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f6c1bece-1c86-4193-a206-958a083dfcc6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/></con:request></con:config></con:testStep><con:testStep type="request" id="823ee568-8324-4b40-b131-ec472e546388" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>searchFamilyCompositionBySsinAndDate</con:operation><con:request name="testcase2 - DevNew - Request" id="1e03a719-de2c-479f-90c8-006b8883ffd0" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchFamilyCompositionBySsinAndDateRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>         
         <v1:request>
            <v1:criteria>
               <v1:personNumber>85081509931</v1:personNumber>
               <!--Optional:-->
               <v1:date>2017-10-01</v1:date>
               <!--Optional:-->
               <v1:enrichWithActualPersonData>false</v1:enrichWithActualPersonData>
            </v1:criteria>
         </v1:request>
      </v1:searchFamilyCompositionBySsinAndDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="55aeb02c-9e7c-45d4-a353-071dea6f31f2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="68446a60-a921-4f1e-a1ba-8e63c99fbf89" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5c3435ac-84ad-4a2d-b75b-ad51c61863c4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/searchFamilyCompositionBySsinAndDate"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="de053b34-17c3-4f45-89b9-b472e4af8c25" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="cd0bdf13-6abc-4d71-b6b5-8326e8c97ec0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHouseHold" searchProperties="true"><con:settings/><con:testStep type="request" id="17909dcf-72b9-4d8f-b5db-5589950c8cb7" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - External - Request" id="a26a39fe-8167-4e09-9129-1e57c47d44aa" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="911689d4-fead-4ebd-87b8-94955d7fd449" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d7aa4155-f937-4c6d-a5b1-9c464677273e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0c17013e-55df-4578-8368-851a0cad5dfe" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="9f2c7736-130c-408c-a479-e8928ae06f7c" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - LB - Request" id="f9cfdc87-f719-4596-8b3f-5fd37e7fd012" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2a960ef3-bdef-400b-8de4-33acf782721a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5dc14c13-5e21-481b-9f27-32833731ce41" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f65f301a-581b-4238-955c-f6bc0f7b72df" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="87372af8-f561-4a80-820f-8cc515132aab" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="542d62fa-2381-49e6-b7bb-66889adf5f40" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="80ce94b1-fb0e-47d1-b014-bbe665569706" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="bb985c84-0679-4a11-8589-324149c97d9c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5640c495-911a-4936-87fd-bb4ac9c56c71" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="8009716b-fb92-4d61-a006-729fa99b1151" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="891296f3-3c31-4742-a9dc-3b2aff1c92b7" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="192d5090-dd88-4087-bb33-cf1f88804657" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2e77c889-1100-4012-bc07-84055716442b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cfeaef6f-daa4-45c8-9e90-b47384f443ad" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="26b8429f-5bec-4140-9a49-ef14cee06bc9" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="9f41266a-4e48-4aaf-a74d-641799a04b44" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ab2ea7ff-b7c4-45f1-8302-9f5e519ef95c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3fa18354-ab1c-4b62-ba41-fc0e79b9b3a1" name="SOAP Response"/><con:assertion type="Schema Compliance" id="77786db9-ec5f-44bd-9c08-637e493e3b67" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="51900002-ab11-46b7-97cb-9502c890d74f" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="ad1d97dd-6dde-459e-b48c-967303686150" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="90eea815-1d32-4ac9-ba0f-e203de42b61f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0cff0401-fc59-470c-905e-5d63f050013c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d391c7dc-bb19-4882-aa7d-3b7c1bde4d67" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="c566ed91-5cf0-48eb-9cb8-42464323f9b0" name="STAG"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e9005f75-5b3e-45fa-b6af-4bf96be9f28d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHouseHold" searchProperties="true"><con:settings/><con:testStep type="request" id="b9b26322-3884-451f-b46a-f4e02848c865" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - External - Request" id="4abcf375-91f0-4f8f-ac3d-64357cddb0b3" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c93c37d4-32ee-480f-ad5c-03f22bd3da5a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="48de56b3-cd3a-4671-94bc-d2091baedabc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6397e01b-b1f4-42a4-88d8-c9948c32c145" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="434143d7-f804-40c7-a92e-8888840564a1" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - LB - Request" id="d383fd38-aab1-4387-b9d8-d7679e908f58" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="252055f2-32b6-419f-9ab0-30edeb14cb5a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="23127b19-1474-4056-a38b-77d2e57102ff" name="SOAP Response"/><con:assertion type="Schema Compliance" id="28971aa4-310b-4f15-a433-d5f659f6fb20" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="601e9917-411d-4be6-933d-db20022c44a5" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="76765fbf-45de-41f2-8d8b-01006e16cdc6" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c84f005d-15c4-4207-acc7-0998bb3ba558" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f06d4a4f-0ef8-437e-a8b6-55332f0b75f2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="73bf5cc5-1ff2-4957-83ff-ffb5d7b180e2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="8bbda1e5-3581-4af7-a217-3c6df405f41a" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="7b02d013-eec8-4263-8da7-f4522ba7d09d" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2117a1e9-68e8-4cfa-9d92-cf2a53fc97d4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f92b6709-8301-4333-9fa6-84d3cbd8ad34" name="SOAP Response"/><con:assertion type="Schema Compliance" id="04430507-929f-4ae0-9dec-7772d283d288" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="7e34771c-0c66-4bef-93ae-a31ba15f8b98" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="a2379cfc-6a25-4e5e-ba52-1358604211f9" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.191:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b6a25ee6-3781-4df8-baeb-8db452b636b1" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="44729767-f03e-4512-a2f9-d903bedaa0d4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="64e55ddf-ec44-41d3-90a6-c3035b2788b0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="5920f568-bcff-48a4-9690-f8b3131854e7" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="3c95d058-1ebc-473d-805d-2285d2005485" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.198:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="31a7e2d6-5038-4c8d-a3e6-ddaf225b5bb3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="80c43111-0834-420b-b0fc-678e13e9af82" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ba20d8d1-8013-4ce0-af57-25da28830ec0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="85930521-5db0-4581-a84c-519a7d60c80e" name="PROD"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b8248d48-12f9-4c0d-b40f-7a7d7af79d5d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getHouseHold" searchProperties="true"><con:settings/><con:testStep type="request" id="10b208b5-622a-4d85-a5e9-b15eaf9a6456" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase5 - Prod - External - Request" id="fc1cb4ae-b492-4b1c-b39c-1480b8e9c0e8" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="26c44fc4-8089-405d-9abe-512ada9a8a0b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c078edd1-e985-4cbb-97af-d7372c897035" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f6db9f5e-ca8f-4650-b885-70ad0aabd2a7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="1f36a793-4d64-4b28-8e0d-2f3381a2d69f" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase5 - Prod - LB - Request" id="53d5714b-7a53-403c-8c88-d7d42ce771cd" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a58eee90-be23-4218-8a59-167f6b7abffd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5f8378fd-d01b-4010-99f9-6396b44e3b02" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9c088c4f-2f51-4ad6-82b7-4d33d455d390" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="2362599b-c325-4658-a517-8f8364a24ddd" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="9d027e86-ed38-454a-8768-eab83b835483" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ecf83eaa-f44f-419d-aadc-b0813a1550b5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="65e4c89c-168f-4948-bb16-5fe2cdc10052" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3e7ab94d-5f60-4085-997e-3e7318836d7f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:testStep type="request" id="3ecddb13-22ac-4b61-b98c-b05aa02dbfd9" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HouseHoldHTTPBinding</con:interface><con:operation>getHouseHold</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="7b650702-aaae-4b87-9f1d-851d2570aba7" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/HouseHoldService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getHouseHoldRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getHouseHoldRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="512d2e91-3b9b-470b-9284-a5a1efdf2d61" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a76a60f4-e206-4b2e-a79a-ff44974b8ded" name="SOAP Response"/><con:assertion type="Schema Compliance" id="526b68b3-9c32-4f8e-96c9-38a111307861" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/household/getHouseHold"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>Outflow STAG</con:name></con:outgoing><con:outgoing><con:name>Outflow PROD</con:name></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>