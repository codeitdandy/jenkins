<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-PersonService-1.0-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="efe0aa1f-2a44-41ee-b006-1bbb321d7454" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PersonServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/personservice/v1}PersonServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl" id="ed9c9566-ab71-4610-a99e-aa2b2583faec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.cxf.CXFAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Output Directory" value=""/>
  <con:entry key="Server" value="false"/>
  <con:entry key="EXSH" value="false"/>
  <con:entry key="DNS" value="true"/>
  <con:entry key="Class Folder" value=""/>
  <con:entry key="WSDL" value="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"/>
  <con:entry key="Output Packages" value="&lt;xml-fragment/>"/>
  <con:entry key="Compile" value="false"/>
  <con:entry key="Bindings" value=""/>
  <con:entry key="Implementation" value="false"/>
  <con:entry key="Catalog" value=""/>
  <con:entry key="Use cached WSDL" value="true"/>
  <con:entry key="Exclude namespaces" value="&lt;xml-fragment/>"/>
  <con:entry key="DEX" value="true"/>
  <con:entry key="All Code" value="false"/>
  <con:entry key="build.xml" value="false"/>
  <con:entry key="Validate WSDL" value="false"/>
  <con:entry key="Java Args" value=""/>
  <con:entry key="Package" value=""/>
  <con:entry key="Client" value="false"/>
  <con:entry key="Tool Args" value=""/>
</xml-fragment>]]></con:setting></con:settings>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/personservice/v1" name="PersonService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/personservice/messages/v1" xmlns:tns="http://fidus.brussels/service/personservice/v1">
  <xsd:annotation>
    <xsd:documentation>Person service WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/personservice/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/personservice/messages/v1" schemaLocation="messages/personServiceMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="searchPersonByAddressRequestMessage">
    <wsdl:part name="SearchPersonByAddressRequest" element="mes:searchPersonByAddressRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonByAddressResponseMessage">
    <wsdl:part name="SearchPersonByAddressResponse" element="mes:searchPersonByAddressResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getIdentityResponse"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyRequestMessage">
    <wsdl:part name="SearchPersonPhoneticallyRequest" element="mes:searchPersonPhoneticallyRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyResponseMessage">
    <wsdl:part name="SearchPersonPhoneticallyResponse" element="mes:searchPersonPhoneticallyResponse"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getCBSSIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getCBSSIdentityResponse"/>
  </wsdl:message>
  <wsdl:portType name="PersonServicePortType">
    <wsdl:operation name="searchPersonByAddress">
      <wsdl:input message="tns:searchPersonByAddressRequestMessage"/>
      <wsdl:output message="tns:searchPersonByAddressResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <wsdl:input message="tns:getIdentityRequestMessage"/>
      <wsdl:output message="tns:getIdentityResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <wsdl:input message="tns:searchPersonPhoneticallyRequestMessage"/>
      <wsdl:output message="tns:searchPersonPhoneticallyResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <wsdl:input message="tns:getCBSSIdentityRequestMessage"/>
      <wsdl:output message="tns:getCBSSIdentityResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PersonServiceHTTPBinding" type="tns:PersonServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchPersonByAddress">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getCBSSIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PersonService_v1">
    <wsdl:port name="PersonService_v1" binding="tns:PersonServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/personservice/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/personServiceMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/personservice/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/personservice/messages/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:per="http://kszbcss.fgov.be/types/legaldata/person/v3" xmlns:periss="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../person/common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../person/legaldata/BaseLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/person/v3" schemaLocation="../person/legaldata/person/PersonLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" schemaLocation="../person/legaldata/person/PersonIssLegalDataV3.xsd"/>
  <xsd:simpleType name="GivenNameMatchingType">
    <xsd:annotation>
      <xsd:documentation>Type defining the possible ways to interpret the given firstnames during the phonetic search.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FIRST_LETTER_FIRST_GIVENNAME"/>
      <xsd:enumeration value="COMPLETE_FIRST_GIVENNAME"/>
      <xsd:enumeration value="ALL_GIVENNAME"/>
      <xsd:enumeration value="IGNORE_GIVENNAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PersonByAddressRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given address information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="postalCode" type="base:PostalCodeType" form="unqualified"/>
      <xsd:element name="streetCode" type="base:StreetCodeType" form="unqualified"/>
      <xsd:element name="houseNumber" type="base:HouseNumberType" form="unqualified"/>
      <xsd:element name="houseIndex" type="base:HouseIndexType" minOccurs="0" form="unqualified"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IdentityRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonPhoneticallyRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given phonetical name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="lastName" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1"/>
                  <xsd:maxLength value="48"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="givenName" type="base:GivenNameType" minOccurs="0" maxOccurs="3" form="unqualified"/>
            <xsd:element name="givenNameMatching" type="tns:GivenNameMatchingType" form="unqualified">
              <xsd:annotation>
                <xsd:documentation>Element specifying the behavior of the searchPersonPhonetically capability.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="birthDate" type="common:IncompleteDateType" form="unqualified"/>
            <xsd:element name="variation" minOccurs="0" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:maxInclusive value="99"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="genderCode" type="base:GenderCodeType" form="unqualified"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="maximumResultCount" minOccurs="0" form="unqualified">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="50"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonByAddressRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonPhoneticallyRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:IssResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="per:PersonResponseType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="periss:PersonResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="searchPersonByAddressRequest" type="tns:SearchPersonByAddressRequestType"/>
  <xsd:element name="searchPersonByAddressResponse" type="tns:SearchPersonByAddressResponseType"/>
  <xsd:element name="getIdentityRequest" type="tns:GetIdentityRequestType"/>
  <xsd:element name="getIdentityResponse" type="tns:GetIdentityResponseType"/>
  <xsd:element name="searchPersonPhoneticallyRequest" type="tns:SearchPersonPhoneticallyRequestType"/>
  <xsd:element name="searchPersonPhoneticallyResponse" type="tns:SearchPersonPhoneticallyResponseType"/>
  <xsd:element name="getCBSSIdentityRequest" type="tns:GetCBSSIdentityRequestType"/>
  <xsd:element name="getCBSSIdentityResponse" type="tns:GetCBSSIdentityResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 25-03-2011
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.1
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/BaseLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: BaseLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.2
	* Revision History		: 09-03-2011  	ForeignAddressContentFragment now contains an optional foreignCityCode element.
    *														ForeignLocationContentFragment now contains an optional foreignCityCode element.
	*														ForeignAddressRequestContentFragment now contains an optional foreignCityCode element.
	*														ForeignLocationRequestContentFragment now contains an optional foreignCityCode element.
	*														AddressContentFragment/number + length 10 constraint
	*														AddressContentFragment/boxNumber + length 10 constraint
	*														CivilStateInfoContentFragment/civilStateCode length constraint 5 changed to 2 (Leading to incompatible change)
	*														NisCodeType + length 5 constraint (Leading to incompatible change)
	*														NobilityTitleContenctFragment added
	*														BirthInfoContentFragment extended with ActContentFragment
	*														ForeignLocationContentFragment added to CivilStateInfoContentFragment
	*														ForeignLocationContentFragment. length constraint 3 changed to 5
	*														foreignCityCode length constraint 10 changed to 5
	*														foreignCityName length constraint 50 changed to 100
	*														Refactored RegisterType to PersonType
	*														Refactored to use common:SSINType
	*														Removed SSINType
	*														GenderCode refactored from String1Type to GenderType
	*														Refactored to use common:IncompleteDateType
	*														Removed IncompleteDateType
	*														FamilyMember information removed
	*									25-10-2011	Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored firstname to givenName
	*									16-02-2012	New major version
	*									16-03-2012	Added a content fragment for temporary address
	*														Created AddressClassType
	*														DescriptionType in CommonV3 changed, no language anymore: added specific DescriptionType here with optional language
	*														Using CommonV3 DescriptionType for civilstate and nobilitytitle (adding a size constraint of 100)
	*									04-04-2012	Removed class attribute from address types
	*														Added new structure for diplomatic addresses and posts
	*									07-09-2012	Codes in LegalData now possible in three languages
	*												Removed act from BirthInfo 
	*									01-10-2012	gender in request renamed to genderCode
	*														Changed type for inceptionDate elements: now xsd:date
	*									08-11-2012	name/name in request and response renamed to name/lastName
	*									28-01-2013	New minor version 3.1
	*														Added optional diplomaticPostName
	*														Added switch for partnerSsin with new element partnerReference
	*														Added AdministratorContentFragment
	*									08-04-2014	New minor version 3.2:
	*														Added BirthActContentFragment and BirthActTypeCode
	*														Added birthAct to BirthInfoContentFragment
	*														Added LegalCohabitationGroup, SubregisterGroup, AbsenceGroup, FiliationGroup
	*														Added BirthGroup, DeceaseGroup, CivilStateGroup and NationalityGroup for consultation per datagroup
	*									08-10-2014	Added expiration details for LegalCohabitation
	*									08-10-2014	Extracted partner type from Civilstate and also used it in LegalCohabitation
	*									04-02-2015	Created DiplomaticAddressHistoryContentFragment with multiple postaddresses to use in ResidentialAddressHistoryContentFragment
	*									10-02-2015	Created PlainAddressHistoryType to reflect expiry dates for diplomatic addresses and post addresses
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <!--Response content fragments-->
  <xsd:group name="NameInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" type="tns:PartnerType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SisOrIsiContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the social identification part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hasSocialIdentificationCard" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:group>
  <!--Request content fragments-->
  <xsd:group name="NameInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="partnerSsin" type="common:SsinType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--General content fragments-->
  <xsd:group name="NobilityTitleContentFragment">
    <xsd:annotation>
      <xsd:documentation>Type describing the nobility title of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitleCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="2"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nobilityTitleDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressHistoryType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressHistoryContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AdministratorContentFragment">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="location" type="tns:LocationType"/>
        <xsd:element name="specialNotion" type="tns:SpecialNotionType"/>
      </xsd:choice>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An optional post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressHistoryType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressHistoryType" minOccurs="0" maxOccurs="10">
        <xsd:annotation>
          <xsd:documentation>An optional list of post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TemporaryAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="temporaryAddress" type="tns:PlainAddressType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Datagroup content fragments-->
  <xsd:group name="SubregisterGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subregisterCode" type="tns:NRSubregisterCodeType"/>
      <xsd:element name="subregisterDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partner" type="tns:PartnerType"/>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="tns:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationBailiff" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="bailiffName">
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1"/>
                        <xsd:maxLength value="48"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="location" type="tns:LocationType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Place where civil state was registered.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationExpirationGroup">
    <xsd:sequence>
      <xsd:element name="expiryDate" type="xsd:date"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="reasonDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="location" type="tns:LocationType"/>
      <xsd:element name="notificationDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FiliationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filiationCode" type="tns:FiliationCodeType"/>
      <xsd:element name="filiationDescription" type="common:DescriptionType" minOccurs="0"/>
      <xsd:element name="parent" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="tns:ParentType">
              <xsd:attribute name="sequence" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:unsignedShort">
                    <xsd:maxInclusive value="3"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AbsenceGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="absenceCode" type="tns:AbsenceCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthGroup">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the DeceaseInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the CivilState information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="partnerSsin" type="common:SsinType"/>
              <xsd:element name="partnerReference">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="11"/>
                    <xsd:minLength value="1"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
            <xsd:element name="partnerName" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="tns:NameInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the NationalityInfo as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="justification" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="justificationCode">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:minInclusive value="0"/>
                  <xsd:maxInclusive value="999"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="justificationDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Types-->
  <xsd:simpleType name="GenderCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CivilstateCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonRegisterType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR"/>
      <xsd:enumeration value="BIS"/>
      <xsd:enumeration value="RAD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NRSubregisterCodeType">
    <xsd:annotation>
      <xsd:documentation>Code specifying the subregister of the National Registry in which the person can be found</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="CBSS"/>
      <xsd:enumeration value="BOTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FiliationCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GivenNameValueType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="48"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GivenNameType">
    <xsd:simpleContent>
      <xsd:extension base="tns:GivenNameValueType">
        <xsd:attribute name="sequence" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="3"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartnerType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="partnerName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ParentType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="parentSsin" type="common:SsinType"/>
        <xsd:element name="parentReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="parentBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="parentGender" type="tns:GenderCodeType" minOccurs="0"/>
      <xsd:element name="parentName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>Type describing a Belgian location (BelgianMunicipality). Can be used as a birthplace or decease place.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActType">
    <xsd:sequence>
      <xsd:element name="actTypeCode" type="tns:ActCodeType"/>
      <xsd:element name="actTypeDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SpecialNotionType">
    <xsd:annotation>
      <xsd:documentation>Container for special NIS codes occurring in the information type 001</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specialNotionCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="specialNotionName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PostalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StreetCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseIndexType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PlainAddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>the country of this address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="address" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the actual address, in unformatted form</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PlainAddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:PlainAddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" type="tns:CityCodeType" minOccurs="0"/>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="postalCode" type="tns:PostalCodeType" minOccurs="0"/>
      <xsd:element name="streetCode" type="tns:StreetCodeType" minOccurs="0"/>
      <xsd:element name="streetName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="houseNumber" type="tns:HouseNumberType" minOccurs="0"/>
      <xsd:element name="boxNumber" type="tns:BoxNumberType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:AddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DiplomaticPostType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>Country code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="diplomaticPostCode" type="tns:DiplomaticPostCodeType">
        <xsd:annotation>
          <xsd:documentation>The official code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticPostName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CountryCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CityCodeType">
    <xsd:annotation>
      <xsd:documentation>For Belgian locations this is the "NISCode", for foreign locations the cityCode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="DiplomaticPostCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AbsenceCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DatagroupStatusType">
    <xsd:annotation>
      <xsd:documentation>Type defining possible statuses of a datagroup occurrence</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DATA_FOUND"/>
      <xsd:enumeration value="NO_DATA_FOUND"/>
      <xsd:enumeration value="NOT_SUPPORTED"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 16-03-2012
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 09-03-2011  	NobilityTitleContentFragment added
	*														FamilyMembers datagroup removed
	*														PaymentAddress information removed
	*									25-10-2011	Refactored SSIN to camel case
	*														Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored unbounded NationalityInfo to 20
	*														Refactored unbounded CivilStateInfo to 20
	*									16-02-2012	New major version
	*									16-03-2012	Renamed residentialAddress to address
	*														Readded temporaryAddress
	*														CommonV3 BaseDescriptionType was renamed to DescriptionType
	*									07-09-2012	Removed subregister
	*									31-01-2013	added administrator
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/person/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonIssLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonIssLegalDatav3.xsd
	* Author					: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 04-04-2014
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 04-04-2014		Create PersonIssServiceV3 based on PersonServiceV3
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0beta1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
        </xsd:annotation>
      </xsd:group>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="registerInceptionDate" type="xsd:date">
      <xsd:annotation>
        <xsd:documentation>Date the person last entered the CBSS registries. Only present for BIS (creation date) and RAD (last RAD-in date) numbers</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="subregister" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:SubregisterGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="legalCohabitation" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:LegalCohabitationGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://fidus.brussels/services/personservice/v1</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/getIdentity" name="getIdentity" bindingOperationName="getIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="37782446-c7cc-4124-8f9c-72d13d0b07ca">
      <con:settings/>
      
      
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="9b354218-971c-4b4b-8b73-48b42e188d6f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      
      
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="d5ac1e83-c0e6-46a4-885b-5290d0b3e420">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="ce70dd41-8ecf-4c6c-9c8a-be3ca6af3724">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="43b3d025-e9f4-4351-9a95-94e4156ab666">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="8bccfa23-0ffe-433d-a652-0aa55ec1396a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="0aeafd29-c76a-4088-b770-35105a8b95a7">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="de2a30e7-e01c-4003-bc10-c3c9a454408a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="048341fb-a47a-4523-9892-3e538ff632cc">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="40595e83-d1a6-451f-9f26-a02595b73ee4">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="76a9e4ae-1fbd-4325-9a2e-c02f94b246fe">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="4054bf91-0a93-4f89-b218-9dfaecdb9b22" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c4e865d2-e8c5-4d34-a176-68de5a8657e4" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4c41d0e9-e341-481e-be8a-e3d5531309ca" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f426d497-7c8c-4af6-bf95-9b9fc01a8aeb" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0c10432c-3cdd-46ff-b1f4-ac23fc29ea32" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonByAddress" name="searchPersonByAddress" bindingOperationName="searchPersonByAddress" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ce38a6c-7ad5-442c-9f54-12e2a45b5a22">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="dc5f8e0f-3abc-41ff-8408-488888ef65be">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1481</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="96e62530-b8b7-4d46-be40-914b252ca667" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4fdf64fb-d478-4164-823d-4ea01aa4d298" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="bd14dd5b-7781-4ee2-8ccf-62d39077335e" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4cf18017-ee69-4750-af75-556f3f9fa371" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="9d2d20b2-ab33-4073-8388-b2b24e4b1e93" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="ce05d58f-458e-45a2-99bb-5464937162c5" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="fa9d8d9d-f74b-4016-9573-bc46c4c59f8f" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e03ee615-c9c3-4ad0-be69-11f89a3cf25f" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="85a4ad10-d22b-4e61-9773-e8480aae2de9" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="dc958878-2705-405e-bdee-e2347006388b" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="57836cf7-beed-4cdd-9ebc-9edaa21f9b5f" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="1e9bd60d-d233-410e-8ac9-8b0e1b9730e1" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="2fcc253d-1c54-482f-a8ef-6ee76c88251c" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="d0d2467b-e44f-4d98-83c7-3445155531bc" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="104c0ba3-e4a4-4755-91f0-21300b23a57f" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8e24ca88-5589-43f7-b289-5f0143e1b3cb" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b3922a18-5965-4e81-9c0c-27b3d94b839c" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f2c46c4c-5ff9-411a-b5ed-080f4d259776" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonPhonetically" name="searchPersonPhonetically" bindingOperationName="searchPersonPhonetically" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="963fba3d-d71d-4af1-b0ec-fb7dea19318c">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="ee0ebece-4826-4161-9fe7-a92fe233be58">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a9f1546e-50d6-49ff-97db-59f679b6e803" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="0eb96b84-438b-4b43-9b0e-364a4d879a4a" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="29cd5922-4b29-445e-9676-3bcb8a6a77f0" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="66e10986-5ba2-4be8-92e9-f244ee0db419" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="7774e707-8bb1-4aea-8d05-d31a1178f213" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="494189e7-d53f-4a37-b2ba-57c8cc4fbac6" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a0a75e53-d03d-4c37-a14e-ef1481a95b83" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a1588266-1de2-4249-aa20-79ae3bb93dda" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="543512c3-c165-4d8a-a66f-4f258c4308bc" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="3a0e7434-1658-489e-9ed3-44d5962510cd" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="b4b443cb-bc32-41d9-b03c-b3d11365f420" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="6cd9199d-4fcb-4533-9737-50bec44c6c06" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="8e4d5e0d-8b7f-4832-8583-7527b5b02192" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="e37aecba-4d68-420e-bdbd-0a0faa90d973" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8a5e3e1a-d9ac-4d9a-b5fe-d4276360ade6" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ac6a1bea-d396-4a81-9630-7c22f7380109" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="384d0ba2-46f8-4939-99c8-ab96a1587ad7" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b65ddc7-9fac-42d3-bff7-ef5085425add" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
  <con:operation id="62c05a83-d23c-47d0-b80d-d1c266b592ee" isOneWay="false" action="http://fidus.brussels/services/personservice/getCBSSIdentity" name="getCBSSIdentity" bindingOperationName="getCBSSIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5058bf2-d7bb-446f-bc3a-b809dfe231e9" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="df9b33fb-4355-4094-bc45-27137afbba35" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="bb7d46b8-7c28-4b77-ae75-3d0cd0f2e406" name="3 - Test - LB - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="63cc9021-a899-419e-80bf-9180c1c760cb" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b197eb99-abf5-461b-a4b9-18077e3372a3" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="342c0435-a5db-4e15-bb4e-bfd6ec7c7c4a" name="3 - Test - Worker2 - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3046e077-915f-4f81-9a73-3560519dd410" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90b593ff-1332-48cd-9046-fe59bc552700" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="26e7ddef-3a32-4429-92d6-743cea5b69be" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d68ab661-98c5-4d26-ae68-f4c20bc4d6b0" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f9e84250-19fe-4cb9-8350-8c5d32c74ea2" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="39c84b0d-93b5-4525-aeb7-1a55c5852559" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f0b54c0f-1afe-415e-a09e-8d41ae7a5338" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9fd4f6fb-a38b-4f6e-9ed0-87934b90163e" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a963a5d2-9974-4f35-a69a-f0cd96fe8840" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="84cec9da-4f6d-49ff-b70b-b34d0f874e36" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="805cfaca-a109-463e-9126-950c7d41dd68" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="a67c99d2-df9d-4acc-a0d6-3a3e0eb29dc6" wsaVersion="NONE" name="ReferenceDirServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/referencedir/v1}ReferenceDirServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl"><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/referencedir/v1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mes="http://fidus.brussels/service/referencedir/messages/v1" xmlns:tns="http://fidus.brussels/service/referencedir/v1">
  <wsdl:types>
    <xs:schema targetNamespace="http://fidus.brussels/service/referencedir/v1" elementFormDefault="qualified">
      <xs:import namespace="http://fidus.brussels/service/referencedir/messages/v1" schemaLocation="messages/referenceDirMessages_v1.xsd"/>
      <xs:import schemaLocation="messages/faultTypes_v1.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="SubscribeRequestMessage">
    <wsdl:part name="SubscribeRequest" element="mes:subscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="SubscribeResponseMessage">
    <wsdl:part name="SubscribeResponse" element="mes:subscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeRequestMessage">
    <wsdl:part name="UnsubscribeRequest" element="mes:unsubscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeResponseMessage">
    <wsdl:part name="UnsubscribeResponse" element="mes:unsubscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageMessageId">
    <wsdl:part name="messageId" element="messageId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTransactionId">
    <wsdl:part name="transactionId" element="transactionId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTimestamp">
    <wsdl:part name="timestamp" element="timestamp"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageError">
    <wsdl:part name="error" element="error"/>
  </wsdl:message>
  <wsdl:message name="GetServicesRequestMessage">
    <wsdl:part name="GetServicesRequest" element="mes:getServicesReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="GetServicesResponseMessage">
    <wsdl:part name="GetServicesResponse" element="mes:getServicesReferenceResponse"/>
  </wsdl:message>
  <wsdl:portType name="ReferenceDirServicePortType">
    <wsdl:operation name="subscribeReference">
      <wsdl:input message="tns:SubscribeRequestMessage"/>
      <wsdl:output message="tns:SubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <wsdl:input message="tns:UnsubscribeRequestMessage"/>
      <wsdl:output message="tns:UnsubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <wsdl:input message="tns:GetServicesRequestMessage"/>
      <wsdl:output message="tns:GetServicesResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReferenceDirServiceHTTPBinding" type="tns:ReferenceDirServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="subscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/subscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/unsubscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/getServicesReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReferenceDirService_v1">
    <wsdl:port name="ReferenceDirService_v1" binding="tns:ReferenceDirServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/referencedir/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirMessages_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirMessages.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Messages
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/service/referencedir/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sub="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:uns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:ser="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:tns="http://fidus.brussels/service/referencedir/messages/v1">
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" schemaLocation="referenceDirSubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" schemaLocation="referenceDirUnsubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" schemaLocation="referenceDirGetServicesTypes_v1.xsd"/>
  <xs:element name="subscribeReferenceRequest" type="sub:SubscribeReferenceRequestType"/>
  <xs:element name="subscribeReferenceResponse" type="sub:SubscribeReferenceResponseType"/>
  <xs:element name="unsubscribeReferenceRequest" type="uns:UnsubscribeReferenceRequestType"/>
  <xs:element name="unsubscribeReferenceResponse" type="uns:UnsubscribeReferenceResponseType"/>
  <xs:element name="getServicesReferenceRequest" type="ser:GetServicesReferenceRequestType"/>
  <xs:element name="getServicesReferenceResponse" type="ser:GetServicesReferenceResponseType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirSubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Subscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/subscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="SubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="subscriptionRequest" type="req:SubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="subscriptionResponse" type="req:SubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:complexType name="SubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesResponseType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="1"/>
      <xs:element name="operations" type="tns:Operations" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Operations">
    <xs:sequence>
      <xs:element name="operation" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceType">
    <xs:sequence>
      <xs:element name="personNumber" type="cme:PersonNumberType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirUnsubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="UnsubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="unsubscriptionRequest" type="req:UnsubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="unsubscriptionResponse" type="req:UnsubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirGetServicesTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/getservices/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="GetServicesReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="getServicesRequest" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="getServicesReferenceResponse" type="req:GetServicesResponseType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/faultTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/messages/v1" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <!--fault elements-->
  <xsd:element name="messageId" type="cmn:MessageIdType"/>
  <xsd:element name="transactionId" type="cmn:MessageIdType"/>
  <xsd:element name="timestamp" type="xsd:dateTime"/>
  <xsd:element name="error" type="errorType"/>
  <xsd:complexType name="errorType">
    <xsd:sequence>
      <xsd:element name="code" type="cmn:MessageIdType"/>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:any namespace="http://schemas.xmlsoap.org/soap/envelope/" processContents="skip" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint></con:endpoints><con:operation id="312f45c1-9afa-4a5f-8119-e5d4fe428d15" isOneWay="false" action="http://fidus.brussels/services/referencedir/getServicesReference" name="getServicesReference" bindingOperationName="getServicesReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d7af34a-7bf2-487a-bbfc-0a7fdbc99c9e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getServicesReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:getServicesRequest>?</v11:getServicesRequest>
      </v1:getServicesReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/getServicesReference"/></con:call></con:operation><con:operation id="04f77d08-1546-46ed-8803-a95db3a43aa8" isOneWay="false" action="http://fidus.brussels/services/referencedir/subscribeReference" name="subscribeReference" bindingOperationName="subscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="13aeea11-79e8-45e7-ab63-6d93700b6a91" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:subscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:subscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:subscriptionRequest>
      </v1:subscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/subscribeReference"/></con:call></con:operation><con:operation id="c3d429ac-8c85-4a08-bb68-e8cf7c36abad" isOneWay="false" action="http://fidus.brussels/services/referencedir/unsubscribeReference" name="unsubscribeReference" bindingOperationName="unsubscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9b7cb6cd-42be-46e5-9456-ebda15a5e893" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:unsubscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:unsubscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:unsubscriptionRequest>
      </v1:unsubscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/unsubscribeReference"/></con:call></con:operation></con:interface><con:testSuite id="53058532-9331-450d-a221-d7fffef9bc17" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3f70a50c-a745-46bd-860b-d7e82c961db9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="c0e5e57c-5b3c-45bc-932c-2d1224fdeef4" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="67c17574-9756-4628-a414-6aa0b02da3ef" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8bb164bc-5589-4193-b1ec-bf528aabf6c8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3e8330f8-5aba-4ee2-8f07-802343f47017" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3675a662-bc67-4921-82dc-d9667a352098" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="aceb032b-339d-4f86-ac5d-b33843cd1535" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="46b1aff6-f8d4-47e4-bf3b-1e8af6fea0b7" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="51251923-742b-425f-bbf6-b522f946da09" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="21d07207-c99a-459b-a362-e7821d2df5ce" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e378b3b4-8502-442f-8853-b8f55229e7fb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="9733447e-8385-4074-9529-23cd9e31f619" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="462c1b9d-2b00-4d72-b2c9-b4cc97b812d8" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="886f50d2-b35a-4598-8eea-cfbb68737133" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6268aabc-72aa-4ad7-a8d4-f6476273de4f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="93f34010-bad2-48f4-8b7d-901cb693f152" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3f5a7727-ce1a-423a-97fc-5765f1cce4c3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="b49f9e88-f781-4ddb-819d-d92127c97359" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - External - Request" id="b133a3b8-31b7-4bba-89af-526d267a376d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="aa59a085-d1b5-4511-a871-8fd9dc555882" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="233dc271-d28c-43fa-b2cf-e5fd73845703" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2c50d9bc-26c1-4dc0-9de6-4c9c9cc588fb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="f51161a9-32b5-404c-8328-bab6da912fad" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - LB - Request" id="569317c8-50bd-4936-b9dd-b44625819bc6" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="311b865e-cbb3-43cf-8c72-ca0399af1fc4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a166c517-c601-42b9-934a-aeccd8f7656d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c6db4b15-27ed-4b35-888f-72595a655c5f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="47238ae3-8b2d-4bc2-8f59-299b9c5d2e61" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="a98dddad-3b14-417d-901e-eed71b938751" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4ade04fd-1e90-40b3-b153-d5e6920a8067" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9884092c-6fef-4b23-ae39-5b8525a42bd3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="758050a0-d720-4bc3-988c-3b961451f76f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="0b1974a5-d96e-4171-8671-2c79024cd5ee" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="4e38914c-cdd6-4c54-a7f4-135bd8a4f88d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="81a18a53-9358-46b5-82d5-8abd814800b4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8fb2e928-0101-4cc3-beb1-bf7cc97ab29c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f3662ba5-a09b-4868-9c0b-2572fd2f0236" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="2521411f-3620-4543-a533-55c8b09a98b4" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="dd414c6b-e348-4bbd-b793-8765b639f14e" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4d6090c3-525c-4056-bfc8-412780257c36" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9761700a-fe80-4f8b-a545-39e55f5d98f2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="61439d57-6abe-4760-b261-f7122f572f13" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="c236e92c-76ad-4316-953e-745bb0cceef3" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="d927f16e-2e30-4ff4-ad8f-7af6eb32dd76" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6b8a5996-060e-49d4-a677-de4064deceb6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0469af39-b864-4c94-b0cb-418c89b77810" name="SOAP Response"/><con:assertion type="Schema Compliance" id="20c65f31-7060-43fa-84dc-718d10ffc54b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="850dfcfd-57d0-458d-83e1-cfe1e8ecb544" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="a6aa9f5c-ef8f-4a53-8f37-44927fe849c0" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - External - Request" id="3165bd56-6c2a-4ae2-bb64-e059609ce1a7" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="62e9efa1-6272-4693-95c3-0025e0f39096" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3ea5895b-ee75-43fa-9bd1-7f542536c15c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="8b0917b8-3dba-47a5-af27-7046a96794a9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="a4169538-a61b-4a2f-9f01-0d0e70ab9335" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - LB - Request" id="e5dd6196-23c0-4349-9327-9fd084915cbb" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="51e615fa-a324-498c-a233-90fc18b313b2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d455a91f-ad67-4964-a0bd-25921fa82b1c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1e410aae-a6a4-41d7-837a-fad7f1f538a9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="9c1341a1-406f-4bc9-bdc8-66f6b80f4768" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="f968c359-05c6-4951-acd1-f5cfb15999e6" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="93dcf224-72aa-4ff9-bbaa-fa4d2e8830a3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="14cc2124-503d-462c-8228-f5b7e4739e5b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="82fb6930-681d-4fc2-9170-7a91b18eef89" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="09ed348c-c1a0-466f-971f-aef3a7019bef" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="923b60af-2080-4819-a597-4aa08a06229e" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5cc31fc3-8930-4eae-a966-50a1007dd7f3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f848bcfd-3096-4300-9dfd-fd26b4b69b74" name="SOAP Response"/><con:assertion type="Schema Compliance" id="79d4836f-0ba1-4f3c-872f-bea8928d7c62" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="495d128c-51e6-45fe-921e-5a97d21eb9a7" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="cfeacb93-1cb1-44c1-b43a-d69aa708763e" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6bb98b77-0b05-44f2-8048-f73523657b60" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="588104ea-86e7-4874-8efa-04143d0f8752" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4beba84f-93a0-4bb2-8b2b-1de85dbf0a37" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="162ee137-dd40-4653-b429-63252e0ef3fd" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="4724dfe7-118e-4dad-af6f-6f29902d263f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8238623b-9a51-49bc-8482-a85761a7fd05" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d047fa28-69a2-409c-87e4-381b5d5f89f4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="696a7542-8577-40d6-b79b-1447df5d1123" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4e19d472-b3e9-48ac-80cb-202d987e5a3c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="d975b161-57be-4229-b4e4-7cca107ac31a" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - LB - Request" id="3bb68340-a4f0-4261-9f07-1165edcac71a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="dd8361ca-4b18-489a-bb05-a2823f7abbe6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7d69e6c8-1fb9-4645-88aa-a6bf31724e99" name="SOAP Response"/><con:assertion type="Schema Compliance" id="101cd8a9-7d95-4eed-9532-5dd3ebf71b0a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="6585d03b-2db0-4c53-b11b-7da09d1c033f" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="e815932a-4330-4204-8bff-ee68bb86543b" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="42d951d6-c1f2-4eda-89dd-d7bee4dd8ccc" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="044ecb53-9c21-42a9-92fe-708e7cb15512" name="SOAP Response"/><con:assertion type="Schema Compliance" id="8afba509-2733-4a71-bffe-2dd760e7a6d6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4e81fcb5-19e9-4062-ac30-5c0b81cda5e9" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="fcfe886e-ec51-48ce-bb4c-d3c96b2121c0" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c47df0c9-56cd-4365-aad8-57e6e0d80c4b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1d727b4d-f3a1-4c44-8569-82ee45d262a7" name="SOAP Response"/><con:assertion type="Schema Compliance" id="736bac28-5b49-4abc-91bd-fd6abf072235" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="6b476d6e-68c2-408b-b2f1-0577e3a52b8b" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="2dd0f266-2a08-4bf6-91ed-783626e569cf" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5e007aa4-0589-427d-8920-de6c7b908305" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5f0f3d30-0c05-4fc0-b6b4-811910debaf2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a63d552e-dea8-48be-9abd-90568c1c75d3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="c2b0f9d1-b83d-44a5-81d6-3f1bde35bbea" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="55ca069c-73f0-4e0d-9146-470349e7ac00" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f4f509a8-1811-4316-9cd5-944549714dcd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="825747a9-f2db-4738-b94d-496727d8dfbc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="bf7e0f4d-fc54-4353-ac37-d783c280ae04" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="2e4c6dc5-0c20-4e08-bf64-3f7dcc23bc25" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="323d9c09-3e59-4731-9718-6f1dee1367b2" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="949a9f85-3a4c-4871-8220-8386eb9dcf00" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fd2dc277-b1c3-4e93-8dd4-39851ed4ca02" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d500be1a-b1cd-4c3a-82ae-09621b31e39b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="b4255999-6f98-453a-b54d-7c7c63b433f6" name="STAG"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5b470f78-8cc5-414c-b991-8aa3096e6618" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="52ab965e-6a53-4800-9010-6a4a30fa1e3d" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="36e1f6c5-211f-49f7-a16a-68dd1c8c9538" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="55ce8595-e870-4654-808d-c5fef6b88cf8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e0ba4e6f-272c-4d51-b7d8-1facfcae6b97" name="SOAP Response"/><con:assertion type="Schema Compliance" id="de13cbb1-f62e-45c1-b114-3a1acee75baa" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="b9d6b77c-a4fe-481f-9921-dee79f440c4c" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="81705eb8-404d-40e1-9a2c-48f1720b53ea" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7a11f6f0-1e01-4dc7-88a6-f3b3b83cf9b9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="de7ee004-8184-400c-a7ec-8c9fe056210b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="649927a6-a132-4f3a-88f2-d20811e5ffb3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="62146fda-136d-48d4-a8a0-3e371d1ba532" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="2eba86c8-ff3f-4f04-b5b5-c4f81ca8fa34" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a7fba8de-67ab-4981-bc52-6083eb60eaf5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="96ee642c-e7c2-4081-9064-9643628dbe47" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4744657a-a3cb-483e-b2bb-04734e62689c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="8f84ba85-2d7f-42ba-8706-5947c4ca2ac5" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="d4f14504-fd22-4c83-8ace-f483fbdf9d4c" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="99586b34-be39-4132-89f1-3c9a2a62fd66" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="62351eaf-5335-43d5-868b-2ef04c4833ac" name="SOAP Response"/><con:assertion type="Schema Compliance" id="46ab32d5-8427-42f0-b645-e60762e7b3a3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="6260a9b0-f736-4769-b8f4-4a8158968cdf" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="5eb9d72f-66b5-4f3a-aa1f-5a7290671b32" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4229d7b3-d47b-4302-b43e-fb85256623ab" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="00ecd890-d467-460b-acdf-75be7abc3bf9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="509551cd-abf0-4140-86f2-163529e0ab46" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="356d5d25-f3ea-487c-8d5a-33e415d37141" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="d1c8131a-0b9c-44d0-8faa-dc916cf1af46" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5d3155a1-857b-484f-a1f0-490e095f6de6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e2c71897-8c4f-4666-814f-d8ba5d6c4375" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f2790f2a-3593-4cae-a38d-85b8a01590a0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="24503b3a-2031-4a9a-97b2-cfdf176ef326" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="7677dc83-86dc-49ee-b9ed-e897a110f14d" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - LB - Request" id="fcee3c21-ef02-4bef-84dd-2fba7ed5095e" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="80d18bd3-4b47-4f01-a882-467c9b779f2d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c1d22899-cdd1-4523-9c10-f38f7c0e537f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cab2fec8-8d05-4a54-ba11-3e6f19727430" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="ef6be5a6-b009-4a66-b118-3eb43efa86ac" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="9795b787-519a-4756-9db2-7abc8616f694" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c3150c58-5780-4b5b-926b-08af65fccdb4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="08461a21-ecec-4c2a-8859-04368bdc501f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7b538ff8-e962-40c5-acb0-26b02418cf2b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="08dd217b-1c6d-4f90-bea7-d4a732d503c9" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="de1c5455-c785-4b9d-8fa7-ebc116228c70" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="01a7ef25-006a-4135-b882-b7cb7d46a2ab" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="48d621d7-14c5-4e00-8d61-d588a39b6b56" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e13e424a-342d-4e39-bf11-975873ff8d1b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="9009f013-9347-4e69-990a-8b48731cac18" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - External - Request" id="e40a04dd-cc6a-40c2-90d4-cd350204ff38" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f656fddb-053b-433e-881b-9dc6611b8e29" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3c5d137a-dfcd-43ec-9c88-8102d040cef6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="67dafa04-70fa-4627-a2dd-7f05f84801f2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="3da812ca-8fe7-4649-8eb7-6208e910135c" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="56aae476-a399-4f30-a45d-b7e96dffd8fd" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1b4114b1-7a3b-4357-b9a6-7806207eba14" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ae723354-cadc-4649-8011-46a3a2be33b0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6174c690-e395-4d24-80e7-87cc86108716" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="3b39d573-9c35-41d1-b935-c3f175fa31ed" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="dc86398d-612e-4fd9-bb84-95dd69112023" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f69c32b0-aec3-4767-a098-64ffb48fe838" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d3a248a2-7d8b-489c-aae6-326e84e5cc3a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2eec5c66-f353-4308-8c3f-2573fad21a8d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="66922d87-b541-42e8-aa83-ffe1ed4befa8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="c2a66d09-87db-43d1-a54f-9a0f16334c11" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="03816b27-8b40-45fc-a9c8-b88d48b605f4" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f32f7345-7a72-4a91-8bff-53cf2b93d01a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="75fde2ed-b5fd-4628-b8e6-9c631a701f36" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cdfebf14-4e9b-4064-bb82-9db3be521a81" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="0b04b6b9-7849-49d9-b8ff-0528f2a5bc4c" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="753fa859-43cd-46ca-8263-9c3e0515cbcb" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="454a9700-e54e-4120-a4ab-caca6b730470" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="04bf5a7b-684c-47f1-9cdb-652ec2a479f0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="431c7527-eda5-42af-9342-605ee1830903" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="d779fe3f-ad6d-4b5a-86cc-166913fb433c" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - External - Request" id="cb1f60f0-0c1f-4873-8922-29965dabad69" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d72d8a34-af45-4f73-a257-c12d71e74e74" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="75d7c415-bdf6-4eba-8401-37c3bc3b998e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f26ba6d5-779b-4d5b-ac78-d61b07106cb9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="c230c95d-6006-4466-b5fb-9cc75079fa0f" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - LB - Request" id="6776cb80-1529-415f-a818-5b4431f5895d" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="84e2f2ad-b793-484e-a52c-b6d9cb6cce11" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="27dce6e7-4858-4e02-8b80-c246adf5759a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f6e10625-9448-4cbe-90c9-4651652bc0d6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="1886a82a-7255-486c-b0cc-64834108e654" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="88a360db-8d37-4515-be83-6e18668f73ce" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="98b5215d-996c-42e5-9e0d-eb490dd36bc6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b234ed88-468e-4c16-bf3c-f014590c1519" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dadd8069-8634-4e21-82ec-03a188948f66" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="289aeae1-92c8-403f-8b99-8a395f642b80" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="7339aa76-8ffe-4427-9d64-4460f93e6d68" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f2c09742-d081-48e8-8fce-4bf05fd9abf5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5e3f6dee-ac02-4e28-b612-d101d383e506" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6f75219f-d7f3-4882-b8d6-fde5bfab251d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cbd038fe-df70-4da0-9043-e65edc479dc5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="605eb31e-945b-4d6f-b27d-8d56d981cf96" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="4a8765b4-084c-49a6-846c-db7bcd25b5ea" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4f1ccebf-df6f-41b1-b81b-174f97c9f180" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f7fa5d07-f278-4183-b996-a8b3b548ca51" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f8ac52f1-bf18-42f3-87f4-fde16fbbb29d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="750f61b0-180c-4955-b884-d467111e5355" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="a6163855-d1ea-423f-a36b-2a0567b7ad47" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="047e5c7a-c208-4863-8559-92812f212457" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="bb6c4c8c-7c11-4fca-8819-0c089171910e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4f7a70e9-e202-415a-9cf7-7d0a572dfd74" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="34dfdb94-0d66-4504-9293-5a5d2ca56305" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="a4cc82a5-a3cc-4900-bad7-7260026df69b" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="14c441cd-eeb8-4023-967c-06d8b67f72fc" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7903d9e4-bd29-45a6-aaea-7b73d89e5f14" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ba240c8b-3512-447e-bdf0-775094cda52d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="3163027b-bd9e-49bd-b993-6651b968d1b0" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="53bc2089-a9a9-47f6-8376-dc9b891025e8" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7706a6d4-55a5-4e55-9aac-5f3b032f1685" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6d523144-aa60-4d45-9f27-a6b81bcb61e6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="753e77cb-6859-4779-a016-2435b5c77143" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="5b5b1647-d2c3-41e6-b5ff-aeff64944f3c" name="PROD"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="08d21e0f-5fa4-4af1-9979-30e643194c6e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="a81cb741-7772-4dbd-860e-5f466496b874" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="49540137-97a5-4dbb-9a51-de514b49698c" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6fd9f46c-c272-4b4e-b96d-bfb22b0b42dd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="47c7e26d-23f8-4207-98a3-d1e37e9035be" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f57e93eb-699e-4028-b7ab-3da706808d73" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="137d3273-0854-4275-afed-de68140ad411" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="e02f8bed-62e6-4c17-b1ad-587c5fba7469" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9fb4dc2a-cfcb-47a1-96d0-5586bbdb6d47" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="873b42d8-ca8e-489e-90f1-fdbfbc1dc204" name="SOAP Response"/><con:assertion type="Schema Compliance" id="42e4aba5-48b7-47e1-a9aa-ba84298a2607" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="be4c3938-82ce-46d3-9673-47198b2e71c8" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="b4233330-2471-425b-b7bf-47ad564a1e38" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="96b3bfb2-6e00-46e2-8b64-1877f832d5f1" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2218f051-0475-4172-b49b-a55db6508bcf" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f10f5bcf-6f5b-4800-aeaf-68f115f610f9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="6de08016-9573-468b-8d00-cdbf1163d7c1" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="663a34d9-0669-454d-8d3a-f1ad99b681e7" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2c1fc5f6-a8d1-4ecb-bb4f-890e2593c03d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="358efdef-5b37-4185-940f-bf3b3debf3a6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ce5f151f-ebca-4b9b-90a4-4d7bea3a6ccd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fb007a9b-a3d4-4e83-92f7-c349c47ba57c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="8ccba953-c284-49ce-aba0-daa048a00417" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - External - Request" id="a2d7f217-d8a3-45f0-8ad9-1e2611e27ae6" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="fa2e65f9-79ab-426c-8b2a-5c1038faaada" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f95b6ecf-aeaf-48c7-a751-56478c9f58d9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9b97ce9b-34ec-4614-9e9d-431049fa0b9d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="63a8905d-697f-44b1-91d9-2c01d92073c2" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - LB - Request" id="79f6da36-caef-48c7-a4bf-ea78ee363b25" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="25a0f93a-7197-4546-99a3-4976ec0d3ded" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="02bf92a8-e3c3-4ef2-ac3f-c04ca80d610d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c51d2952-b88d-4f5f-9ba9-2e29ab68cd7d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="946cc024-8831-4fc5-bc08-9f562db5c08a" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="b7364623-9377-4a22-a8cc-91aa2b495d5e" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2500f504-49bd-40d9-9839-ace73ca15dd6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e56d91ce-b4c9-4f65-9536-0410ee388215" name="SOAP Response"/><con:assertion type="Schema Compliance" id="8f33503f-b134-4ef0-b02a-206c217edd4b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="f969cc5d-fd63-462b-b82c-9737ecdf97a5" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="4e313d62-5a99-439b-9dc8-305a5a4d6a75" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="02b26776-b47c-48c8-96dc-9295005bad9b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d85056b3-4402-4f02-9cab-3df1ac22e644" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0f6504bf-21b5-4092-856b-7f42cef3293b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2693b135-659c-43a9-8980-314766b454fa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="e6b8bfd1-b869-4a52-abcf-141a13e0a201" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - External - Request" id="45684928-a37f-46c2-9cce-68d50d5b9db8" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="3601c1ae-4088-4cb6-bb53-ea1499b9ad94" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1765585e-23a6-4bba-83ec-61abb41b4f57" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2b8d667b-731f-4833-a60a-78cf59a634b2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="810c7921-fa9f-438a-947e-f7f172b0606e" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - LB - Request" id="41507a92-f49e-4b27-b37d-81da4218126c" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6e2d59b5-b371-45b3-91cf-a47e22caed40" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2d56b707-5f31-4efb-a613-37f5292818c1" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9786fe55-e862-4acd-b65e-f9e42b6ee47c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="211e2b7a-fbc9-4e2e-93bb-5889d44cd10b" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="c6909189-26ce-4683-9b53-533d73e9ecdb" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5f0dfbdc-aacd-408e-8a6d-e6f92e009384" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cf77334b-c30a-4a9f-8038-a6da2f1da87f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="96a55527-6a0b-4e0e-ab03-f69dc4e5f21d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="8b7a9245-52c6-4751-80de-880006470474" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="85419908-3b64-46ff-8c8a-781f17d1aeb0" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="faa0a772-c1ad-4389-aed8-2622edf15827" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2a18bcdc-4866-42ca-a0f5-5463c54192f0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="476ab55c-76ed-498f-bb54-c83c6ebb52b6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1fb76856-1fca-4e6f-b11f-47f924c958ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="6dd64380-07cd-4da2-961b-c01a4feee72e" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="c2a570fc-95c1-444b-bb08-e1022fe1fa46" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d0437548-a03c-4b5c-b068-e15db859caea" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c24bec37-e6a4-41d7-a4a1-281e1d8b108b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d9841105-6279-4892-b3b1-bb34a070cdbf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="7dc9867a-b2e4-4301-9c00-0a5dc7d6b07b" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="bc9813b3-db71-47ef-954b-519cb95099b3" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="97376383-353b-4d8f-91fa-a1df57358856" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d8b8cf6b-becf-4c6a-9b60-e766a37d2e5c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3889b356-f84e-4514-b8a7-1223652199d0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4885e81b-4990-45b0-84ab-6cc6118dffd1" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="cc309d6a-5487-4c9c-9df9-857ccc21cb7d" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b4d65956-7c57-49f6-ad34-608853588472" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ca0b0466-ee2a-4656-87bf-46eb4b941277" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e7b80151-175a-4431-83b3-27f7d8b7be6d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="b120fbcd-f1a1-4935-8c33-ae42772fc6fa" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="5636ac70-a5f4-442a-bb5b-fec56d41a615" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="dbf61c3a-c4e8-4db4-a1d3-f58a7e28e56d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3c9435a1-f81b-45f6-a8ad-c344d0df4a19" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a836bb01-b0f4-468b-828d-53492eb372d7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="d73c45be-c40a-456f-a87e-b930a1c9c6b3" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7e33c994-ec2d-4476-bccb-962ffc85b33d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="b3666e41-98dd-4ee6-97a2-4b8982224dc5" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="52d4a9d0-c488-400a-b253-61bce5db7b27" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="039d90cc-b5f2-45e9-8d73-a420eb92a5fb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4308899f-b586-45e3-8846-b8e45c2b1c4f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fe6276da-68ad-4cfa-a0fb-0f1384c3ecb5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c6f5d910-8dd9-41bb-8799-73b6eb0903da" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="19eb004c-3490-4c82-b432-86272e36ba8c" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - Dev - Request" id="ad090e4c-74ea-4e43-b37b-0062f64910a5" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2739b073-935a-4d4f-a7fa-7e1367e58576" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="edaba7d3-ba65-43ae-9009-a46da72bba83" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0f295470-d8a6-42cc-9925-c3cf0337f01b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="67956726-312b-48d0-8de6-7598f63a0cb9" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - DevNew - Request" id="4f75c258-b7b7-4dfb-a07c-70932c81d3fc" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="133c774f-4463-4297-9370-2f5b7cc9b0c0" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="137888e2-8e7e-4622-ac84-d9e6c530abdc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="339b186e-3541-4836-bf1b-c5a3cf688a79" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9159318e-8458-4987-ba97-ed0c38907e48" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="d0d0fb36-c7fb-4c07-89c2-aa95c7f8ce44" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - Dev - Request" id="e0b394cc-07fa-4665-9f42-61f943b20d95" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="fb2a835b-4843-4b7e-89e0-ca00927acd96" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d6f23871-f498-44ff-9523-0077e42f2802" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f4143fa1-3dd2-4f53-bd0c-95f54c6f112d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="347a962d-7554-4074-809e-27b2a2256a84" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - DevNew - Request" id="478c7016-de78-4ee0-9599-454bb32910bb" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="379e00a3-1c58-430e-941b-d247c4d586ae" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="91e7a638-647e-4985-ada9-3d9ff807fe69" name="SOAP Response"/><con:assertion type="Schema Compliance" id="444fd775-6322-4cb1-9d8b-8741f3e6a41e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c86b8ab7-7cc2-4a3d-bd78-637418656848" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="ded87571-5981-46a6-9b2a-b60def5a4a2f" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="e0da8576-b18b-449a-aa79-5611dc316a93" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0a293e2c-2e3d-46e5-956c-adac9927efba" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a612a238-ded8-42c5-bd22-4205a3ac34cc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="114f36d0-854f-4d65-b8c0-260ba737f636" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="082c024b-705e-40c9-874f-81cb454d57a9" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - DevNew - Request" id="3eaa23d4-763f-4f3e-b81f-682911a74ad0" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="98984dea-1b2d-4d00-a0c3-c679b54358eb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5448551e-c5f4-488e-b8e3-45917ac4ef29" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6ccf689a-6af1-4283-beee-8e2cf05f7a38" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>outgoingWSSName</con:name><con:value>OutFlow_TEST</con:value></con:property><con:property><con:name>inComingWSSName</con:name><con:value>InFlow_TEST</con:value></con:property><con:property><con:name>projectName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>keystorepassword</con:name><con:value>wso2carbon</con:value></con:property><con:property><con:name>keystorePath</con:name><con:value>/data/wso2/keystores</con:value></con:property><con:property><con:name>endpointId</con:name><con:value>worker1</con:value></con:property><con:property><con:name>env</con:name><con:value>test</con:value></con:property><con:property><con:name>wsdlServiceName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>fidus</con:value></con:property><con:property><con:name>userName</con:name><con:value>testUser</con:value></con:property><con:property><con:name>password</con:name><con:value>9iQK8CGRYqianaRK8iVnTiRxv9XtLJ</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>Outflow STAG</con:name></con:outgoing><con:outgoing><con:name>Outflow PROD</con:name></con:outgoing><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>