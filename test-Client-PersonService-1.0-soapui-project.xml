<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-PersonService-1.0-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="efe0aa1f-2a44-41ee-b006-1bbb321d7454" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PersonServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/personservice/v1}PersonServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl" id="ed9c9566-ab71-4610-a99e-aa2b2583faec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.cxf.CXFAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Output Directory" value=""/>
  <con:entry key="Server" value="false"/>
  <con:entry key="EXSH" value="false"/>
  <con:entry key="DNS" value="true"/>
  <con:entry key="Class Folder" value=""/>
  <con:entry key="WSDL" value="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"/>
  <con:entry key="Output Packages" value="&lt;xml-fragment/>"/>
  <con:entry key="Compile" value="false"/>
  <con:entry key="Bindings" value=""/>
  <con:entry key="Implementation" value="false"/>
  <con:entry key="Catalog" value=""/>
  <con:entry key="Use cached WSDL" value="true"/>
  <con:entry key="Exclude namespaces" value="&lt;xml-fragment/>"/>
  <con:entry key="DEX" value="true"/>
  <con:entry key="All Code" value="false"/>
  <con:entry key="build.xml" value="false"/>
  <con:entry key="Validate WSDL" value="false"/>
  <con:entry key="Java Args" value=""/>
  <con:entry key="Package" value=""/>
  <con:entry key="Client" value="false"/>
  <con:entry key="Tool Args" value=""/>
</xml-fragment>]]></con:setting></con:settings>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/personservice/v1" name="PersonService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/personservice/messages/v1" xmlns:tns="http://fidus.brussels/service/personservice/v1">
  <xsd:annotation>
    <xsd:documentation>Person service WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/personservice/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/personservice/messages/v1" schemaLocation="messages/personServiceMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="searchPersonByAddressRequestMessage">
    <wsdl:part name="SearchPersonByAddressRequest" element="mes:searchPersonByAddressRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonByAddressResponseMessage">
    <wsdl:part name="SearchPersonByAddressResponse" element="mes:searchPersonByAddressResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getIdentityResponse"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyRequestMessage">
    <wsdl:part name="SearchPersonPhoneticallyRequest" element="mes:searchPersonPhoneticallyRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyResponseMessage">
    <wsdl:part name="SearchPersonPhoneticallyResponse" element="mes:searchPersonPhoneticallyResponse"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getCBSSIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getCBSSIdentityResponse"/>
  </wsdl:message>
  <wsdl:portType name="PersonServicePortType">
    <wsdl:operation name="searchPersonByAddress">
      <wsdl:input message="tns:searchPersonByAddressRequestMessage"/>
      <wsdl:output message="tns:searchPersonByAddressResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <wsdl:input message="tns:getIdentityRequestMessage"/>
      <wsdl:output message="tns:getIdentityResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <wsdl:input message="tns:searchPersonPhoneticallyRequestMessage"/>
      <wsdl:output message="tns:searchPersonPhoneticallyResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <wsdl:input message="tns:getCBSSIdentityRequestMessage"/>
      <wsdl:output message="tns:getCBSSIdentityResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PersonServiceHTTPBinding" type="tns:PersonServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchPersonByAddress">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getCBSSIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PersonService_v1">
    <wsdl:port name="PersonService_v1" binding="tns:PersonServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/personservice/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/personServiceMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/personservice/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/personservice/messages/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:per="http://kszbcss.fgov.be/types/legaldata/person/v3" xmlns:periss="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../person/common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../person/legaldata/BaseLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/person/v3" schemaLocation="../person/legaldata/person/PersonLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" schemaLocation="../person/legaldata/person/PersonIssLegalDataV3.xsd"/>
  <xsd:simpleType name="GivenNameMatchingType">
    <xsd:annotation>
      <xsd:documentation>Type defining the possible ways to interpret the given firstnames during the phonetic search.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FIRST_LETTER_FIRST_GIVENNAME"/>
      <xsd:enumeration value="COMPLETE_FIRST_GIVENNAME"/>
      <xsd:enumeration value="ALL_GIVENNAME"/>
      <xsd:enumeration value="IGNORE_GIVENNAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PersonByAddressRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given address information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="postalCode" type="base:PostalCodeType" form="unqualified"/>
      <xsd:element name="streetCode" type="base:StreetCodeType" form="unqualified"/>
      <xsd:element name="houseNumber" type="base:HouseNumberType" form="unqualified"/>
      <xsd:element name="houseIndex" type="base:HouseIndexType" minOccurs="0" form="unqualified"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IdentityRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonPhoneticallyRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given phonetical name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="lastName" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1"/>
                  <xsd:maxLength value="48"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="givenName" type="base:GivenNameType" minOccurs="0" maxOccurs="3" form="unqualified"/>
            <xsd:element name="givenNameMatching" type="tns:GivenNameMatchingType" form="unqualified">
              <xsd:annotation>
                <xsd:documentation>Element specifying the behavior of the searchPersonPhonetically capability.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="birthDate" type="common:IncompleteDateType" form="unqualified"/>
            <xsd:element name="variation" minOccurs="0" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:maxInclusive value="99"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="genderCode" type="base:GenderCodeType" form="unqualified"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="maximumResultCount" minOccurs="0" form="unqualified">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="50"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonByAddressRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonPhoneticallyRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:IssResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="per:PersonResponseType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="periss:PersonResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="searchPersonByAddressRequest" type="tns:SearchPersonByAddressRequestType"/>
  <xsd:element name="searchPersonByAddressResponse" type="tns:SearchPersonByAddressResponseType"/>
  <xsd:element name="getIdentityRequest" type="tns:GetIdentityRequestType"/>
  <xsd:element name="getIdentityResponse" type="tns:GetIdentityResponseType"/>
  <xsd:element name="searchPersonPhoneticallyRequest" type="tns:SearchPersonPhoneticallyRequestType"/>
  <xsd:element name="searchPersonPhoneticallyResponse" type="tns:SearchPersonPhoneticallyResponseType"/>
  <xsd:element name="getCBSSIdentityRequest" type="tns:GetCBSSIdentityRequestType"/>
  <xsd:element name="getCBSSIdentityResponse" type="tns:GetCBSSIdentityResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 25-03-2011
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.1
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/BaseLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: BaseLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.2
	* Revision History		: 09-03-2011  	ForeignAddressContentFragment now contains an optional foreignCityCode element.
    *														ForeignLocationContentFragment now contains an optional foreignCityCode element.
	*														ForeignAddressRequestContentFragment now contains an optional foreignCityCode element.
	*														ForeignLocationRequestContentFragment now contains an optional foreignCityCode element.
	*														AddressContentFragment/number + length 10 constraint
	*														AddressContentFragment/boxNumber + length 10 constraint
	*														CivilStateInfoContentFragment/civilStateCode length constraint 5 changed to 2 (Leading to incompatible change)
	*														NisCodeType + length 5 constraint (Leading to incompatible change)
	*														NobilityTitleContenctFragment added
	*														BirthInfoContentFragment extended with ActContentFragment
	*														ForeignLocationContentFragment added to CivilStateInfoContentFragment
	*														ForeignLocationContentFragment. length constraint 3 changed to 5
	*														foreignCityCode length constraint 10 changed to 5
	*														foreignCityName length constraint 50 changed to 100
	*														Refactored RegisterType to PersonType
	*														Refactored to use common:SSINType
	*														Removed SSINType
	*														GenderCode refactored from String1Type to GenderType
	*														Refactored to use common:IncompleteDateType
	*														Removed IncompleteDateType
	*														FamilyMember information removed
	*									25-10-2011	Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored firstname to givenName
	*									16-02-2012	New major version
	*									16-03-2012	Added a content fragment for temporary address
	*														Created AddressClassType
	*														DescriptionType in CommonV3 changed, no language anymore: added specific DescriptionType here with optional language
	*														Using CommonV3 DescriptionType for civilstate and nobilitytitle (adding a size constraint of 100)
	*									04-04-2012	Removed class attribute from address types
	*														Added new structure for diplomatic addresses and posts
	*									07-09-2012	Codes in LegalData now possible in three languages
	*												Removed act from BirthInfo 
	*									01-10-2012	gender in request renamed to genderCode
	*														Changed type for inceptionDate elements: now xsd:date
	*									08-11-2012	name/name in request and response renamed to name/lastName
	*									28-01-2013	New minor version 3.1
	*														Added optional diplomaticPostName
	*														Added switch for partnerSsin with new element partnerReference
	*														Added AdministratorContentFragment
	*									08-04-2014	New minor version 3.2:
	*														Added BirthActContentFragment and BirthActTypeCode
	*														Added birthAct to BirthInfoContentFragment
	*														Added LegalCohabitationGroup, SubregisterGroup, AbsenceGroup, FiliationGroup
	*														Added BirthGroup, DeceaseGroup, CivilStateGroup and NationalityGroup for consultation per datagroup
	*									08-10-2014	Added expiration details for LegalCohabitation
	*									08-10-2014	Extracted partner type from Civilstate and also used it in LegalCohabitation
	*									04-02-2015	Created DiplomaticAddressHistoryContentFragment with multiple postaddresses to use in ResidentialAddressHistoryContentFragment
	*									10-02-2015	Created PlainAddressHistoryType to reflect expiry dates for diplomatic addresses and post addresses
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <!--Response content fragments-->
  <xsd:group name="NameInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" type="tns:PartnerType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SisOrIsiContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the social identification part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hasSocialIdentificationCard" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:group>
  <!--Request content fragments-->
  <xsd:group name="NameInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="partnerSsin" type="common:SsinType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--General content fragments-->
  <xsd:group name="NobilityTitleContentFragment">
    <xsd:annotation>
      <xsd:documentation>Type describing the nobility title of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitleCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="2"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nobilityTitleDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressHistoryType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressHistoryContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AdministratorContentFragment">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="location" type="tns:LocationType"/>
        <xsd:element name="specialNotion" type="tns:SpecialNotionType"/>
      </xsd:choice>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An optional post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressHistoryType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressHistoryType" minOccurs="0" maxOccurs="10">
        <xsd:annotation>
          <xsd:documentation>An optional list of post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TemporaryAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="temporaryAddress" type="tns:PlainAddressType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Datagroup content fragments-->
  <xsd:group name="SubregisterGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subregisterCode" type="tns:NRSubregisterCodeType"/>
      <xsd:element name="subregisterDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partner" type="tns:PartnerType"/>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="tns:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationBailiff" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="bailiffName">
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1"/>
                        <xsd:maxLength value="48"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="location" type="tns:LocationType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Place where civil state was registered.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationExpirationGroup">
    <xsd:sequence>
      <xsd:element name="expiryDate" type="xsd:date"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="reasonDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="location" type="tns:LocationType"/>
      <xsd:element name="notificationDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FiliationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filiationCode" type="tns:FiliationCodeType"/>
      <xsd:element name="filiationDescription" type="common:DescriptionType" minOccurs="0"/>
      <xsd:element name="parent" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="tns:ParentType">
              <xsd:attribute name="sequence" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:unsignedShort">
                    <xsd:maxInclusive value="3"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AbsenceGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="absenceCode" type="tns:AbsenceCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthGroup">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the DeceaseInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the CivilState information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="partnerSsin" type="common:SsinType"/>
              <xsd:element name="partnerReference">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="11"/>
                    <xsd:minLength value="1"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
            <xsd:element name="partnerName" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="tns:NameInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the NationalityInfo as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="justification" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="justificationCode">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:minInclusive value="0"/>
                  <xsd:maxInclusive value="999"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="justificationDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Types-->
  <xsd:simpleType name="GenderCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CivilstateCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonRegisterType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR"/>
      <xsd:enumeration value="BIS"/>
      <xsd:enumeration value="RAD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NRSubregisterCodeType">
    <xsd:annotation>
      <xsd:documentation>Code specifying the subregister of the National Registry in which the person can be found</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="CBSS"/>
      <xsd:enumeration value="BOTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FiliationCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GivenNameValueType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="48"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GivenNameType">
    <xsd:simpleContent>
      <xsd:extension base="tns:GivenNameValueType">
        <xsd:attribute name="sequence" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="3"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartnerType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="partnerName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ParentType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="parentSsin" type="common:SsinType"/>
        <xsd:element name="parentReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="parentBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="parentGender" type="tns:GenderCodeType" minOccurs="0"/>
      <xsd:element name="parentName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>Type describing a Belgian location (BelgianMunicipality). Can be used as a birthplace or decease place.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActType">
    <xsd:sequence>
      <xsd:element name="actTypeCode" type="tns:ActCodeType"/>
      <xsd:element name="actTypeDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SpecialNotionType">
    <xsd:annotation>
      <xsd:documentation>Container for special NIS codes occurring in the information type 001</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specialNotionCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="specialNotionName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PostalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StreetCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseIndexType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PlainAddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>the country of this address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="address" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the actual address, in unformatted form</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PlainAddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:PlainAddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" type="tns:CityCodeType" minOccurs="0"/>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="postalCode" type="tns:PostalCodeType" minOccurs="0"/>
      <xsd:element name="streetCode" type="tns:StreetCodeType" minOccurs="0"/>
      <xsd:element name="streetName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="houseNumber" type="tns:HouseNumberType" minOccurs="0"/>
      <xsd:element name="boxNumber" type="tns:BoxNumberType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:AddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DiplomaticPostType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>Country code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="diplomaticPostCode" type="tns:DiplomaticPostCodeType">
        <xsd:annotation>
          <xsd:documentation>The official code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticPostName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CountryCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CityCodeType">
    <xsd:annotation>
      <xsd:documentation>For Belgian locations this is the "NISCode", for foreign locations the cityCode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="DiplomaticPostCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AbsenceCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DatagroupStatusType">
    <xsd:annotation>
      <xsd:documentation>Type defining possible statuses of a datagroup occurrence</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DATA_FOUND"/>
      <xsd:enumeration value="NO_DATA_FOUND"/>
      <xsd:enumeration value="NOT_SUPPORTED"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 16-03-2012
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 09-03-2011  	NobilityTitleContentFragment added
	*														FamilyMembers datagroup removed
	*														PaymentAddress information removed
	*									25-10-2011	Refactored SSIN to camel case
	*														Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored unbounded NationalityInfo to 20
	*														Refactored unbounded CivilStateInfo to 20
	*									16-02-2012	New major version
	*									16-03-2012	Renamed residentialAddress to address
	*														Readded temporaryAddress
	*														CommonV3 BaseDescriptionType was renamed to DescriptionType
	*									07-09-2012	Removed subregister
	*									31-01-2013	added administrator
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/person/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonIssLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonIssLegalDatav3.xsd
	* Author					: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 04-04-2014
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 04-04-2014		Create PersonIssServiceV3 based on PersonServiceV3
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0beta1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
        </xsd:annotation>
      </xsd:group>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="registerInceptionDate" type="xsd:date">
      <xsd:annotation>
        <xsd:documentation>Date the person last entered the CBSS registries. Only present for BIS (creation date) and RAD (last RAD-in date) numbers</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="subregister" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:SubregisterGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="legalCohabitation" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:LegalCohabitationGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://fidus.brussels/services/personservice/v1</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/getIdentity" name="getIdentity" bindingOperationName="getIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="37782446-c7cc-4124-8f9c-72d13d0b07ca">
      <con:settings/>
      
      
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="9b354218-971c-4b4b-8b73-48b42e188d6f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      
      
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="d5ac1e83-c0e6-46a4-885b-5290d0b3e420">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="ce70dd41-8ecf-4c6c-9c8a-be3ca6af3724">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="43b3d025-e9f4-4351-9a95-94e4156ab666">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="8bccfa23-0ffe-433d-a652-0aa55ec1396a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="0aeafd29-c76a-4088-b770-35105a8b95a7">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="de2a30e7-e01c-4003-bc10-c3c9a454408a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="048341fb-a47a-4523-9892-3e538ff632cc">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="40595e83-d1a6-451f-9f26-a02595b73ee4">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="76a9e4ae-1fbd-4325-9a2e-c02f94b246fe">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="4054bf91-0a93-4f89-b218-9dfaecdb9b22" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c4e865d2-e8c5-4d34-a176-68de5a8657e4" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4c41d0e9-e341-481e-be8a-e3d5531309ca" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f426d497-7c8c-4af6-bf95-9b9fc01a8aeb" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0c10432c-3cdd-46ff-b1f4-ac23fc29ea32" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonByAddress" name="searchPersonByAddress" bindingOperationName="searchPersonByAddress" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ce38a6c-7ad5-442c-9f54-12e2a45b5a22">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="dc5f8e0f-3abc-41ff-8408-488888ef65be">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1481</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="96e62530-b8b7-4d46-be40-914b252ca667" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4fdf64fb-d478-4164-823d-4ea01aa4d298" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="bd14dd5b-7781-4ee2-8ccf-62d39077335e" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4cf18017-ee69-4750-af75-556f3f9fa371" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="9d2d20b2-ab33-4073-8388-b2b24e4b1e93" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="ce05d58f-458e-45a2-99bb-5464937162c5" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="fa9d8d9d-f74b-4016-9573-bc46c4c59f8f" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e03ee615-c9c3-4ad0-be69-11f89a3cf25f" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="85a4ad10-d22b-4e61-9773-e8480aae2de9" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="dc958878-2705-405e-bdee-e2347006388b" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="57836cf7-beed-4cdd-9ebc-9edaa21f9b5f" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="1e9bd60d-d233-410e-8ac9-8b0e1b9730e1" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="2fcc253d-1c54-482f-a8ef-6ee76c88251c" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="d0d2467b-e44f-4d98-83c7-3445155531bc" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="104c0ba3-e4a4-4755-91f0-21300b23a57f" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8e24ca88-5589-43f7-b289-5f0143e1b3cb" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b3922a18-5965-4e81-9c0c-27b3d94b839c" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f2c46c4c-5ff9-411a-b5ed-080f4d259776" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonPhonetically" name="searchPersonPhonetically" bindingOperationName="searchPersonPhonetically" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="963fba3d-d71d-4af1-b0ec-fb7dea19318c">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="ee0ebece-4826-4161-9fe7-a92fe233be58">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a9f1546e-50d6-49ff-97db-59f679b6e803" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="0eb96b84-438b-4b43-9b0e-364a4d879a4a" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="29cd5922-4b29-445e-9676-3bcb8a6a77f0" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="66e10986-5ba2-4be8-92e9-f244ee0db419" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="7774e707-8bb1-4aea-8d05-d31a1178f213" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="494189e7-d53f-4a37-b2ba-57c8cc4fbac6" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a0a75e53-d03d-4c37-a14e-ef1481a95b83" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a1588266-1de2-4249-aa20-79ae3bb93dda" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="543512c3-c165-4d8a-a66f-4f258c4308bc" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="3a0e7434-1658-489e-9ed3-44d5962510cd" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="b4b443cb-bc32-41d9-b03c-b3d11365f420" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="6cd9199d-4fcb-4533-9737-50bec44c6c06" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="8e4d5e0d-8b7f-4832-8583-7527b5b02192" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="e37aecba-4d68-420e-bdbd-0a0faa90d973" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8a5e3e1a-d9ac-4d9a-b5fe-d4276360ade6" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ac6a1bea-d396-4a81-9630-7c22f7380109" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="384d0ba2-46f8-4939-99c8-ab96a1587ad7" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b65ddc7-9fac-42d3-bff7-ef5085425add" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
  <con:operation id="62c05a83-d23c-47d0-b80d-d1c266b592ee" isOneWay="false" action="http://fidus.brussels/services/personservice/getCBSSIdentity" name="getCBSSIdentity" bindingOperationName="getCBSSIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5058bf2-d7bb-446f-bc3a-b809dfe231e9" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="df9b33fb-4355-4094-bc45-27137afbba35" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="bb7d46b8-7c28-4b77-ae75-3d0cd0f2e406" name="3 - Test - LB - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="63cc9021-a899-419e-80bf-9180c1c760cb" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b197eb99-abf5-461b-a4b9-18077e3372a3" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="342c0435-a5db-4e15-bb4e-bfd6ec7c7c4a" name="3 - Test - Worker2 - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3046e077-915f-4f81-9a73-3560519dd410" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90b593ff-1332-48cd-9046-fe59bc552700" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="26e7ddef-3a32-4429-92d6-743cea5b69be" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d68ab661-98c5-4d26-ae68-f4c20bc4d6b0" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f9e84250-19fe-4cb9-8350-8c5d32c74ea2" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="39c84b0d-93b5-4525-aeb7-1a55c5852559" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f0b54c0f-1afe-415e-a09e-8d41ae7a5338" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9fd4f6fb-a38b-4f6e-9ed0-87934b90163e" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a963a5d2-9974-4f35-a69a-f0cd96fe8840" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="84cec9da-4f6d-49ff-b70b-b34d0f874e36" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="805cfaca-a109-463e-9126-950c7d41dd68" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="a67c99d2-df9d-4acc-a0d6-3a3e0eb29dc6" wsaVersion="NONE" name="ReferenceDirServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/referencedir/v1}ReferenceDirServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl"><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/referencedir/v1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mes="http://fidus.brussels/service/referencedir/messages/v1" xmlns:tns="http://fidus.brussels/service/referencedir/v1">
  <wsdl:types>
    <xs:schema targetNamespace="http://fidus.brussels/service/referencedir/v1" elementFormDefault="qualified">
      <xs:import namespace="http://fidus.brussels/service/referencedir/messages/v1" schemaLocation="messages/referenceDirMessages_v1.xsd"/>
      <xs:import schemaLocation="messages/faultTypes_v1.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="SubscribeRequestMessage">
    <wsdl:part name="SubscribeRequest" element="mes:subscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="SubscribeResponseMessage">
    <wsdl:part name="SubscribeResponse" element="mes:subscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeRequestMessage">
    <wsdl:part name="UnsubscribeRequest" element="mes:unsubscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeResponseMessage">
    <wsdl:part name="UnsubscribeResponse" element="mes:unsubscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageMessageId">
    <wsdl:part name="messageId" element="messageId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTransactionId">
    <wsdl:part name="transactionId" element="transactionId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTimestamp">
    <wsdl:part name="timestamp" element="timestamp"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageError">
    <wsdl:part name="error" element="error"/>
  </wsdl:message>
  <wsdl:message name="GetServicesRequestMessage">
    <wsdl:part name="GetServicesRequest" element="mes:getServicesReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="GetServicesResponseMessage">
    <wsdl:part name="GetServicesResponse" element="mes:getServicesReferenceResponse"/>
  </wsdl:message>
  <wsdl:portType name="ReferenceDirServicePortType">
    <wsdl:operation name="subscribeReference">
      <wsdl:input message="tns:SubscribeRequestMessage"/>
      <wsdl:output message="tns:SubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <wsdl:input message="tns:UnsubscribeRequestMessage"/>
      <wsdl:output message="tns:UnsubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <wsdl:input message="tns:GetServicesRequestMessage"/>
      <wsdl:output message="tns:GetServicesResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReferenceDirServiceHTTPBinding" type="tns:ReferenceDirServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="subscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/subscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/unsubscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/getServicesReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReferenceDirService_v1">
    <wsdl:port name="ReferenceDirService_v1" binding="tns:ReferenceDirServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/referencedir/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirMessages_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirMessages.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Messages
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/service/referencedir/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sub="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:uns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:ser="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:tns="http://fidus.brussels/service/referencedir/messages/v1">
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" schemaLocation="referenceDirSubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" schemaLocation="referenceDirUnsubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" schemaLocation="referenceDirGetServicesTypes_v1.xsd"/>
  <xs:element name="subscribeReferenceRequest" type="sub:SubscribeReferenceRequestType"/>
  <xs:element name="subscribeReferenceResponse" type="sub:SubscribeReferenceResponseType"/>
  <xs:element name="unsubscribeReferenceRequest" type="uns:UnsubscribeReferenceRequestType"/>
  <xs:element name="unsubscribeReferenceResponse" type="uns:UnsubscribeReferenceResponseType"/>
  <xs:element name="getServicesReferenceRequest" type="ser:GetServicesReferenceRequestType"/>
  <xs:element name="getServicesReferenceResponse" type="ser:GetServicesReferenceResponseType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirSubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Subscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/subscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="SubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="subscriptionRequest" type="req:SubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="subscriptionResponse" type="req:SubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:complexType name="SubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesResponseType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="1"/>
      <xs:element name="operations" type="tns:Operations" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Operations">
    <xs:sequence>
      <xs:element name="operation" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceType">
    <xs:sequence>
      <xs:element name="personNumber" type="cme:PersonNumberType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirUnsubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="UnsubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="unsubscriptionRequest" type="req:UnsubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="unsubscriptionResponse" type="req:UnsubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirGetServicesTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/getservices/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="GetServicesReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="getServicesRequest" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="getServicesReferenceResponse" type="req:GetServicesResponseType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/faultTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/messages/v1" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <!--fault elements-->
  <xsd:element name="messageId" type="cmn:MessageIdType"/>
  <xsd:element name="transactionId" type="cmn:MessageIdType"/>
  <xsd:element name="timestamp" type="xsd:dateTime"/>
  <xsd:element name="error" type="errorType"/>
  <xsd:complexType name="errorType">
    <xsd:sequence>
      <xsd:element name="code" type="cmn:MessageIdType"/>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:any namespace="http://schemas.xmlsoap.org/soap/envelope/" processContents="skip" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint></con:endpoints><con:operation id="312f45c1-9afa-4a5f-8119-e5d4fe428d15" isOneWay="false" action="http://fidus.brussels/services/referencedir/getServicesReference" name="getServicesReference" bindingOperationName="getServicesReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d7af34a-7bf2-487a-bbfc-0a7fdbc99c9e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getServicesReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:getServicesRequest>?</v11:getServicesRequest>
      </v1:getServicesReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/getServicesReference"/></con:call></con:operation><con:operation id="04f77d08-1546-46ed-8803-a95db3a43aa8" isOneWay="false" action="http://fidus.brussels/services/referencedir/subscribeReference" name="subscribeReference" bindingOperationName="subscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="13aeea11-79e8-45e7-ab63-6d93700b6a91" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:subscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:subscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:subscriptionRequest>
      </v1:subscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/subscribeReference"/></con:call></con:operation><con:operation id="c3d429ac-8c85-4a08-bb68-e8cf7c36abad" isOneWay="false" action="http://fidus.brussels/services/referencedir/unsubscribeReference" name="unsubscribeReference" bindingOperationName="unsubscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9b7cb6cd-42be-46e5-9456-ebda15a5e893" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:unsubscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:unsubscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:unsubscriptionRequest>
      </v1:unsubscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/unsubscribeReference"/></con:call></con:operation></con:interface><con:testSuite id="0ebcb538-14a8-4815-b6bf-84ff071316db" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a1a47beb-1647-4c6e-bbfc-d78377a890dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="a136db4d-739c-48ed-8157-2f7d3f1616cb" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="255f5234-1ea9-44db-9775-714f638f1f5a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="820bbf8c-1aad-40cb-82e9-d7e07711dc3d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2960898c-d968-4f72-9bc2-40def82db486" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f3bb9e90-57bc-4e7f-a216-0d0a80a24f3c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="3e143fbf-d898-4b44-8f22-5cdb61c1f414" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="02fff72f-1ab9-4179-ab10-5a4564bc8ef5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4c60a652-6c12-4161-8f27-2a5322ecb026" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d9ca77eb-79f9-45a6-b5c9-5d9f8bac29db" name="SOAP Response"/><con:assertion type="Schema Compliance" id="208574ec-b37f-49b3-b2be-02c0ec95ca47" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="dd35223a-75f6-4735-9079-76186d9b9114" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="306d08b9-ac2b-445b-9f79-a88a7091b5a2" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b87f97a5-9f9a-470e-af0c-6da5428ad3c0" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="875642e5-82e8-4a6e-b6e6-416d41a7c23a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="aad1a66e-ab77-40ce-9119-3304be7f6b6a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="121d3009-b6e0-41d7-89c3-0f1f84e2f68c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="7b1e3778-9f37-4f20-b89e-0d517aafa04b" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - External - Request" id="abb203d5-1413-4c58-b92b-669985de8298" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="93469a69-78ba-448d-825a-837dacb33196" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="08956421-678b-4f9d-8986-bdbcd924008d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4a0f6885-a23c-4b4d-b80c-ae8d81fe8fd1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="6c455f55-19db-4848-ad76-6601cb6ea98b" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - LB - Request" id="d0b393ca-4719-412d-8418-25cf4dffb5ce" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c88a114c-43a3-4b5b-b54d-9f1fd3ff85c3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8154d567-9096-4127-9aaa-d9f6c1436580" name="SOAP Response"/><con:assertion type="Schema Compliance" id="02a01a7d-811b-4844-bbed-98c6d1edb77c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="8ce97f02-c7eb-4b90-bd0f-93ab257b6098" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="d16e061a-cf0c-4ac3-9b67-57fdaca9565f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9159bb34-9448-4665-b9fe-b9b07404104c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3fb2fd7f-43cb-472b-83ae-5eb90d2f32e4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e698e715-2933-4c97-8c88-fa44525fa9bb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="1484d58c-0ddd-4a2b-b8bf-f23629c50cab" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="0e695eb3-7520-4ba7-ab8b-179a67b45603" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0f6a62d2-5051-42d3-a9dc-efda2cbe20bd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f2fbd0d4-0e18-470e-8dee-464616bb3a00" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4c5aab62-d07f-4b65-b955-b5ec1379e5bd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="712ff494-2b20-42be-9f83-5442925f1306" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="9b7c5f12-b18e-475b-a4fa-b2b67a401609" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="3513dd0d-c3e8-427b-8e5c-d0192f817adf" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3b442d62-e025-42b6-999f-b6b3397139ad" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e432bafb-32df-4437-a2bd-1e06d2dfe7be" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="9b88afa4-3263-4513-a66e-5abed7565781" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="98986fb5-2c35-4e64-a5fa-e8970b403a94" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="3f82b47c-2471-47e1-8530-50e6578ad32c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="48540f51-2163-4a54-96df-d9d742a1c1d8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="aa9c5dc8-22d3-4339-99c0-1f6adc879767" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a0c22f5a-39b7-4e74-a089-1ee740731d35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="7cc9320b-597a-4f87-9b1c-eb89175b458c" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - External - Request" id="b66f5670-510f-4cce-a8de-008e52ca2e61" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="17e9b17b-bb66-4a9f-8d39-a04411aa4dc1" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4f36637d-ca10-4b96-ad33-b9bb534abbbd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="35a5ee5f-cbae-438b-b02e-f0ea8610f47b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="42c05d7f-0289-448e-8e53-7c784c7d13e4" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - LB - Request" id="425c0278-820c-4632-803d-5daaab17933d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="37f17d19-af21-4ccd-bd3d-2b4bf6ff9dc3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="df916931-7ab9-459a-a3cf-065de7318b18" name="SOAP Response"/><con:assertion type="Schema Compliance" id="bae9c022-c8f8-41a7-a64f-3ae121fc2e8c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="1240f955-5840-4189-a909-34fefd366a48" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="307b9bba-6037-4622-a535-f489ad77e3a9" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6ea4c1a8-992c-4918-8021-39b333ed804a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3a91bf3c-617b-4b38-9820-da3ed9530b9d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3363ec93-3031-47c0-8772-d91bf4967323" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="72099ccf-b9a1-4300-aafa-9c7f493f5e04" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="d673dd3b-6f07-4f3f-964c-e0994819b4f4" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9b2cddde-d812-432b-9780-51b31f84770c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5add5524-5b3e-4d2d-a8a9-e714ee072729" name="SOAP Response"/><con:assertion type="Schema Compliance" id="86432222-635e-4aa1-b8bf-c029d24b177e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="c54a5d8e-ac60-4b00-9d5b-7d3a8d534ef6" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="4acd3794-86e5-48af-813e-9391e0c410a7" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a6d5a95b-17de-472f-83de-a018f19729ce" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8ddaf467-3910-4f76-ae4a-d0ad491784a5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6ba0db71-9713-49d2-9577-6dcdec93443c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="1a9172c6-d41d-4574-8862-7418b61572e5" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="e170406b-a9cf-4b7f-a18d-18227e8add1f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4f488a03-4547-4265-8136-a106ffd0cdee" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="10c978c8-5ba3-4377-9b8b-9616eeb630b2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="abce82cf-af38-40c1-a2dd-1fb9bb4e40b5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a7d77d90-b45a-4620-a60c-3106ff000a95" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="8b892900-3a46-4658-8f78-119e6d75480c" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - LB - Request" id="d5e03fa0-7707-4293-a426-804ae34ed453" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9ba587c6-a0ef-4640-9deb-4570c91ab998" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1292b663-f6a0-4d7a-92d4-28cb69f73fd7" name="SOAP Response"/><con:assertion type="Schema Compliance" id="61371d16-bbe5-459d-ad4d-04a72d9af1c2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="0cd2dbce-6adb-4e83-afd1-793cb2d03f64" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="ed506450-cbce-4edc-a810-6c70269210bd" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="34ec6ea3-b13a-4c8e-86c3-d76dca15721e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="eb206d62-5816-4ca6-b9f1-8f334d9673e6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d7b3b106-97f4-4ac0-a3c9-5b035d23e984" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="38dfa311-d724-4fbb-9897-0e227831a553" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="7402a331-0852-461a-a15b-316f1800c312" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c619b4eb-3a1e-4f65-afb9-fd65a11dbee9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9f57b199-247c-46b0-8ff8-41c8fa2113a2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dcd75797-c7e7-4ac4-b0df-073cfc4fcdde" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="c1b3cdb0-be38-43f2-a26f-4ef7be8508d7" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="11af8497-1e85-44d9-8f87-3f032b020328" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2dae2ca6-8e2e-49db-aeb2-c6196f0aa0c4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="aee2d79f-3c61-4f52-a239-a3edacfdf375" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5b565356-7099-4726-8965-7dd79d3f73c5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4f643709-5f72-461e-a268-daedcb4a915e" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="3722d373-5c64-4b0e-91e0-84e47bb5b3f3" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="18fc7767-acad-47a6-a07e-aafb3add9cb6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c452b46c-4488-4965-b398-6e2061040708" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d6013315-28bb-4fbe-8dbc-a72df968a644" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4b099a74-97c0-4249-a0bf-bc9b334ae531" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="f019534b-ca03-4110-9689-03c076b1ae6f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="fe570322-401c-413e-a4b9-f7845d407027" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2871e4f3-e8e6-4742-8a34-d10044540cb8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="16d25d82-3e1f-420b-a0bd-bdd0e86614c0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="5b19d0e9-982d-42fa-a12e-11d095368058" name="STAG"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f2d71577-4fa0-4d66-aa61-7969c6a56f91" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="40316bf0-11e0-4c80-9375-ff9d581a3eae" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="177cfdf5-07a8-4478-b545-eecb07cdfa35" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f594e9ee-b067-43f9-bd4e-db628dc8d98f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="51c6fd57-31a6-45e7-8228-5a56185fe26d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c32bf87d-bed0-4de7-99ea-290ae1df93bf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="3576ce03-d982-4413-bed4-f8038c457901" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="e89bf38d-49c4-4e1c-8d4d-4f07197a48e6" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9c7cd146-1589-42f5-b6eb-506573e3521a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fda8c96a-e4eb-46e4-a790-ad35ac8cfb29" name="SOAP Response"/><con:assertion type="Schema Compliance" id="da836cdd-8015-48eb-8a9c-82f6ed071824" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="e21a9d33-13c2-49fd-baf8-6ff3dc49891e" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="47a10fc1-d51c-4890-a135-a1376cabedab" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="75032ba0-a6df-4404-8a4b-2ecdfd1c8e12" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="029325a4-e081-4869-ab0e-8848bfd772e6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="35ad9772-7464-4ec8-81ac-14ca95a058f4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="7314f66d-a5da-4697-869b-c72826b41abd" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="e1c68af0-99b6-4f66-92c7-b5d327c55a69" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="be2de4ef-72f7-4a41-86e0-5c965878af36" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9ee8a784-f663-46d3-b0c0-e9d83af69629" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5a442ed6-4736-4654-a530-009bbe110426" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="b1233d9c-c839-4a63-9623-fce372237ad8" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="88b89035-c64d-4348-9066-f9581ec2cb17" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0bb3417d-69b4-4c20-94ff-8cfd0833a9eb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b6c67a20-e9d2-4698-a0fe-1bef710cdb58" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dd8c42ac-2431-431f-a5d6-edbecc530621" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="53b3e97f-780c-4fc9-ad0d-ed8a612c5aad" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="9c45fcbf-e5f7-4219-ba6d-26c5286f2446" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2a8d4024-802b-432a-9c25-db1269e0655a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2b790b12-96a7-485f-bcc3-8ee5930b319b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ccaa583e-e987-41ae-9166-579dd9ff8dce" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2569fcb9-8988-4030-a016-7cca9d915521" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="e08bb2d6-c35d-412f-b491-f5650441c826" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - LB - Request" id="d174b515-bba6-4559-b5ea-5d9ab2c6a077" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ea36dab2-1843-4528-bc8c-9638fa9c8886" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="45c03690-4755-434f-bd22-7fd171b68e62" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3c8ea317-dc82-4624-94f6-ee9ae8015b5c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="62896a65-70ef-4f1f-874c-8557518d8b46" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="b37b5820-a582-4433-9028-7273ba76720c" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="567b4320-075a-43c4-acec-a12ab7496a4a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f511850a-d9b4-43ec-9fed-179a45f4dd04" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f2b4bf37-3efe-4f8c-b7b3-4085437c6a86" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="96dea157-9d17-48a7-bad5-928ef702c290" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="1f430b3f-9390-4891-8cd6-f438927b906f" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="049fc5cf-ace9-4978-8c19-29e97bfd2ab3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d9153ac5-2dc2-44ce-bf6a-ad3b9837cc01" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ccbda231-3c4a-40f7-a315-597a5814a3bf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="36271e58-c3c0-4aae-a3cb-da27210d6d23" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - External - Request" id="fd4a7e23-2225-4dfb-90b3-7abe4f5b00e9" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="74d7d9a5-0fc3-4853-93a9-04ac1867442c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cbb50a80-02ce-4ae1-8725-2c8bdaa368da" name="SOAP Response"/><con:assertion type="Schema Compliance" id="34c2065b-0578-43b9-8aae-87f8cb64b5e3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="320dc48f-3f0c-4090-bc93-0b7a4723042e" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="3cb84a7c-607b-44fe-bdb7-0fc6d475d4c7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="66d42b27-f451-4494-ac5d-003198dd6091" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="13e7885a-72d6-4bba-8684-c7d98e26a165" name="SOAP Response"/><con:assertion type="Schema Compliance" id="813e237a-a84d-4892-8202-ed670cdcc169" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="e5a35bb5-c0bb-4a58-b996-935788c1a232" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="c843def8-d8c6-45e0-9fec-82e76e59f835" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="377f0203-c6e5-44ef-b0bf-21e39142ec3a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="df3a7f62-d914-4d9e-9646-a148106eaca0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="530e07c4-8d8a-41eb-a4a3-3252e2739cb1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="584c7ec7-7afc-4bab-9e9d-858feae93dcd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="dbfca77c-49e1-4246-a50c-f959f363af5a" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="f27c0dec-a855-4b7e-b60e-453b63498a7c" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e0f288db-0a61-49c7-b1f8-3ad7048c146a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2ddc2092-ad5c-4f77-a409-4b8ecd3c13da" name="SOAP Response"/><con:assertion type="Schema Compliance" id="998de561-40f2-42a5-b814-43696de409d7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="8289ef0e-490e-4aae-ada3-81f157b7dbdd" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="bcd97e44-69e7-4427-8eed-bfa44b5448c2" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a31576f0-9837-4bdf-af4c-faae0c4feac5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1eb690f6-2e9e-4286-9927-d29784e92d78" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ab85a2a7-01cb-4d34-941b-500e08c934d0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="d7851171-52e2-48ff-a5a4-abd034abe367" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - External - Request" id="457275d8-d483-4c62-9252-2a6996a59bca" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f28c268a-6823-4714-95ef-6ceb55fa6700" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="125725a8-4402-4dcb-9c58-f76f9fb96548" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f4ac88b7-89b2-43fe-96f5-022fe16eff17" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="bc406961-d1c9-443e-ac1e-83ab6432aa63" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - LB - Request" id="719a4f7f-9696-468d-bf3a-b5eecacb7b7a" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="29b366ba-9c75-4f6b-911d-752b55f76ea9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b2b09854-a860-459b-835f-2f153498b25f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cc6e6419-a27e-4960-a852-d1ba6d8829ae" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="0d2f49bb-ebec-477e-83de-dbf624dc8db8" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="6807d210-6494-45bd-9cf2-71c8d07a0fa7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d24ef938-4804-4418-8abe-9e11e004aef8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="782da27d-0f9f-4dfe-bbb7-8a2659ac57b8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="bb67b6af-4dae-4653-bbcc-80f433b70b48" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="39266980-31ff-48bf-bb68-c073f0934f41" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="36f06fdc-6471-4558-b275-36bcb7669055" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="bf30d188-c71f-4a98-a528-bb050cba380c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c3f741a5-4653-4048-b63e-4e7d9c568f44" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a20be085-551c-4344-a6dd-5d33be6255b4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3391068a-b1a6-4ea7-aa30-92398dc34b00" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="3b4a2f24-6d55-46e6-8952-3bd5fa9ddb92" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="40b9ba3d-96f5-4056-9aeb-65da51567400" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e46ccc73-e16b-4b71-9043-a3e1d005bf89" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="87bcac5f-7167-4570-afb6-a3ad41d929ae" name="SOAP Response"/><con:assertion type="Schema Compliance" id="758fe049-c37d-44c4-a8d3-7af1c5c63b80" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="7ba4f485-4a19-433a-801a-c908c540d3a2" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="42381970-54b6-442a-8f62-b520f234beec" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e17afd12-0cb2-4b05-beaa-59e5f03f0bcc" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="58adcbf8-4dbb-4508-96b0-db3d7377b8d4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c04ba682-ac82-4b8c-af46-4bc6f22ee162" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="03a1f388-57c7-40fc-a95d-3d1ee53e9d82" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="96688c4e-fa45-4219-9d77-5716ee2ac10b" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2ca20825-4f48-4faa-9fca-ca49012b0e72" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ad9e95ec-7d41-482a-b8ad-d5bd5081cde3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ee7f6bdc-ad0b-474b-96d8-9df022c472ea" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="21245bc5-e6e1-4255-b84a-11da1b3d9bd1" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="2f98a165-bc5c-4e6f-8462-082d9fd85807" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="571ecb18-9c74-4269-9197-b195451a8d17" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4895137c-79f7-41fc-929a-a43f0deaddfa" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b8836195-1d24-478c-8528-041eabc9c9eb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="76fc12c6-7613-4fce-b84e-ecd9ba429456" name="PROD"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1ec85470-56a0-43d3-85ea-529e777e67e5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="6fb8851f-790f-4305-979d-653acb85a419" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="7ca23647-8981-4da1-b70a-908b4b0e205a" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0e34ac51-cb59-4d5b-a369-147f6cc9fea7" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f46717c6-37d7-42fe-ac53-e60e4a9c89a0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4e8a9b36-2207-4c91-8af1-0a522e668598" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="3f51c1f2-d241-4640-84c3-2baf51619730" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="82367682-19ea-432b-98db-69f7c1a2f188" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6cdccf51-2f59-49fd-a8d6-59e99eec0062" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="aa642b5c-9a0b-42f8-b079-d0c9f3ae5a4c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dc5ab0c9-b2df-4c3a-918c-d895dea6bc09" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="6ee26b4c-68bc-4291-a3b2-cfece5e92d56" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="1c7d5082-9870-4284-b0c3-16e598f8fe12" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="94da0cf5-159d-4cf4-aa3b-733afb2b247a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0cb1ff4b-04d4-48de-8537-010b15551720" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3473a130-1207-44ce-a4d6-5c2b4392fbf5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="9fdfa7c1-7327-4813-9577-ef85ea71e8c2" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="9493ba9a-da6c-45e9-ae27-a32a98a988e6" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="324e8f6c-2425-4579-8832-0763ffd6907b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0f0b95ff-342a-4336-8fee-fd5878835500" name="SOAP Response"/><con:assertion type="Schema Compliance" id="aa4308f3-64d7-4ed7-bc85-022a57ac31cd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="77b0c33b-57fe-4706-a10d-b54fd4b2cf88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="b2473b35-55a8-497a-b384-a1b0d1311765" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - External - Request" id="35b26079-a2b7-4009-b4a1-b25b32abf8da" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c396c47b-c716-4ade-816b-3baafa996128" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e01eafc6-f62d-427c-9546-ae904732134a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c0b3c122-f1a4-49aa-b082-6500d3dd4285" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="72b37840-9f8e-4b57-adb3-0729824cc1ac" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - LB - Request" id="d1ac2001-8651-4645-859f-96e79cd45db6" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7f153910-a39d-4cca-a5c1-38fbe80cc0ba" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1fc2de2f-b1f0-4f8e-8ca8-d45c0522d065" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d9c959bc-a926-4c72-a816-569368d9c264" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="c6ebb4ec-9766-4d5e-b2c6-11d1b69fc15a" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="ece3caa9-b6bc-4799-a53e-83c206e7dd75" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b0b12048-a7ca-4204-9db4-97926940bff8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c12502ca-6744-4cc1-8764-b084ca3a6803" name="SOAP Response"/><con:assertion type="Schema Compliance" id="07ae8ca9-4ea8-4237-9d11-c16c4780c430" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="69551014-3e8e-4718-ad9d-581d79939b11" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="c82e5801-c83f-4c77-946c-07fe8a1b6c98" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2ab94f7e-d84d-491e-b3e3-259c53fcb680" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="bb6447b0-1057-4bd4-9b51-7afeaf9b9d2c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1867bc64-e2fc-47e6-85ce-cbef517f0a63" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="167e56fd-cb4e-4819-b4f7-9508bcb2f943" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="0aec2503-16dd-4526-ad17-d12e6da59d8b" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - External - Request" id="3c70d578-940b-462e-bbdd-7bea81775a94" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="303c357f-1e18-4ca8-8d5a-0596cea5d1df" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="af7b7c8a-0ad4-45f2-ab11-8f05c71b512b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="501735be-4921-4551-90c0-02bc82eebb64" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="9bd6b273-d6cd-4a70-abdf-a16bd44d54f0" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - LB - Request" id="4d1b2031-a507-4c58-bfa6-14f1ccd24e1b" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9cc30643-c914-442a-b1f4-d0a816da7e92" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="187140db-3bb4-40f5-a1aa-a44a80620aa7" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7a3cdbcd-1ecf-43c0-bce0-d3514c86f65f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="52a9e27a-2bd7-4a8a-82b6-cfbfb745faad" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="1820a504-7c33-43d8-a029-f73e3263dbcd" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="630d9385-ede8-4c7f-8b1e-845cf57b50ae" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9bda9067-10ff-412f-9bfd-ebdd5e365b05" name="SOAP Response"/><con:assertion type="Schema Compliance" id="593411c6-b764-4e48-a09d-cafa68b6a717" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="2b47301c-c773-447e-82dc-89a066dd55aa" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="d5af7f6d-34fd-40a8-828f-9917557f1092" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9eeb33b3-d830-4fde-95c2-adbda94bd290" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6435450b-780d-4260-beb6-f45bea5a5e68" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7b38ec53-e378-4b77-a9f6-81b5ebbb9ae5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5826899e-4c2d-4dcc-a776-dc1824d07648" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="feee68c4-4012-4322-bd8c-eed3577596e8" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="c1baedc3-3a58-4703-8be0-ef2e9d4ad6e0" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8b937951-9920-4505-a749-033829fcde97" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a7a2cb8a-640d-4a5c-9789-94a55cbd2758" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ceda9d5d-6e66-49c4-9e95-e900f6a7ec53" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="10f39d28-5d66-48fd-9eba-ec07c6581436" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="68a4b158-bb20-4e36-8ca6-c1b9b6adb52b" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="722a13af-0d1d-4a69-b98a-1a55219c32bb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="546aa073-fa2a-4707-8b67-8eb137ab5559" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1d3d75d4-55de-4edb-be54-8d8f484d503a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4deeaaca-3455-4d20-80aa-30fa52b7a33e" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="1fc995bf-8d2a-4174-a87b-942248323d83" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="38881c7c-f39b-42f8-b9f0-ac84b0d94acb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5006c276-2f98-418e-9cbd-8b3867ef6d7a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9d92eb93-9aa2-457b-96d1-fd0503c219a5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="d2b1bf9f-6d33-43fc-a4ea-c95c84f2e70e" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="058c6e3d-90d5-4b8d-89da-a2249542e8a9" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b7857516-01c0-4eff-a544-bbbca957f2fc" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5467e698-39c0-4643-a673-8a450648d3a0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3312cefc-3b6f-4de8-9129-91d00240d633" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="d7bac66e-ced9-418c-9e09-6ef75f3150e9" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4eb2b476-35a9-44f8-bff1-ccfbb2eb8afe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="ac2adc84-29ab-4a80-ac03-bca66aedc072" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="a76f98a0-5bb0-431b-a1e3-03e91d1ce126" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ed011083-30d4-4582-8c62-fbf54d9bf344" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fc895eaa-4780-4ac0-ab7e-ee8e9017bc65" name="SOAP Response"/><con:assertion type="Schema Compliance" id="62a84dfb-61dd-47ce-8ac7-78723b555f54" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a0c0f69c-5e10-409f-b27f-88ae5005e162" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="6e109cc5-6b77-4b63-8300-ccc67ea37647" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - Dev - Request" id="89e53b27-bf22-4c96-a7ae-18db1ec3c21e" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0dcd7c9b-4a7d-434c-b958-5a6459d6bc9f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0f80f69e-af67-4c28-b1e8-a777be47dde8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="51137957-e73b-425b-afcf-1ac1d3351448" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="a664c487-5db0-47b2-a34c-05fe7b1e7c0f" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - DevNew - Request" id="09c28491-e090-44b9-8197-8cb1a6e07a70" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="3ead4e9e-1a19-4b39-bff3-f1a69ce9578c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6b1ba2a6-ba8b-4252-8c92-f962afd6a717" name="SOAP Response"/><con:assertion type="Schema Compliance" id="263045ea-a0a9-4aaf-9002-2a24c9f72fb4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6330343f-b3ab-4218-bac5-ef31b2109a26" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="d3abb724-6275-4e02-aea0-f1a5a2a5ff61" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - Dev - Request" id="74a64bf4-6ab8-491b-b241-d789e938e9f9" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ddd65adb-21c2-43a9-9696-70c00208b2ca" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7d64dd3e-bfb9-4998-a93f-b0d478d92bdd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1077c384-922b-4b1f-b40a-c2526b6fc7c1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="b4017bb6-f440-44c1-a70d-17554e56008f" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - DevNew - Request" id="f72ccf15-2339-4784-a723-cd735a033ff3" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="972bdb03-362d-46ae-93da-12bf384952c9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d59b4448-97ad-47a5-a8ae-0de2d2b9abe5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5df4e110-8711-49b7-b76a-3ed3eca7c8a8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9d6687b1-2965-4b55-b636-fcc070b1cc82" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="aea17518-94e0-4ab1-94d0-99803a2a68f2" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="ed2e7fa8-245a-4e2a-b954-5efff42332fb" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b1d3240f-17d9-45be-97b8-e092dac0681d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e5a9e6bf-1dbc-405d-8289-ba06336b6949" name="SOAP Response"/><con:assertion type="Schema Compliance" id="801e4fad-8035-4876-9abe-2a3de367c557" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="172fad0b-1143-4849-aeac-05daee040584" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - DevNew - Request" id="322d730b-c7c5-4a3f-9e4a-b3b2f78c5de6" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="89b6a72e-b0ff-42df-99fc-434a9c83b6be" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="af7ac03c-39e7-4b26-bebd-c8624bb84bef" name="SOAP Response"/><con:assertion type="Schema Compliance" id="44bbb2f8-ca88-4368-8159-57e3f9ba8a9e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>outgoingWSSName</con:name><con:value>OutFlow_TEST</con:value></con:property><con:property><con:name>inComingWSSName</con:name><con:value>InFlow_TEST</con:value></con:property><con:property><con:name>projectName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>keystorepassword</con:name><con:value>wso2carbon</con:value></con:property><con:property><con:name>keystorePath</con:name><con:value>/data/wso2/keystores</con:value></con:property><con:property><con:name>endpointId</con:name><con:value>worker1</con:value></con:property><con:property><con:name>env</con:name><con:value>test</con:value></con:property><con:property><con:name>wsdlServiceName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>fidus</con:value></con:property><con:property><con:name>userName</con:name><con:value>testUser</con:value></con:property><con:property><con:name>password</con:name><con:value>9iQK8CGRYqianaRK8iVnTiRxv9XtLJ</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>Outflow STAG</con:name></con:outgoing><con:outgoing><con:name>Outflow PROD</con:name></con:outgoing><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>