<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="df385805-fa87-40af-a70d-fb3abe0e3f50" activeEnvironment="Default" name="Client-FamilyAllocationService-v2-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="0a21a344-2d14-4921-9b23-68fb3ca3b105" wsaVersion="NONE" name="FamilyAllocationServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/familyallocationservice/v2}FamilyAllocationServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/FamilyAllocationService_v2.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/FamilyAllocationService_v2.wsdl"><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/FamilyAllocationService_v2.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/familyallocationservice/v2" name="FamilyAllocationService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:tns="http://fidus.brussels/service/familyallocationservice/v2">
  <xsd:annotation>
    <xsd:documentation>FamilyAllocationService WDSL v2.0</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/familyallocationservice/v2" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/familyallocationservice/messages/v2" schemaLocation="messages/familyAllocationServiceMessages_v2.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getAllocationRequestMessage">
    <wsdl:part name="GetAllocationRequest" element="mes:getAllocationRequest"/>
  </wsdl:message>
  <wsdl:message name="getAllocationResponseMessage">
    <wsdl:part name="GetAllocationResponse" element="mes:getAllocationResponse"/>
  </wsdl:message>
  <wsdl:portType name="FamilyAllocationServicePortType">
    <wsdl:operation name="getAllocation">
      <wsdl:input message="tns:getAllocationRequestMessage"/>
      <wsdl:output message="tns:getAllocationResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FamilyAllocationServiceHTTPBinding" type="tns:FamilyAllocationServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAllocation">
      <soap:operation soapAction="http://fidus.brussels/services/familyallocationservice/getAllocation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FamilyAllocationService_v2">
    <wsdl:port name="FamilyAllocationService_v2" binding="tns:FamilyAllocationServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/familyallocationservice/v2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/messages/familyAllocationServiceMessages_v2.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/familyallocationservice/messages/v2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:kszc="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" xmlns:ksz="http://kszbcss.fgov.be/types/ChildBenefits/v1">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" schemaLocation="../childBenefits/types/ChildBenefits/common/ChildBenefitsCommonV1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/ChildBenefits/v1" schemaLocation="../childBenefits/types/ChildBenefits/ChildBenefitsV1.xsd"/>
  <xsd:complexType name="FamilyAllocationServiceRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="beginDate" type="xsd:gYearMonth" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Begin date for family allowances period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="endDate" type="xsd:gYearMonth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>End date for family allowances period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="authenticSources" type="ksz:AuthenticSourcesType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>When not present, all sources will be selected</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getAllocation definition-->
  <xsd:complexType name="GetAllocationRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:FamilyAllocationServiceRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getAllocation definition-->
  <xsd:complexType name="GetAllocationResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="results" type="tns:ResultsType" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResultsType">
    <xsd:sequence>
      <xsd:element name="result" type="tns:ResultType" maxOccurs="5"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResultType">
    <xsd:sequence>
      <xsd:element name="authenticSource" type="ksz:AuthenticSourceType"/>
      <xsd:element name="files" type="kszc:FilesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FilesType"/>
  <!--Element of the request and the response-->
  <xsd:element name="getAllocationRequest" type="tns:GetAllocationRequestType"/>
  <xsd:element name="getAllocationResponse" type="tns:GetAllocationResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="relatesTo" type="tns:MessageIdType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional field. The unique id of a previous batch file in this exchange Only used for responses.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply sent by fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/childBenefits/types/ChildBenefits/common/ChildBenefitsCommonV1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--========================================================================
       	 * Owner :               KSZ / CBSS
         * Creation date :       2018-04-27
         * Description :         Common type definitions for the ChildBenefits web service.
         * Revision History : 	 2018-04-27: Initial version
========================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="2018-04-27" xmlns="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:complexType name="BaseSupplierRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="common:InformationCustomerType"/>
      <xsd:element name="informationSupplier" type="common:InformationSupplierType" minOccurs="0"/>
      <xsd:element name="legalContext" type="common:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FilesType">
    <xsd:sequence>
      <xsd:element name="file" type="FileType" maxOccurs="100">
        <xsd:annotation>
          <xsd:documentation>During the requested period an ssin can be known in different files. The periods however are supposed to be mutually exclusive.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FileType">
    <xsd:sequence>
      <xsd:element name="childBenefitsFund" type="ChildBenefitsFundType"/>
      <xsd:element name="fileNumber" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Not possible for FLANDERS files</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="entitledPersonSsin" type="common:SsinType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Only present for FEDERAL files</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="beneficiaries" type="BeneficiariesType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Only natural persons are returned. Institutions as beneficiaries are not present in this response. For FLANDERS files the concept of beneficiary does not indicate the actual receiving of the money. For INTERREGIONAL files the concept of beneficiary does do indicate the actual receiving of the money.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="children" type="ChildrenType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChildBenefitsFundType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="enterpriseNumber" type="common:EnterpriseNumberType"/>
        <xsd:element name="code" type="ChildBenefitsFundCodeType"/>
      </xsd:choice>
      <xsd:element name="description" type="ChildBenefitsFundDescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ChildBenefitsFundCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:length value="3"/>
      <xsd:pattern value="[0-9]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="BeneficiariesType">
    <xsd:sequence>
      <xsd:element name="beneficiary" type="BeneficiaryType" maxOccurs="100">
        <xsd:annotation>
          <xsd:documentation>For all types of files a great number of beneficaries is possible. Mother, Father, GrandMother, GrandFather, Foster parent, ... For FLANDERS files the bonuses and paymentperiods for these beneficaries will be identical to the ones present on the unique child. For the other files these bonuses or paymentperiods are not identical.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BeneficiaryType">
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType"/>
      <xsd:element name="bonuses" type="BonusesType" minOccurs="0"/>
      <xsd:element name="paymentPeriods" type="PaymentPeriodsType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BonusesType">
    <xsd:sequence>
      <xsd:element name="bonus" type="BonusType" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BonusType">
    <xsd:sequence>
      <xsd:element name="paymentDate" type="xsd:date"/>
      <xsd:element name="category" type="BonusCategoryType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BonusCategoryType">
    <xsd:sequence>
      <xsd:element name="code" type="BonusCategoryCodeType">
        <xsd:annotation>
          <xsd:documentation>BIRTH
ADOPTION
PRE_PAYMENT_BIRTH</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="DescriptionType" minOccurs="0" maxOccurs="3">
        <xsd:annotation>
          <xsd:documentation></xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChildBenefitsFundDescriptionType">
    <xsd:annotation>
      <xsd:documentation>Description of the ChildBenefitsFund</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="BonusCategoryCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
      <xsd:pattern value="[A-Z_]{1,50}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PaymentPeriodsType">
    <xsd:sequence>
      <xsd:element name="paymentPeriod" type="PaymentPeriodType" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PaymentPeriodType">
    <xsd:sequence>
      <xsd:element name="beginMonth" type="xsd:gYearMonth"/>
      <xsd:element name="endMonth" type="xsd:gYearMonth" minOccurs="0"/>
      <xsd:element name="category" type="PaymentCategoryType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PaymentCategoryType">
    <xsd:sequence>
      <xsd:element name="code" type="PaymentCategoryCodeType">
        <xsd:annotation>
          <xsd:documentation>BASIC
SPECIAL_CARE
ORPHAN_CARE
FOSTER_CARE
SOCIAL
UNIVERSAL_PARTICIPATION
OTHER_PARTICIPATION
TODDLER
CHILD_ALLOWANCE</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PaymentCategoryCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
      <xsd:pattern value="[A-Z_]{1,50}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ChildrenType">
    <xsd:sequence>
      <xsd:element name="child" type="ChildType" maxOccurs="100">
        <xsd:annotation>
          <xsd:documentation>For FLANDERS files this will be exactly ONE child</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChildType">
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType"/>
      <xsd:element name="bonuses" type="BonusesForChildType" minOccurs="0"/>
      <xsd:element name="paymentPeriods" type="PaymentPeriodsForChildType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BonusesForChildType">
    <xsd:sequence>
      <xsd:element name="bonus" type="BonusForChildType" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BonusForChildType">
    <xsd:complexContent>
      <xsd:extension base="BonusType">
        <xsd:sequence>
          <xsd:element name="beneficiaries" type="BeneficiaryIdentificationsType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Only present for FLANDERS files. This link does not indicate that the beneficiary has actually received the money. Per bonus or paymentPeriod only maximum 2 beneficiaries are possible. However over the enterity of the FLANDERS file more than 2 beneficiaries are possible.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BeneficiaryIdentificationsType">
    <xsd:sequence>
      <xsd:element name="beneficiary" type="common:SsinType" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PaymentPeriodsForChildType">
    <xsd:sequence>
      <xsd:element name="paymentPeriod" type="PaymentPeriodForChildType" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PaymentPeriodForChildType">
    <xsd:complexContent>
      <xsd:extension base="PaymentPeriodType">
        <xsd:sequence>
          <xsd:element name="beneficiaries" type="BeneficiaryIdentificationsType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Only present for FLANDERS files. This link does not indicate that the beneficiary has actually received the money. Per bonus or paymentPeriod only maximum 2 beneficiaries are possible. However over the enterity of the FLANDERS file more than 2 beneficiaries are possible.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--global status-->
  <xsd:complexType name="GlobalStatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
            <xsd:enumeration value="INCOMPLETE_DATA"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="common:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--source status-->
  <xsd:complexType name="SourceStatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="TECHNICAL_ERROR"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="common:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OpenYearMonthPeriodType">
    <xsd:annotation>
      <xsd:documentation>YearMonth period containing a month begin date and an optional YearMonth end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginMonth" type="xsd:gYearMonth"/>
      <xsd:element name="endMonth" type="xsd:gYearMonth" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SupplierFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="common:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationSupplier" type="common:InformationCBSSType"/>
      <xsd:element name="detail" type="common:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/childBenefits/types/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
*								  03-07-2015		Added NssoRegistrationNumberType
*                                 11-09-2015      Modified NssoRegistrationNumberType to allow both 9 long as temporary 10 long numbers starting with 51.
*                                 16-09-2015      Modified NssoRegistrationNumberType to 10 long numbers starting with 51 or with 0.
*                                 08-02-2016      Added StatusOkType
*                                 27-09-2016      Added YearQuarterType format yyyyQx, QuarterPeriodType and OpenQuarterPeriodType
*                                 04-04-2018      Added DataFiltersType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3-4" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory. For non-UUID tickets only the first 32 chars are stored at CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent. In the receiver block of response messages the timestampSent is the timestamp when the request was created by the organization that receives the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containing a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containing a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OpenQuarterPeriodType">
    <xsd:annotation>
      <xsd:documentation>Quarter period containing a quarter begin date and an optional quarter end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginQuarter" type="tns:YearQuarterType"/>
      <xsd:element name="endQuarter" type="tns:YearQuarterType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QuarterPeriodType">
    <xsd:annotation>
      <xsd:documentation>Quarter period containing a quarter begin date and a quarter end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginQuarter" type="tns:YearQuarterType"/>
      <xsd:element name="endQuarter" type="tns:YearQuarterType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="YearQuarterType">
    <xsd:restriction base="xsd:string">
      <xsd:length value="6"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[1-2]\d{3}Q(1|2|3|4)"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DataFiltersType">
    <xsd:annotation>
      <xsd:documentation>Type indicating which data elements have been filtered</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filteredElement" type="xsd:string" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for ok/nok type operations like notifications. Don't use if it doesn't fit requirements.-->
  <xsd:complexType name="StatusOkType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="OK"/>
            <xsd:enumeration value="NOK"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NssoRegistrationNumberType">
    <xsd:annotation>
      <xsd:documentation>Identification number of an enterprise at NSSO (= RSZ/ONSS). Numbers starting with 51 and length 10 are always temporary numbers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="0\d{9}"/>
      <xsd:pattern value="51\d{8}"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/adussart/projects/git/fidus/parent/familyallocationservice_2.0/FamilyAllocationServiceGateway/src/main/resources/wsdl/familyAllocationService/2.0.0/childBenefits/types/ChildBenefits/ChildBenefitsV1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--========================================================================
       	 * Owner :               KSZ / CBSS
         * Creation date :       2018-04-27
         * Description :         Type definitions for the ChildBenefits web service.
         * Revision History : 	 2018-04-27: Initial version
========================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/ChildBenefits/v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="2018-04-27" xmlns="http://kszbcss.fgov.be/types/ChildBenefits/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:childBenCommon="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/ChildBenefits/common/v1" schemaLocation="common/ChildBenefitsCommonV1.xsd"/>
  <xsd:element name="consultFilesBySsinRequest" type="ConsultFilesBySsinRequestType"/>
  <xsd:element name="consultFilesBySsinResponse" type="ConsultFilesBySsinResponseType"/>
  <xsd:element name="consultFilesBySsinFault" type="common:CBSSFaultType"/>
  <xsd:complexType name="ConsultFilesBySsinRequestType">
    <xsd:complexContent>
      <xsd:extension base="common:BaseRequestType">
        <xsd:sequence>
          <xsd:element name="criteria" type="CriteriaType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConsultFilesBySsinResponseType">
    <xsd:complexContent>
      <xsd:extension base="common:BaseResponseType">
        <xsd:sequence>
          <xsd:element name="criteria" type="CriteriaType"/>
          <xsd:element name="status" type="GlobalStatusType">
            <xsd:annotation>
              <xsd:documentation>NO_RESULT = request not consistent or not authorized by CBSS. 
INCOMPLETE_DATA = technical issue in the communication with one of the sources, but not all (the latter would give a SOAPFAULT). 
NO_DATA_FOUND = no technical issues and no files found for none of the requested sources. 
DATA_FOUND = no technical issues and at least one file found</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ssin" type="SsinWithCanceledAndReplacedByStatusType" minOccurs="0"/>
          <xsd:element name="dataFilters" type="common:DataFiltersType" minOccurs="0"/>
          <xsd:element name="results" type="FileResultsType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CriteriaType">
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType"/>
      <xsd:element name="period" type="childBenCommon:OpenYearMonthPeriodType"/>
      <xsd:element name="authenticSources" type="AuthenticSourcesType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>When not present, all sources will be selected</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AuthenticSourcesType">
    <xsd:sequence>
      <xsd:element name="authenticSource" type="AuthenticSourceType" maxOccurs="5"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SsinWithCanceledAndReplacedByStatusType">
    <xsd:simpleContent>
      <xsd:extension base="common:SsinType">
        <xsd:attribute name="canceled" type="xsd:boolean"/>
        <xsd:attribute name="replacedBy" type="common:SsinType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FileResultsType">
    <xsd:sequence>
      <xsd:element name="resultByAuthenticSource" type="FileResultType" maxOccurs="5">
        <xsd:annotation>
          <xsd:documentation>Will be present for each authentic source requested in the criteria.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FileResultType">
    <xsd:sequence>
      <xsd:element name="status" type="SourceStatusType">
        <xsd:annotation>
          <xsd:documentation>DATA_FOUND = files found for the ssin 
NO_DATA_FOUND = no files found for the ssin 
TECHNICAL_ERROR = Technical issue in the communication between CBSS and the authentic source</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="files" type="childBenCommon:FilesType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present when status is DATA_FOUND</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="authenticSource" type="AuthenticSourceType" use="required"/>
  </xsd:complexType>
  <xsd:simpleType name="AuthenticSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FEDERAL"/>
      <xsd:enumeration value="BRUSSELS"/>
      <xsd:enumeration value="FLANDERS"/>
      <xsd:enumeration value="WALLONIA"/>
      <xsd:enumeration value="EASTBELGIUM"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--global status-->
  <xsd:complexType name="GlobalStatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
            <xsd:enumeration value="INCOMPLETE_DATA"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="common:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--source status-->
  <xsd:complexType name="SourceStatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="TECHNICAL_ERROR"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="common:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://fidus.brussels/services/familyallocationservice/v2</con:endpoint></con:endpoints><con:operation id="29957c8e-13a1-4405-883c-b281a590bb42" isOneWay="false" action="http://fidus.brussels/services/familyallocationservice/getAllocation" name="getAllocation" bindingOperationName="getAllocation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e2348187-d2cf-4abb-b09c-a561a0847779" name="1 - Local - Request - All authentication sources" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v21="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v21:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v21:messageId>
            <v21:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v21:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>73013033514</v2:personNumber>
            <v2:beginDate>2015-01</v2:beginDate>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d29826ce-4bab-47cc-b9d2-d86e2a8b81e2" name="1 - Local - Request - 2 authentic sources" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV" sslKeystore="fidus-testuser-dev.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>56111328395</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0f5890bf-a531-4a5c-8549-7d24524f9b8e" name="1 - Local - Request - 1 authentic source" sslKeystore="fidus-testuser-dev.jks" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>93121223386</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2bf7c6e4-d4e2-476a-ad01-d367d9a17d9d" name="2 - Dev - Request - 2 authentic sources" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>56111328395</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5c4e1ed9-97c8-4056-acd5-8a1310b3f518" name="2 - Dev - Request - 1 authentic source" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV" sslKeystore="fidus-testuser-dev.jks"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>93121223386</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="1b4af0be-2a9a-4bf8-827a-000b2f02f89e" name="2 - Dev - Request - All authentication sources" outgoingWss="OUTFLOW_DEV" incomingWss="INFLOW_DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v21="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v21:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v21:messageId>
            <v21:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v21:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>73013033514</v2:personNumber>
            <v2:beginDate>2015-01</v2:beginDate>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="366a7ff6-3e64-4ec8-a087-93ecd6ede9ab" name="3 - Test - External - Request" outgoingWss="OUTFLOW_TEST" incomingWss="INFLOW_TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0f104c55-fafb-4091-9e91-5f58f13bdcf0" name="3 - Test - LB - Request" outgoingWss="OUTFLOW_TEST" incomingWss="INFLOW_TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4e1fe336-2157-4f25-95df-c5d12a35786c" name="3 - Test - Worker1 - Request" outgoingWss="OUTFLOW_TEST" incomingWss="INFLOW_TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call><con:call id="26c1c4e4-9747-4fd3-b3c2-3f7019908d98" name="3 - Test - Worker2 - Request" outgoingWss="OUTFLOW_TEST" incomingWss="INFLOW_TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/familyallocationservice/getAllocation"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="8bc76014-fe61-4fc4-a88a-8b48d96901e6" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8d78bc7d-9d20-40e7-afb1-8d10b0ff0735" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllocation" searchProperties="true"><con:settings/><con:testStep type="request" id="c1794b55-8d23-4300-9ff6-096320ecb8d1" name="testcase2 - Dev - Request - 2 authentic sources"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase2 - Dev - Request - 2 authentic sources" id="e7107124-5b55-411f-bba8-4ea918ac93f9" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>56111328395</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7d27df7c-606a-4814-a975-8d6fb2ef51af" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4479dfbe-fa90-47ad-968f-f10ae9f9b5dc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="562405f9-e5d9-4918-9938-1d1ea840a4c8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:testStep type="request" id="104c93f5-4b55-4d5a-9daf-7494e4829a56" name="testcase2 - Dev - Request - 1 authentic source"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase2 - Dev - Request - 1 authentic source" id="682c4b49-d950-4e88-9675-071246f7a2ba" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>93121223386</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Fault Assertion" id="5b6c16eb-d35d-4a69-8535-b0d5cf144a99" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="541b6bcf-0623-4dce-95a4-bf3ba2ce9cde" name="SOAP Response"/><con:assertion type="Schema Compliance" id="53c3a51a-8e3f-4a9b-b9c6-d2d93f8e6052" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:testStep type="request" id="0bd71bdb-628a-4039-809e-b1a780d8f8c5" name="testcase2 - Dev - Request - All authentication sources"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase2 - Dev - Request - All authentication sources" id="8b0196bb-0096-480a-95f1-b524a3ee1726" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v21="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v21:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v21:messageId>
            <v21:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v21:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>73013033514</v2:personNumber>
            <v2:beginDate>2015-01</v2:beginDate>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="3db7583c-3033-4363-8235-31def08ce94e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="181c79f0-ada8-45a0-aa07-2890513fc6ab" name="SOAP Response"/><con:assertion type="Schema Compliance" id="61aac097-0022-4493-a870-5c21071482de" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="a87816f9-0bf0-4504-919e-46d99b5bc0a5" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b24cf13a-f5bf-48e5-906c-b80a82b2f989" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllocation" searchProperties="true"><con:settings/><con:testStep type="request" id="6fe7dea9-9dac-4e74-a57a-1a087d9de26b" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase3 - Test - External - Request" id="1d7591fd-53e3-4544-8cd6-6cf895a59284" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="95b6d420-395e-492f-b5a5-770e63ce540d" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8979c0d1-7b7a-4fb2-bd96-ca3eeed9399d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="18094108-e54e-4138-a003-28e7b19d576a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:testStep type="request" id="ef6b0428-86a7-4b46-8061-9cee24b198b6" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase3 - Test - LB - Request" id="be9f3731-1444-463b-a74c-b73580ef8d4a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="55c4b319-43e5-4cc4-b579-2d70911c9f38" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8346c4b8-4749-450b-b505-2e5d72604860" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ebc8015f-4d4c-4d98-bbae-34067e6bbf65" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:testStep type="request" id="89be4cf1-559f-4806-86fa-d1d423390482" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="4467b1f7-b87b-48e9-badd-2361b55ebd10" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="89e7c5aa-0ed1-4080-8c83-bf2f5c303647" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cee0121c-ac2b-419e-b414-9985f12c6706" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fdd2f86f-11f8-4575-bd2c-3d2bd22f7fb2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:testStep type="request" id="206539bf-975f-4f9e-a9a9-f9f9eedc68dd" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>FamilyAllocationServiceHTTPBinding</con:interface><con:operation>getAllocation</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="3a6b47bc-1aa9-48b7-9d2c-51724bc3acd5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/FamilyAllocationService_v2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://fidus.brussels/service/familyallocationservice/messages/v2" xmlns:v1="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:getAllocationRequest>
         <v2:messageContext>
            <v1:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v1:messageId>
            <v1:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v1:timestamp>
         </v2:messageContext>
         <v2:legalContext>ServiceIntegrator</v2:legalContext>
         <v2:request>
            <v2:personNumber>48061518032</v2:personNumber>
            <v2:beginDate>2000-01</v2:beginDate>
            <v2:authenticSources>
               <authenticSource>FEDERAL</authenticSource>
               <authenticSource>WALLONIA</authenticSource>               
            </v2:authenticSources>
         </v2:request>
      </v2:getAllocationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="28f5d3e7-1c63-42ed-8e93-27df8c2a21e1" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a6c42592-6083-4d47-aa6f-381ac8eb6e48" name="SOAP Response"/><con:assertion type="Schema Compliance" id="19e529c5-537d-4e8f-84f8-86a6412c9a5f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/familyallocationservice/getAllocation"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer><con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing></con:wssContainer><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>