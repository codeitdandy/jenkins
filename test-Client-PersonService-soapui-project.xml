<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-PersonService-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="efe0aa1f-2a44-41ee-b006-1bbb321d7454" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PersonServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/personservice/v1}PersonServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl" id="ed9c9566-ab71-4610-a99e-aa2b2583faec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/personservice/v1" name="PersonService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/personservice/messages/v1" xmlns:tns="http://fidus.brussels/service/personservice/v1">
  <xsd:annotation>
    <xsd:documentation>Person service WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/personservice/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/personservice/messages/v1" schemaLocation="messages/personServiceMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="searchPersonByAddressRequestMessage">
    <wsdl:part name="SearchPersonByAddressRequest" element="mes:searchPersonByAddressRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonByAddressResponseMessage">
    <wsdl:part name="SearchPersonByAddressResponse" element="mes:searchPersonByAddressResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getIdentityResponse"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyRequestMessage">
    <wsdl:part name="SearchPersonPhoneticallyRequest" element="mes:searchPersonPhoneticallyRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyResponseMessage">
    <wsdl:part name="SearchPersonPhoneticallyResponse" element="mes:searchPersonPhoneticallyResponse"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getCBSSIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getCBSSIdentityResponse"/>
  </wsdl:message>
  <wsdl:portType name="PersonServicePortType">
    <wsdl:operation name="searchPersonByAddress">
      <wsdl:input message="tns:searchPersonByAddressRequestMessage"/>
      <wsdl:output message="tns:searchPersonByAddressResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <wsdl:input message="tns:getIdentityRequestMessage"/>
      <wsdl:output message="tns:getIdentityResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <wsdl:input message="tns:searchPersonPhoneticallyRequestMessage"/>
      <wsdl:output message="tns:searchPersonPhoneticallyResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <wsdl:input message="tns:getCBSSIdentityRequestMessage"/>
      <wsdl:output message="tns:getCBSSIdentityResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PersonServiceHTTPBinding" type="tns:PersonServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchPersonByAddress">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getCBSSIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PersonService_v1">
    <wsdl:port name="PersonService_v1" binding="tns:PersonServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/personservice/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/personServiceMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/personservice/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/personservice/messages/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:per="http://kszbcss.fgov.be/types/legaldata/person/v3" xmlns:periss="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../person/common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../person/legaldata/BaseLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/person/v3" schemaLocation="../person/legaldata/person/PersonLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" schemaLocation="../person/legaldata/person/PersonIssLegalDataV3.xsd"/>
  <xsd:simpleType name="GivenNameMatchingType">
    <xsd:annotation>
      <xsd:documentation>Type defining the possible ways to interpret the given firstnames during the phonetic search.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FIRST_LETTER_FIRST_GIVENNAME"/>
      <xsd:enumeration value="COMPLETE_FIRST_GIVENNAME"/>
      <xsd:enumeration value="ALL_GIVENNAME"/>
      <xsd:enumeration value="IGNORE_GIVENNAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PersonByAddressRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given address information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="postalCode" type="base:PostalCodeType" form="unqualified"/>
      <xsd:element name="streetCode" type="base:StreetCodeType" form="unqualified"/>
      <xsd:element name="houseNumber" type="base:HouseNumberType" form="unqualified"/>
      <xsd:element name="houseIndex" type="base:HouseIndexType" minOccurs="0" form="unqualified"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IdentityRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonPhoneticallyRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given phonetical name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="lastName" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1"/>
                  <xsd:maxLength value="48"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="givenName" type="base:GivenNameType" minOccurs="0" maxOccurs="3" form="unqualified"/>
            <xsd:element name="givenNameMatching" type="tns:GivenNameMatchingType" form="unqualified">
              <xsd:annotation>
                <xsd:documentation>Element specifying the behavior of the searchPersonPhonetically capability.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="birthDate" type="common:IncompleteDateType" form="unqualified"/>
            <xsd:element name="variation" minOccurs="0" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:maxInclusive value="99"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="genderCode" type="base:GenderCodeType" form="unqualified"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="maximumResultCount" minOccurs="0" form="unqualified">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="50"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonByAddressRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonPhoneticallyRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:IssResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="per:PersonResponseType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="periss:PersonResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="searchPersonByAddressRequest" type="tns:SearchPersonByAddressRequestType"/>
  <xsd:element name="searchPersonByAddressResponse" type="tns:SearchPersonByAddressResponseType"/>
  <xsd:element name="getIdentityRequest" type="tns:GetIdentityRequestType"/>
  <xsd:element name="getIdentityResponse" type="tns:GetIdentityResponseType"/>
  <xsd:element name="searchPersonPhoneticallyRequest" type="tns:SearchPersonPhoneticallyRequestType"/>
  <xsd:element name="searchPersonPhoneticallyResponse" type="tns:SearchPersonPhoneticallyResponseType"/>
  <xsd:element name="getCBSSIdentityRequest" type="tns:GetCBSSIdentityRequestType"/>
  <xsd:element name="getCBSSIdentityResponse" type="tns:GetCBSSIdentityResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 25-03-2011
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.1
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/BaseLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: BaseLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.2
	* Revision History		: 09-03-2011  	ForeignAddressContentFragment now contains an optional foreignCityCode element.
    *														ForeignLocationContentFragment now contains an optional foreignCityCode element.
	*														ForeignAddressRequestContentFragment now contains an optional foreignCityCode element.
	*														ForeignLocationRequestContentFragment now contains an optional foreignCityCode element.
	*														AddressContentFragment/number + length 10 constraint
	*														AddressContentFragment/boxNumber + length 10 constraint
	*														CivilStateInfoContentFragment/civilStateCode length constraint 5 changed to 2 (Leading to incompatible change)
	*														NisCodeType + length 5 constraint (Leading to incompatible change)
	*														NobilityTitleContenctFragment added
	*														BirthInfoContentFragment extended with ActContentFragment
	*														ForeignLocationContentFragment added to CivilStateInfoContentFragment
	*														ForeignLocationContentFragment. length constraint 3 changed to 5
	*														foreignCityCode length constraint 10 changed to 5
	*														foreignCityName length constraint 50 changed to 100
	*														Refactored RegisterType to PersonType
	*														Refactored to use common:SSINType
	*														Removed SSINType
	*														GenderCode refactored from String1Type to GenderType
	*														Refactored to use common:IncompleteDateType
	*														Removed IncompleteDateType
	*														FamilyMember information removed
	*									25-10-2011	Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored firstname to givenName
	*									16-02-2012	New major version
	*									16-03-2012	Added a content fragment for temporary address
	*														Created AddressClassType
	*														DescriptionType in CommonV3 changed, no language anymore: added specific DescriptionType here with optional language
	*														Using CommonV3 DescriptionType for civilstate and nobilitytitle (adding a size constraint of 100)
	*									04-04-2012	Removed class attribute from address types
	*														Added new structure for diplomatic addresses and posts
	*									07-09-2012	Codes in LegalData now possible in three languages
	*												Removed act from BirthInfo 
	*									01-10-2012	gender in request renamed to genderCode
	*														Changed type for inceptionDate elements: now xsd:date
	*									08-11-2012	name/name in request and response renamed to name/lastName
	*									28-01-2013	New minor version 3.1
	*														Added optional diplomaticPostName
	*														Added switch for partnerSsin with new element partnerReference
	*														Added AdministratorContentFragment
	*									08-04-2014	New minor version 3.2:
	*														Added BirthActContentFragment and BirthActTypeCode
	*														Added birthAct to BirthInfoContentFragment
	*														Added LegalCohabitationGroup, SubregisterGroup, AbsenceGroup, FiliationGroup
	*														Added BirthGroup, DeceaseGroup, CivilStateGroup and NationalityGroup for consultation per datagroup
	*									08-10-2014	Added expiration details for LegalCohabitation
	*									08-10-2014	Extracted partner type from Civilstate and also used it in LegalCohabitation
	*									04-02-2015	Created DiplomaticAddressHistoryContentFragment with multiple postaddresses to use in ResidentialAddressHistoryContentFragment
	*									10-02-2015	Created PlainAddressHistoryType to reflect expiry dates for diplomatic addresses and post addresses
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <!--Response content fragments-->
  <xsd:group name="NameInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" type="tns:PartnerType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SisOrIsiContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the social identification part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hasSocialIdentificationCard" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:group>
  <!--Request content fragments-->
  <xsd:group name="NameInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="partnerSsin" type="common:SsinType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--General content fragments-->
  <xsd:group name="NobilityTitleContentFragment">
    <xsd:annotation>
      <xsd:documentation>Type describing the nobility title of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitleCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="2"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nobilityTitleDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressHistoryType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressHistoryContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AdministratorContentFragment">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="location" type="tns:LocationType"/>
        <xsd:element name="specialNotion" type="tns:SpecialNotionType"/>
      </xsd:choice>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An optional post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressHistoryType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressHistoryType" minOccurs="0" maxOccurs="10">
        <xsd:annotation>
          <xsd:documentation>An optional list of post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TemporaryAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="temporaryAddress" type="tns:PlainAddressType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Datagroup content fragments-->
  <xsd:group name="SubregisterGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subregisterCode" type="tns:NRSubregisterCodeType"/>
      <xsd:element name="subregisterDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partner" type="tns:PartnerType"/>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="tns:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationBailiff" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="bailiffName">
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1"/>
                        <xsd:maxLength value="48"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="location" type="tns:LocationType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Place where civil state was registered.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationExpirationGroup">
    <xsd:sequence>
      <xsd:element name="expiryDate" type="xsd:date"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="reasonDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="location" type="tns:LocationType"/>
      <xsd:element name="notificationDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FiliationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filiationCode" type="tns:FiliationCodeType"/>
      <xsd:element name="filiationDescription" type="common:DescriptionType" minOccurs="0"/>
      <xsd:element name="parent" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="tns:ParentType">
              <xsd:attribute name="sequence" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:unsignedShort">
                    <xsd:maxInclusive value="3"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AbsenceGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="absenceCode" type="tns:AbsenceCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthGroup">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the DeceaseInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the CivilState information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="partnerSsin" type="common:SsinType"/>
              <xsd:element name="partnerReference">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="11"/>
                    <xsd:minLength value="1"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
            <xsd:element name="partnerName" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="tns:NameInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the NationalityInfo as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="justification" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="justificationCode">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:minInclusive value="0"/>
                  <xsd:maxInclusive value="999"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="justificationDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Types-->
  <xsd:simpleType name="GenderCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CivilstateCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonRegisterType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR"/>
      <xsd:enumeration value="BIS"/>
      <xsd:enumeration value="RAD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NRSubregisterCodeType">
    <xsd:annotation>
      <xsd:documentation>Code specifying the subregister of the National Registry in which the person can be found</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="CBSS"/>
      <xsd:enumeration value="BOTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FiliationCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GivenNameValueType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="48"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GivenNameType">
    <xsd:simpleContent>
      <xsd:extension base="tns:GivenNameValueType">
        <xsd:attribute name="sequence" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="3"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartnerType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="partnerName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ParentType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="parentSsin" type="common:SsinType"/>
        <xsd:element name="parentReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="parentBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="parentGender" type="tns:GenderCodeType" minOccurs="0"/>
      <xsd:element name="parentName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>Type describing a Belgian location (BelgianMunicipality). Can be used as a birthplace or decease place.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActType">
    <xsd:sequence>
      <xsd:element name="actTypeCode" type="tns:ActCodeType"/>
      <xsd:element name="actTypeDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SpecialNotionType">
    <xsd:annotation>
      <xsd:documentation>Container for special NIS codes occurring in the information type 001</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specialNotionCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="specialNotionName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PostalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StreetCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseIndexType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PlainAddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>the country of this address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="address" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the actual address, in unformatted form</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PlainAddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:PlainAddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" type="tns:CityCodeType" minOccurs="0"/>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="postalCode" type="tns:PostalCodeType" minOccurs="0"/>
      <xsd:element name="streetCode" type="tns:StreetCodeType" minOccurs="0"/>
      <xsd:element name="streetName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="houseNumber" type="tns:HouseNumberType" minOccurs="0"/>
      <xsd:element name="boxNumber" type="tns:BoxNumberType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:AddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DiplomaticPostType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>Country code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="diplomaticPostCode" type="tns:DiplomaticPostCodeType">
        <xsd:annotation>
          <xsd:documentation>The official code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticPostName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CountryCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CityCodeType">
    <xsd:annotation>
      <xsd:documentation>For Belgian locations this is the "NISCode", for foreign locations the cityCode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="DiplomaticPostCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AbsenceCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DatagroupStatusType">
    <xsd:annotation>
      <xsd:documentation>Type defining possible statuses of a datagroup occurrence</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DATA_FOUND"/>
      <xsd:enumeration value="NO_DATA_FOUND"/>
      <xsd:enumeration value="NOT_SUPPORTED"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 16-03-2012
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 09-03-2011  	NobilityTitleContentFragment added
	*														FamilyMembers datagroup removed
	*														PaymentAddress information removed
	*									25-10-2011	Refactored SSIN to camel case
	*														Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored unbounded NationalityInfo to 20
	*														Refactored unbounded CivilStateInfo to 20
	*									16-02-2012	New major version
	*									16-03-2012	Renamed residentialAddress to address
	*														Readded temporaryAddress
	*														CommonV3 BaseDescriptionType was renamed to DescriptionType
	*									07-09-2012	Removed subregister
	*									31-01-2013	added administrator
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/person/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonIssLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonIssLegalDatav3.xsd
	* Author					: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 04-04-2014
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 04-04-2014		Create PersonIssServiceV3 based on PersonServiceV3
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0beta1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
        </xsd:annotation>
      </xsd:group>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="registerInceptionDate" type="xsd:date">
      <xsd:annotation>
        <xsd:documentation>Date the person last entered the CBSS registries. Only present for BIS (creation date) and RAD (last RAD-in date) numbers</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="subregister" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:SubregisterGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="legalCohabitation" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:LegalCohabitationGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://fidus.brussels/services/personservice/v1</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/getIdentity" name="getIdentity" bindingOperationName="getIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="37782446-c7cc-4124-8f9c-72d13d0b07ca">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="d582fd0f-febf-4b0a-97c2-024bc79f3578">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>02021518897</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="d1bd40df-e64c-4659-a5ef-31be60f4dac1">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001508</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="9b354218-971c-4b4b-8b73-48b42e188d6f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="6656dc64-88ea-42e7-b564-5a6d797efd0d">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>LocalResidentCardJET</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="9d871621-6449-467f-b41d-3b7f324d26e4">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="d5ac1e83-c0e6-46a4-885b-5290d0b3e420">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="ce70dd41-8ecf-4c6c-9c8a-be3ca6af3724">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="43b3d025-e9f4-4351-9a95-94e4156ab666">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="8bccfa23-0ffe-433d-a652-0aa55ec1396a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="0aeafd29-c76a-4088-b770-35105a8b95a7">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="de2a30e7-e01c-4003-bc10-c3c9a454408a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="048341fb-a47a-4523-9892-3e538ff632cc">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="40595e83-d1a6-451f-9f26-a02595b73ee4">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="76a9e4ae-1fbd-4325-9a2e-c02f94b246fe">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="c6a72dfc-1520-45ac-bc12-d39fa9588a04" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="52cff34a-9094-4b49-b3be-3739f21d561c" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4054bf91-0a93-4f89-b218-9dfaecdb9b22" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c4e865d2-e8c5-4d34-a176-68de5a8657e4" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4c41d0e9-e341-481e-be8a-e3d5531309ca" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonByAddress" name="searchPersonByAddress" bindingOperationName="searchPersonByAddress" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ce38a6c-7ad5-442c-9f54-12e2a45b5a22">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="dc5f8e0f-3abc-41ff-8408-488888ef65be">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1481</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="96e62530-b8b7-4d46-be40-914b252ca667" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4fdf64fb-d478-4164-823d-4ea01aa4d298" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="bd14dd5b-7781-4ee2-8ccf-62d39077335e" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4cf18017-ee69-4750-af75-556f3f9fa371" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="9d2d20b2-ab33-4073-8388-b2b24e4b1e93" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="ce05d58f-458e-45a2-99bb-5464937162c5" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="fa9d8d9d-f74b-4016-9573-bc46c4c59f8f" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e03ee615-c9c3-4ad0-be69-11f89a3cf25f" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="85a4ad10-d22b-4e61-9773-e8480aae2de9" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="dc958878-2705-405e-bdee-e2347006388b" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="57836cf7-beed-4cdd-9ebc-9edaa21f9b5f" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="1e9bd60d-d233-410e-8ac9-8b0e1b9730e1" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="2fcc253d-1c54-482f-a8ef-6ee76c88251c" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="d0d2467b-e44f-4d98-83c7-3445155531bc" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="104c0ba3-e4a4-4755-91f0-21300b23a57f" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8e24ca88-5589-43f7-b289-5f0143e1b3cb" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b3922a18-5965-4e81-9c0c-27b3d94b839c" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f2c46c4c-5ff9-411a-b5ed-080f4d259776" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonPhonetically" name="searchPersonPhonetically" bindingOperationName="searchPersonPhonetically" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="963fba3d-d71d-4af1-b0ec-fb7dea19318c">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="ee0ebece-4826-4161-9fe7-a92fe233be58">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a9f1546e-50d6-49ff-97db-59f679b6e803" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="0eb96b84-438b-4b43-9b0e-364a4d879a4a" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="29cd5922-4b29-445e-9676-3bcb8a6a77f0" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="66e10986-5ba2-4be8-92e9-f244ee0db419" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="7774e707-8bb1-4aea-8d05-d31a1178f213" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="494189e7-d53f-4a37-b2ba-57c8cc4fbac6" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a0a75e53-d03d-4c37-a14e-ef1481a95b83" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a1588266-1de2-4249-aa20-79ae3bb93dda" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="543512c3-c165-4d8a-a66f-4f258c4308bc" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="3a0e7434-1658-489e-9ed3-44d5962510cd" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="b4b443cb-bc32-41d9-b03c-b3d11365f420" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="6cd9199d-4fcb-4533-9737-50bec44c6c06" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="8e4d5e0d-8b7f-4832-8583-7527b5b02192" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="e37aecba-4d68-420e-bdbd-0a0faa90d973" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8a5e3e1a-d9ac-4d9a-b5fe-d4276360ade6" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ac6a1bea-d396-4a81-9630-7c22f7380109" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="384d0ba2-46f8-4939-99c8-ab96a1587ad7" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b65ddc7-9fac-42d3-bff7-ef5085425add" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
  <con:operation id="62c05a83-d23c-47d0-b80d-d1c266b592ee" isOneWay="false" action="http://fidus.brussels/services/personservice/getCBSSIdentity" name="getCBSSIdentity" bindingOperationName="getCBSSIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5058bf2-d7bb-446f-bc3a-b809dfe231e9" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="df9b33fb-4355-4094-bc45-27137afbba35" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="bb7d46b8-7c28-4b77-ae75-3d0cd0f2e406" name="3 - Test - LB - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="63cc9021-a899-419e-80bf-9180c1c760cb" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b197eb99-abf5-461b-a4b9-18077e3372a3" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="342c0435-a5db-4e15-bb4e-bfd6ec7c7c4a" name="3 - Test - Worker2 - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3046e077-915f-4f81-9a73-3560519dd410" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90b593ff-1332-48cd-9046-fe59bc552700" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="26e7ddef-3a32-4429-92d6-743cea5b69be" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:testSuite id="a21dcb4f-55ae-4c61-8749-48ac18ff9a54" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3adbd07b-a43b-4612-a11f-953a253c6cfd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="619d442a-0fcd-447b-a2b8-c9a05a5a93f5" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="a68b3267-197f-42e4-aa9a-320a3f5399fc" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001508</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="779af3f7-9f43-4892-ba8a-879b6d16899f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="485d0026-64c5-49b5-9703-8814ade2986d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1262e7d5-38ff-46e7-96cf-2e8e857b9663" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="e121ce6b-6269-4d8f-97a0-699e16424aa4" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase2 - DevNew - Request" id="fa6d6fa2-7a5f-48d3-9e0b-0891fb479945" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c437e374-383f-46b0-8428-4c9f79aeb337" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cefbbfc5-8884-4c67-9da3-7e29727e89ae" name="SOAP Response"/><con:assertion type="Schema Compliance" id="427afa9b-0054-4eb0-ae17-f9cbb4929dbc" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8e35fe33-7ba5-4001-8fc4-21f690992267" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="bbf39a0b-dd01-43f9-9fdc-b5af3fb766d4" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - Dev - Request" id="e9349b29-0d25-4930-9a46-1b237467c248" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c1784deb-2f43-479a-b0d6-f791bbedfa9b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9129d146-7a91-4155-b6aa-963700662d8f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="53b159dc-94b1-485c-8f10-ab422429b72a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="149f69b8-e5a9-450e-a7cf-434df629d931" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - DevNew - Request" id="6240a51e-1e76-43b0-a4fa-7d011fc3e506" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="435f06df-ec49-45dd-9dc3-3d9c541d99b4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8f3a34ca-605b-4514-ac46-82cef96cdb51" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9d5cc0b2-6b96-49de-b4a6-79cd5644b012" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="103e08f8-4846-4f92-83bf-a46fc207c046" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="7440b40c-7363-47fd-bb15-64d52f1ebf79" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - Dev - Request" id="b55ad28c-75b7-4787-b715-832f3d8236c8" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="71d810c5-1ffa-4574-8f97-84aa76e04be5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="755458bd-df79-4946-b936-f2cf45c02298" name="SOAP Response"/><con:assertion type="Schema Compliance" id="57ca2818-dd98-4ce2-8c63-91c8d7e51bfb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="971f5750-5903-49cd-9e2c-975ac70b0ebb" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - DevNew - Request" id="a4de512b-b76e-4a77-be1c-4ceb7923f11e" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1748a15f-6919-4419-a895-fedfe9e1f3b8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8b035d40-cd7b-4ae5-b866-6e2344355421" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b8ec6d32-5698-41bd-ae9b-1046dbb133a3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="69c93e0d-b522-4bbd-9bff-2fe683033b0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="1ea198d8-8112-4bf5-a07a-716cc333695f" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="c87810bc-0d35-4f4e-b6d8-0b86df00ec2c" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="be49f0b8-3b60-4cd8-a0dc-d4d9e56ff4fd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2a394992-77df-47e4-829a-172212142ffe" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d0108669-6816-4e81-962b-11f314c6b26e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a4934694-9936-40c6-8928-56b921285938" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - DevNew - Request" id="38fca0a4-a38e-4a52-adde-f190620b8714" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8879a233-17d8-40d5-907b-cd854aeefb84" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ec699b2e-e0b0-46c9-9707-185f7111d3c1" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f2699cba-a89b-42b0-9961-f43c0b083a8c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="438911cf-5a48-4e5e-a3c7-466559c3b1d9" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="acdd4513-a144-46dc-b8c6-dff654a480e5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="acce9de5-19c5-43d6-9b1f-3b0d2a57095a" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="23da33f4-0be6-4af0-a5df-7482667a9d55" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d788b9db-b281-4ae3-bf97-e4c1e561fc54" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="296ef57b-3f28-4448-a34a-c7cfc366b69c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b2eea8ec-d559-4621-9583-72bd19c498cd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="327e4433-244d-4b61-a16c-73e50cddb546" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - LB - Request" id="7238360a-adfe-4a67-8956-9feba21b2214" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>LocalResidentCardJET</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7ccb800d-ef99-4a60-86dc-6bda986b4ffd" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4cf30a0b-a65c-48e4-ac6d-b0df28d8f957" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b4a16656-d09a-4921-96a8-7ebcaad6146a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="f4167bfb-8dfa-4baa-ab71-5aeb44f2ee62" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="5061097d-734b-468c-b845-8772229817b4" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ae8bf792-4332-43be-84be-d2d678eba22e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8cd008b4-2b93-4681-bb38-27da04201cfd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b145af12-dc1d-4d84-b717-15a703463478" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a21c431c-1453-49ee-8a1f-9b1fea607adc" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="17a58c5d-6c75-497c-b965-894c31f90460" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="caaa0655-0ccb-4109-9988-afb0d2207033" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="af69264a-d8b3-414b-8f2d-18bc8acee082" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5f4ac9f9-e76b-48f9-888d-8427734bf6c1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="d5679747-07b3-4841-b059-452d5a123c64" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="eb81576b-38f4-4ec9-b9c9-60be5500acc5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c666c195-55ca-48ea-99bd-702a908bd6bc" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="bcc1e213-735d-4e68-b28c-fa22fea84da3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="26bbcb7a-1091-4822-8768-ae725d4e9274" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="9a28a827-fdb1-4194-a185-5108fe4a5c42" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="4a40dada-9d11-43b2-9484-15a6f703e39e" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f9a4f4eb-c900-4ecd-b401-f22713a175e2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7c184d18-3de2-427b-965f-e96047561368" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c7fa4d23-f102-4a3c-afa5-cda3ab71c6c0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6f43e0ee-48cf-4a83-b9bf-403e629c453b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="0566d53b-a342-4b3d-b8e7-2ae8d8fce8d4" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - External - Request" id="45b7b71c-960a-4d40-b46e-020bd5b64843" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8922524b-a4d8-44ea-9124-ef691c766006" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c4beb74d-2b88-4e67-b6e9-4ffaf151660e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4acbe5ba-d3cf-4812-b717-1b0b87e8eda2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="4c606e77-509e-4e24-9061-f781fefbadc5" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - LB - Request" id="d5f44aa2-4488-4a27-8f7b-2f4248e7696d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b381fa75-575b-40e1-bab0-0db3d288892c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="664b9177-e7f1-42ff-8286-fadeec65c80d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1adf8cfd-3265-401e-8337-f24946c5990b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="0ad86120-b20a-4283-8b55-54f4b80d99da" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="a142e8f7-8574-4672-ba11-b08f3a3e9dbe" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="83e00da3-3df1-4762-8cdd-282020f949e7" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8cda133d-5876-4d21-b7da-925b0633e7f3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="904fee8d-abef-4b38-93c4-611c939e58dd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="58c626d8-acda-4bdd-be1b-e5d66c1d01e8" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="7be3fd3a-f5f4-4ae1-885e-aff43b31300b" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="07db4443-05dd-4deb-a98a-1de996ae5072" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="66ad7089-b95d-4dee-a1eb-bfa4b5160472" name="SOAP Response"/><con:assertion type="Schema Compliance" id="990af0bb-e0ad-4ee5-9313-ce12310e5791" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="670af396-c65c-4662-a1b9-951224116cb3" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="b3697433-cdef-4aa2-9820-d443beb9a1f5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9d862404-5f55-43b4-9d03-ec3875e55416" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="91029a3c-2088-48e1-8094-4a5f081b6014" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7a365b70-b764-4f06-98f8-72d58e691063" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="c52470cc-89e2-451b-b7a7-5478459fce7b" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="30fa4058-e499-47f7-b15a-085022dfa311" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="22e64d74-3405-4e27-a661-1d2f016596c9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a267782c-9386-4d35-9098-d646bd5fdaa4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="14d888c5-d26c-443e-82c8-81718a0bffc7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="16d208e3-0c07-460e-a552-c28c27d6c9df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="d127259a-c0fc-4c6d-9923-84acee7e1043" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - External - Request" id="53366d0f-b672-468e-888d-36a3483472fd" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f560f23b-aa58-40d6-9af3-3e076d40a0be" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b280f205-947a-4061-8310-95efbfc6ddd4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="52cbe74b-602d-4e59-b8fc-7fb21785cc40" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="ab0708a3-00b8-4502-8d06-a500bf3c4cb2" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - LB - Request" id="62645e78-9cd4-408c-b4f8-399c91343496" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8da6dae7-c83a-4742-ae3f-3ebdc2986be9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7d737064-e64a-4653-b1a4-a25b81f45084" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2eff63d3-e20a-4b21-b273-7f9b0a2d140d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="a24a69d0-72b5-45a4-988c-3f9c299e6f8f" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="e550577e-a82e-4f4a-bedd-25182ed4f142" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="dc926a83-2125-4fbf-9399-a1baa5dcce5b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f511231a-bd56-48b8-9bb6-a746953631d8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="516fd158-3022-44e8-8c51-a91d4676cb80" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="6acd23bc-cc1f-42c4-b296-abfae0682212" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="5887fe88-83f1-415d-a2f4-5df4b3a745f7" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="693e8366-28d1-400a-8b88-9e0f8cdcafdf" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9b26645f-5d3d-4004-b612-d864014e7762" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3a132119-3852-45a8-9689-54025ea1d62a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="f8dca913-cbeb-4c44-abfe-76b60d720a85" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="f8edbfcf-2741-4984-8caa-18309a0f68af" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c42dc500-7aa4-4ca5-98f7-8cc7e8d28ef3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ae99d329-c755-40d5-8733-7b701bff5937" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cddabecb-9e38-44ba-a7a5-c76c4a66267d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="8385e30f-6a03-4e81-b881-9073147bb5ae" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="6acd4e88-85fb-4869-8342-f71bebb746d3" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="70bb33fb-fe61-4c98-a4b2-e696c9a6f981" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="efa8b64f-b413-4d6f-b7e3-95f807b1e243" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f0420a02-cd3a-4724-8b93-60afa9794155" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ae098114-2d08-4959-9fac-9086fa106908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="97441239-f605-4861-b824-f6b9030bbee6" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - LB - Request" id="d3024575-d6a9-417c-85cb-5888ff1c5549" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="cd9dc6ba-03b7-4fec-90e9-79d4c93fd0b9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fc503038-1821-49f7-84bb-9f64872408be" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3e9321d9-43d6-441e-89a7-f9c249d908ab" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a5ce8172-aaa8-4f9d-83ac-9e15a067b631" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="1038ba18-7915-466e-9880-cbfde9f5f341" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f1288118-41be-4d80-8aca-151d75dfd81f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="31ae5fd9-e9ff-45b2-87a3-e9ced43d5445" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e4e5bd20-d97e-4e50-877d-af59b2167a98" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="97e8e677-3424-4f34-bcae-5ac1411b0223" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="5968ef62-4499-43b1-822c-a973554819fc" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d0c5accf-425a-4c69-9812-255c1ce3c140" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="244615c5-8f26-447c-9967-a6c23020bfcd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a98adf08-094f-4ece-b2b4-88b4d27f2dd9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="025827b6-a9e3-40ba-8974-c61c4cbc4a30" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="ce293ac7-44d4-45b0-999d-c85cc2d78a06" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="802ee825-f262-4c4c-9a4f-b2764d8d4995" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="98f2a5b6-d998-4c3b-b4a0-63f8987fcbd8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="677db037-cdb7-4db3-98b7-cefa2ad92385" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="7a438475-f993-4699-b14d-493b34d19d02" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="2a977cdc-45be-4508-9ff0-f096e790de05" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="91815983-3722-48e1-b759-ac4c68de2a94" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3f578213-b6da-499b-ac62-3b42da62072d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4bd88a0e-dd00-4bf0-8949-3dc13e7bf6fe" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="ade60416-1773-455f-b30f-a49da321c994" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="ab3fa73d-9250-4760-bf58-8505327df47d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0dbc1dd6-414c-4bbe-bd3a-4b8be16695d2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2408009b-28ce-4d0e-8521-aa2c05d11711" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e6f977c2-52a1-4fd0-9b07-8b4bdfc1470b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="393292bd-a108-401e-b93d-e38d22fde58f" name="STAG"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e5f72dc2-4867-4430-9ba0-e75782be109e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="38e2690b-4d96-474c-a59d-60d0af3b486c" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="d253b164-0548-4ba2-81ac-9c076723fcf4" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9ae0c5b0-f876-468d-9888-a63947df29d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="80c91348-6f8f-44e5-9e7b-081ea996a1c9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="eaaed635-ebda-4b41-a258-090cffabee95" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="1273bb42-d710-4d27-8fc3-83ae4a4b08bb" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="032da5e1-f5a9-436a-95ce-ca2595a885ed" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="989b6b6e-bd86-4f01-89d1-6671bf714239" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4c4c3af8-f71f-435c-8693-50238ed8ae29" name="SOAP Response"/><con:assertion type="Schema Compliance" id="23994c39-95ad-40a4-916b-18aca70e45f6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a81b1116-cc0d-4a9f-85b2-fc9f41e94c4a" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="a4c429f7-9552-4538-9034-81a33bba8981" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="47b10ba3-d90e-4e75-ba91-8625d3fe8710" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1d0d4cc5-91d7-4b6f-85a7-b4251f94e2d4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="58bf014f-60bf-4287-8134-39aff76b43e5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="301e1149-4ecc-4971-aa3c-dfc91af5993d" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="ceb873d8-884c-4e5a-b451-77a00f8e2f67" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="522e22e1-1db1-4ccf-9aeb-bd26590858b7" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="193c1899-7bd1-4ddd-87ba-ee931fd87339" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0ea71d91-9f1c-4595-849e-cfe5fa7fe25a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="542c5345-148e-4d39-83b4-586b45e2f0d1" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="46e9169d-57e3-43c3-8612-04eafb92034c" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="dd745bfb-c243-4fb8-9e0f-a2afe87e3205" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="143e08b8-e80f-46b9-b175-d3a96ad14185" name="SOAP Response"/><con:assertion type="Schema Compliance" id="072791e7-4dd6-49c0-a113-2bbd5c47ccf0" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="c79c40f7-b42d-40b4-8b87-fbce1a863e93" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="f3d55fe5-22dd-4dda-b087-7a6b5003e214" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7986fe20-f454-4c87-8f49-87a6cfba8c40" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6aa608e4-b4d1-434d-a974-662486ebdfb5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="429d1624-2c44-41c3-b0e7-4d1c66b8bde7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7bdeac26-665c-4abf-83e1-d0dffa70c630" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="07c84a1a-d7c9-4e33-a76a-3ae8a235ed73" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - LB - Request" id="92688720-866d-400e-bcd2-7fd8cf578f81" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1ab22e9b-564f-4283-bf97-c3a2126f86db" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0dcb2119-0a13-438a-ac3b-c111431f8dc9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="52b330b5-52ba-4eca-8776-ce8920f850ca" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="eef00d0f-96be-429e-bd51-869e31adb6ce" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="25166720-1800-4fdf-9443-41b98a1b2b92" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="841a5fa7-04ac-40bb-927a-5ac98562d893" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f5fe59d8-e9ce-4454-9545-0d73abd3e5bc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="603bc51b-7160-40b1-b5c7-5807d518b3a4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="5a41ea93-2ec4-4a01-9fcd-de24ede0afbf" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="1fe0561f-3297-4542-9c07-411fcb5ff965" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="74fb3604-b067-4574-8d87-aa4d5e1093c3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a445fcd4-3a36-47a7-9db5-09f9e4a87c7a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0a01fd76-4c27-4702-b0cb-58967a51a256" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="4ae0d6a6-8cae-40d1-b68a-4eb9f455705b" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - External - Request" id="c35e97c4-35a5-4dfe-b906-14081af233e0" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="aabd31a0-2542-4b05-8c94-3c566fc72aed" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="737a273a-bb90-46a8-b2ce-7a67818349f0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6d52267e-9e30-453d-9300-19f5112c0e14" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="b540222f-01d7-4424-a226-3ae925f4ab84" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="64a2fab3-7bbc-4776-bc55-6a9cbb5cec29" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="fdaf1b92-5c32-4b8f-bdf6-89e191f50b9b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="479218f7-e910-448c-a2c9-2e2c00ec53ab" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a03c8dcb-819a-4336-837a-9931b3aa9ad9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="504deb2c-2dbf-402f-b972-ae8af4e0352f" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="f63d4615-654b-4980-a796-0c9e3b900ef4" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="feaad580-37da-4e57-8cac-bbee20158811" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b5bb2fc8-0182-4adf-829e-d272d7467c8b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3805a526-dcdb-4d7d-9ad6-e76c7fa85295" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="282dc66a-e213-470f-a0c4-907331788dcc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="db3086b8-60b0-4486-b543-d9c40e2d7945" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="423dc6f6-456a-4e29-b7ed-382dae02fcca" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="87d45e30-c5f4-44b9-a9bc-b971898c2499" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a6a3a68f-7f9c-46df-9f53-d24a334809b1" name="SOAP Response"/><con:assertion type="Schema Compliance" id="54d0f923-9a27-4133-bb1a-58603dab947a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="7e4514ce-6a3e-4223-b455-5f92a1899a78" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="205ab252-07f7-4760-b0f9-866abb087d44" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0c4037f4-977d-4198-a8fb-6983ff415db8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="ad2e5898-a682-4932-a201-3e284c74b253" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cfc5a497-b9ae-4723-a002-7a7e07157fdb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="f7a8efda-2f12-4165-8f8e-615f7317863f" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - External - Request" id="64c1645d-dad4-4045-b356-800618c6a7bb" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="38c04cdd-94d6-4eb5-b753-977ad26ee72b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="95f58edf-d3c6-4941-a4a9-80faae5c1be0" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3b69ae7d-249f-4f1d-aba6-d883206d15a4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="7cecbb4f-0838-4515-af7f-c8d707adaac0" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - LB - Request" id="4a5c1536-d6b0-4ba8-be58-634ddcd08586" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8fd6fe74-c6d1-4ab2-adb3-1393238fb8bf" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="67f087bf-c298-4410-bdb5-5e03e9f66809" name="SOAP Response"/><con:assertion type="Schema Compliance" id="eb96b734-8378-4b46-9238-3335f32e2a80" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="08600b45-be78-4623-a1f0-c0d2bb46bae1" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="ae830fe9-cf09-4ebd-94da-95531ed13d4d" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a8d42cb3-6b0e-43d2-94bf-b7dcfe4a7ec7" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="87260295-bcc7-41df-8da7-b8912860954c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="66eb9dfe-5e38-4b24-82b8-47a24721c346" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="4de3f4b8-9ee8-4adb-a31a-a04897828758" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="262d1158-dcf7-41ae-a7d4-e38175bcd238" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="56c80276-250e-4357-b7a8-6f14321cc0ef" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0dc466b2-8957-4262-ac21-e8f2091645b9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="25624352-2435-4909-bbd9-81f520624be4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="8a9ec670-9d8a-4017-850f-f1b458311219" name="PROD"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b7c5b7da-69cd-4b7d-afcb-ec56bf47f75a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="5fb0bce7-b2d0-4e98-8411-95b4f1de075c" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="34c86378-ad0b-419f-b104-a7966e5475de" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2e462177-7ac4-4f10-b3b0-eb6d642fa573" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a5a9853a-8a95-4946-b04d-4b4b65c2e34a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ae4c9e31-e6e9-4cbb-b7c6-888b4b80f61f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="c60ebaac-8bed-4479-b05c-eab0481b3332" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="c3b93c0c-a3e2-4c9c-ac6a-710d22598819" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0cd3760c-14bc-48de-961f-36fb3a27e255" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d45a9f91-6fd9-47d5-844e-1501f4718603" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cdc7d939-3285-4d43-b220-cd0ff13a388c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="73f58241-6437-4dd8-b61d-ca18bd8df3b2" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="a8db197f-0ec5-49b1-9894-c7d7288f4497" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0f66512d-7632-40a9-a93e-830e2dcc1ade" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e096a8db-8cae-43f9-b95a-1bd7949e341a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cd32818b-2094-4d7a-9d1a-17bc6fe2cb64" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="1af99d28-1209-44d5-9b27-2b9df3748835" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="5c9bdba3-a2e0-45f1-b851-0910d773a366" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="38da9410-1b5b-4844-b5a8-5b3ca8244a89" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3feed310-e709-4df8-8790-bf4771c78eae" name="SOAP Response"/><con:assertion type="Schema Compliance" id="68f58d75-af53-4bc7-b84d-36ee713b3a27" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e5d047dd-6bfa-4b47-b672-2bb39dc96d86" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="2d66c373-3850-462d-a759-1b351ccce611" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - External - Request" id="7273529e-5d10-4f51-85df-1e8345e7ceab" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1757a782-6b0a-416d-8a56-0a6a68830b44" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a37dc841-1497-44a9-a666-cce99bad8b92" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e42e8465-a799-4434-ab49-45cb77ac0296" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="99c4f33e-24d3-4346-b763-ffe23283d136" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - LB - Request" id="29041d20-4708-4297-b834-d520c09027aa" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="6c482416-dcea-42b7-96d3-28b79c6db921" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f323e970-3dfb-43e0-a405-c843b3a69027" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9fbdb94b-1035-4045-a811-a0bf9f3232d7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="2505040c-5076-4fa8-9f01-3125da3cf565" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="c874f1de-b1b2-4ec4-8b8a-4b0a4fbb1eeb" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a50d9efb-5392-490a-b140-740ca88d9137" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e3693dd0-e792-499b-935b-a4a193a503c9" name="SOAP Response"/><con:assertion type="Schema Compliance" id="50d0c270-f6b9-4ef9-b68d-ece9a9f57d90" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="da9110dd-f60d-4708-98dd-7b5e6633e25b" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="6f7c7cbd-9d12-49b6-a2e3-940a665c3275" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f0c1706e-7448-48a4-8a7e-76cbe2094ab9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3e240644-24b8-4f31-92c4-7a803960ed6d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="18647673-341b-4914-a9d0-45512bac94f4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6c182e7b-8d2c-4413-a56f-9d4403211d59" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="d15e2889-36a5-4ce5-aab5-dcb485276545" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - External - Request" id="0136dbdd-1250-4440-983a-6fea83964ca8" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="576380b4-fd54-4b59-85ef-82f79af4cdf3" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c30fbf0e-0d55-430c-8382-8ab2daf5c2b4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cfaa4e66-435f-41e0-acef-174c8f490ea2" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="7cb09197-7830-45d0-9d78-035518bc12d6" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - LB - Request" id="06ed58d0-b819-477b-b202-1144fdaccd22" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d58eccf4-7fe0-49c9-bdb5-85e10f9b9b07" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2e25bb86-7255-4de7-b5e0-1b9f2fbf82b4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="489525ef-3086-476c-8fa9-46f8f5768aaa" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="b5dc586f-aa77-4ced-b362-52043bc97824" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="2c58748e-8127-473b-beb8-4757f1e00320" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="92adec2c-1cc1-4195-afde-91bd755c684e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8edb8f46-0862-4808-be0c-f93622329476" name="SOAP Response"/><con:assertion type="Schema Compliance" id="81e05e85-f9bf-493f-9a4f-12950c44f1c1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="2b8d167c-06cc-4b93-9d64-ebe4f00863ad" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="df597fda-9cf2-48d0-b073-91ea5221af21" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ba04fe43-32c2-4590-b153-03bbe751c20c" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="99feffba-ab03-4347-961c-2b01c1d30ea8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c848eeda-db80-4896-a4c6-44afd0e75e9d" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>Outflow STAG</con:name></con:outgoing><con:outgoing><con:name>Outflow PROD</con:name></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>