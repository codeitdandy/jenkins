<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-DmfaService-1.0-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="258b2078-7fde-4e84-b415-90e79b93b3a0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="DmfaServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/dmfaservice/v1}DmfaServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/DmfaService_v1.wsdl" id="752d788d-c721-4a26-ac29-1242e27aacf6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/DmfaService_v1.wsdl"><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/DmfaService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/dmfaservice/v1" name="DmfaService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:tns="http://fidus.brussels/service/dmfaservice/v1">
  <xsd:annotation>
    <xsd:documentation>DmfaService WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/dmfaservice/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/dmfaservice/messages/v1" schemaLocation="messages/dmfaServiceMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getDmfaServiceRequestMessage">
    <wsdl:part name="GetDmfaServiceRequest" element="mes:getDmfaServiceRequest"/>
  </wsdl:message>
  <wsdl:message name="getDmfaServiceResponseMessage">
    <wsdl:part name="GetDmfaServiceResponse" element="mes:getDmfaServiceResponse"/>
  </wsdl:message>
  <wsdl:portType name="DmfaServicePortType">
    <wsdl:operation name="getDmfaService">
      <wsdl:input message="tns:getDmfaServiceRequestMessage"/>
      <wsdl:output message="tns:getDmfaServiceResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DmfaServiceHTTPBinding" type="tns:DmfaServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getDmfaService">
      <soap:operation soapAction="http://fidus.brussels/services/dmfaservice/getDmfaService"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DmfaService_v1">
    <wsdl:port name="DmfaService_v1" binding="tns:DmfaServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/dmfaservice/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/messages/dmfaServiceMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/dmfaservice/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:dmfa="http://kszbcss.fgov.be/types/Dmfa/common/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../dmfa/common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/Dmfa/common/v1" schemaLocation="../dmfa/Dmfa/common/DmfaCommonV1.xsd"/>
  <xsd:complexType name="DmfaServiceRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cbeNumber" type="common:CbeNumberType" nillable="true" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="beginDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Begin date for dmfa period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>End date for dmfa period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getDmfaService definition-->
  <xsd:complexType name="GetDmfaServiceRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:DmfaServiceRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getDmfaService definition-->
  <xsd:complexType name="GetDmfaServiceResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="dmfaPeriods" type="dmfa:DmfaPeriodsType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="getDmfaServiceRequest" type="tns:GetDmfaServiceRequestType"/>
  <xsd:element name="getDmfaServiceResponse" type="tns:GetDmfaServiceResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="relatesTo" type="tns:MessageIdType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional field. The unique id of a previous batch file in this exchange Only used for responses.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply sent by fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/dmfa/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
*								  03-07-2015		Added NssoRegistrationNumberType
*                                 11-09-2015      Modified NssoRegistrationNumberType to allow both 9 long as temporary 10 long numbers starting with 51.
*                                 16-09-2015      Modified NssoRegistrationNumberType to 10 long numbers starting with 51 or with 0.
*                                 08-02-2016      Added StatusOkType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory. For non-UUID tickets only the first 32 chars are stored at CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent. In the receiver block of response messages the timestampSent is the timestamp when the request was created by the organization that receives the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for ok/nok type operations like notifications. Don't use if it doesn't fit requirements.-->
  <xsd:complexType name="StatusOkType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="OK"/>
            <xsd:enumeration value="NOK"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NssoRegistrationNumberType">
    <xsd:annotation>
      <xsd:documentation>Identification number of an enterprise at NSSO (= RSZ/ONSS). Numbers starting with 51 and length 10 are always temporary numbers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="0\d{9}"/>
      <xsd:pattern value="51\d{8}"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/dmfaservice/DmfaServiceGateway/src/main/resources/wsdl/dmfaService/1.0.0/dmfa/Dmfa/common/DmfaCommonV1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--==============================================-->
<!--=   Service : Dmfa-->
<!--=   Filename : DmfaCommonV1.xsd-->
<!--=   Author : Jimmy Praet-->
<!--=   Owner : CBSS-->
<!--=   Date : 2014-11-19-->
<!--=  Status : Planned-->
<!--=   Description :Service to acquire DIMONA information about the employees of a company-->
<!--=  Current Version : 2015-01-21-->
<!--=   Revision History :-->
<!--* 1.0  2013-08-12 First Version-->
<!--* 1.0  2014-05-06 Added errorIds element for errorId list. Made YearQuarterType stricter.-->
<!--* 1.0  2014-09-12 C32ANbrType,nbrOfPlannedWorkingDay made stricter-->
<!--* 1.0  2014-11-19 changes after meetings and new analysis-->
<!--* 1.0  2015-01-21 changes after meetings with the partners; changed namespaces and directory structure ;-->
<!--* 1.0  2015-03-18 nbrOfPlannedWorkingDay removed limit on 50, lastUpdateTimeStamp is optional-->
<!--* 1.0  2016-09-28 abstracted DmfaPeriodBaseType, made DmfaPeriodResponseType an extension, added nbrOfPlannedWorkingHour-->
<!--=============================================-->
<xs:schema targetNamespace="http://kszbcss.fgov.be/types/Dmfa/common/v1" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="2015-03-18" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://kszbcss.fgov.be/types/Dmfa/common/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3">
  <xs:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <!--common complex types-->
  <xs:complexType name="PeriodCriteriaType">
    <xs:sequence>
      <xs:element name="relationSearch" type="RelationSearchType"/>
      <xs:element name="dmfaFeaturesSearch" type="DmfaFeaturesSearchType" minOccurs="0"/>
      <xs:element name="source" type="SourceType"/>
      <xs:element name="period" type="DmfaPeriodRequestType"/>
      <xs:element name="inOrOutOnly" type="xs:boolean" minOccurs="0"/>
      <xs:element name="cancelled" type="CancelledType"/>
      <xs:element name="temporaryWorkerSearch" type="TemporaryWorkerSearchType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaPeriodRequestType">
    <xs:sequence>
      <xs:element name="beginDate" type="xs:date"/>
      <xs:element name="endDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RelationSearchType">
    <xs:sequence>
      <xs:element name="employerSearch" type="EmployerSearchType" minOccurs="0"/>
      <xs:element name="workerSearch" type="WorkerSearchType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RelationType">
    <xs:sequence>
      <xs:element name="employer" type="EmployerSearchType" minOccurs="0"/>
      <xs:element name="worker" type="WorkerType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmployerSearchType">
    <xs:sequence>
      <xs:element name="nssoRegistrationNbr" type="NSSORegistrationNbrType" minOccurs="0"/>
      <xs:element name="enterpriseNumber" type="common:EnterpriseNumberType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UsingEmployerSearchType">
    <xs:sequence>
      <xs:element name="enterpriseNumber" type="common:EnterpriseNumberType" minOccurs="0"/>
      <xs:element name="nssoRegistrationNbr" type="NSSORegistrationNbrType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WorkerSearchType">
    <xs:sequence>
      <xs:element name="ssin" type="common:SsinType"/>
      <xs:element name="dmfaPeriodId" type="DmfaPeriodIdType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WorkerType">
    <xs:sequence>
      <xs:element name="ssin" type="common:SsinType"/>
      <xs:element name="replacedSSIN" type="common:SsinType" minOccurs="0"/>
      <xs:element name="dmfaFirstName" type="FirstNameType" minOccurs="0"/>
      <xs:element name="dmfaLastName" type="NameType" minOccurs="0"/>
      <xs:element name="nissAmbiguityIndicator" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>oriolus-code</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaFeaturesSearchType">
    <xs:sequence>
      <xs:element name="jointCommissionNbrs" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="jointCommissionNbr" type="JointCommissionNbrType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="workerCategories" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="workerCategory" type="WorkerCategoryType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="usingEmployer" type="UsingEmployerSearchType" minOccurs="0"/>
      <xs:element name="subEntityNbr" type="SubEntityNbrType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StatusType">
    <xs:sequence>
      <xs:element name="value">
        <xs:annotation>
          <xs:documentation>global status of the result</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="DATA_FOUND"/>
            <xs:enumeration value="NO_DATA_FOUND"/>
            <xs:enumeration value="NO_RESULT"/>
            <xs:enumeration value="RESPONSE_IN_BATCH"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="code">
        <xs:annotation>
          <xs:documentation>the code of the status</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="16"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="description" minOccurs="0">
        <xs:annotation>
          <xs:documentation>the description of the status</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="256"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="information" type="common:InformationType" minOccurs="0" maxOccurs="15"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaPeriodsType">
    <xs:sequence>
      <xs:element name="dmfaPeriod" type="DmfaPeriodResponseType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaPeriodBaseType">
    <xs:sequence>
      <xs:element name="dmfaPeriodId" type="DmfaPeriodIdType"/>
      <xs:element name="relation" type="RelationType" minOccurs="0"/>
      <xs:element name="period" type="PeriodType" minOccurs="0"/>
      <xs:element name="serviceCategory" type="ServiceCategoryType" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element name="nbrOfPlannedWorkingHour" type="xs:nonNegativeInteger"/>
        <xs:element name="nbrOfPlannedWorkingDay" type="xs:nonNegativeInteger"/>
      </xs:choice>
      <xs:element name="dmfaFeatures" type="DmfaFeaturesType" minOccurs="0"/>
      <xs:element name="source" type="SourceResultType" minOccurs="0"/>
      <xs:element name="constructionControlCards" type="ConstructionControlCardType" minOccurs="0"/>
      <xs:element name="studentPlaceOfWork" type="StudentPlaceOfWorkType" minOccurs="0"/>
      <xs:element name="cancelled" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaPeriodResponseType">
    <xs:complexContent>
      <xs:extension base="DmfaPeriodBaseType">
        <xs:sequence>
          <xs:element name="creationTimestamp" type="xs:dateTime"/>
          <xs:element name="lastUpdateTimestamp" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="lastDmfaAction" type="LastDmfaActionType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UsingEmployerType">
    <xs:sequence>
      <xs:element name="jointCommissionNbr" type="UsingEmployerJointCommissionNbrType" minOccurs="0"/>
      <xs:element name="name" type="UsingEmployerNameType" minOccurs="0"/>
      <xs:element name="enterpriseNumber" type="common:EnterpriseNumberType" minOccurs="0"/>
      <xs:element name="nssoRegistrationNbr" type="NSSORegistrationNbrType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DmfaFeaturesType">
    <xs:sequence>
      <xs:element name="jointCommissionNbr" type="JointCommissionNbrType" minOccurs="0"/>
      <xs:element name="workerCategory" type="WorkerCategoryType" minOccurs="0"/>
      <xs:element name="usingEmployer" type="UsingEmployerType" minOccurs="0"/>
      <xs:element name="subEntityNbr" type="SubEntityNbrType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConstructionControlCardType">
    <xs:sequence>
      <xs:element name="firstMonthC32ANbr" type="C32ANbrType" minOccurs="0"/>
      <xs:element name="nextMonthC32ANbr" type="C32ANbrType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StudentPlaceOfWorkType">
    <xs:sequence>
      <xs:element name="denomination" type="DenominationType" minOccurs="0"/>
      <xs:element name="address" type="AddressType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddressType">
    <xs:sequence>
      <xs:element name="street" type="StreetType" minOccurs="0"/>
      <xs:element name="houseNbr" type="HouseNbrType" minOccurs="0"/>
      <xs:element name="postBox" type="PostBoxType" minOccurs="0"/>
      <xs:element name="zipCode" type="ZIPCodeType" minOccurs="0"/>
      <xs:element name="city" type="CityType" minOccurs="0"/>
      <xs:element name="country" type="CountryType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InformationCBSSBatchType">
    <xs:sequence>
      <xs:element name="ticketCBSS" type="common:TicketType"/>
      <xs:element name="timestampReply" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <!--common simple types-->
  <xs:simpleType name="ResultsActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RESULTS_ONLINE_ONLY"/>
      <xs:enumeration value="TOO_MANY_RESULTS_BATCH"/>
      <xs:enumeration value="BATCH_ONLY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TemporaryWorkerSearchType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SEARCH_ONLY_FOR"/>
      <xs:enumeration value="SEARCH_WITHOUT"/>
      <xs:enumeration value="SEARCH_ALL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NSSORegistrationNbrType">
    <xs:restriction base="xs:long">
      <xs:totalDigits value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="C32ANbrType">
    <xs:restriction base="xs:long">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="999999999999"/>
      <xs:totalDigits value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WorkerNameType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="48"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WorkerFirstNameType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="24"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GenderType">
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="M"/>
      <xs:enumeration value="F"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JointCommissionNbrType">
    <xs:restriction base="xs:string">
      <xs:length value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UsingEmployerJointCommissionNbrType">
    <xs:restriction base="xs:string">
      <xs:length value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WorkerCategoryType">
    <xs:restriction base="xs:string">
      <xs:length value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UsingEmployerNameType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="96"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SubEntityNbrType">
    <xs:restriction base="xs:long">
      <xs:totalDigits value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DmfaPeriodIdType">
    <xs:restriction base="xs:long">
      <xs:totalDigits value="12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AnomalyClassSearchType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NP"/>
      <xs:enumeration value="B"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AnomalyClassType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="2"/>
      <xs:minLength value="1"/>
      <xs:enumeration value="NP"/>
      <xs:enumeration value="B"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AnomalySeverityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SEVERITY_NONE"/>
      <xs:enumeration value="SEVERITY_WARNING"/>
      <xs:enumeration value="SEVERITY_BLOCKING"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ErrorIdsType">
    <xs:sequence>
      <xs:element name="errorId" type="ErrorIdType" maxOccurs="100"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ErrorIdType">
    <xs:restriction base="xs:string">
      <xs:length value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ServiceCategoryType">
    <xs:restriction base="xs:string">
      <xs:length value="1"/>
      <xs:enumeration value="S"/>
      <xs:enumeration value="L"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DenominationType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="96"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StreetType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="42"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HouseNbrType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="10"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PostBoxType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="4"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ZIPCodeType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="9"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CityType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CountryType">
    <xs:restriction base="xs:int">
      <xs:totalDigits value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LastDmfaActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="I"/>
      <xs:enumeration value="O"/>
      <xs:enumeration value="U"/>
      <xs:enumeration value="C"/>
      <xs:enumeration value="D"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="YearQuarterType">
    <xs:restriction base="xs:int">
      <xs:pattern value="[0-9]{4}[1-4]"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PeriodType">
    <xs:sequence>
      <xs:element name="startDate" type="xs:date" minOccurs="0"/>
      <xs:element name="startHour" type="xs:time" minOccurs="0"/>
      <xs:element name="endDate" type="xs:date" minOccurs="0"/>
      <xs:element name="endHour" type="xs:time" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CriteriaType">
    <xs:sequence>
      <xs:element name="resultsAction" type="ResultsActionType"/>
      <xs:element name="periodCriteria" type="PeriodCriteriaType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="CancelledType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NOT_CANCELLED_ONLY"/>
      <xs:enumeration value="CANCELLED_ONLY"/>
      <xs:enumeration value="CANCELLED_AND_NOT_CANCELLED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SourceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RSZ_ONSS"/>
      <xs:enumeration value="DIBISS_ORPSS"/>
      <xs:enumeration value="ALL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SourceResultType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RSZ_ONSS"/>
      <xs:enumeration value="DIBISS_ORPSS"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NameType">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="48"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FirstNameType">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="24"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://fidus.brussels/services/dmfaservice/v1</con:endpoint>
    <con:endpoint>http://fidus.brussels/services/household/v1</con:endpoint></con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/dmfaservice/getDmfaService" name="getDmfaService" bindingOperationName="getDmfaService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="05d88c81-f948-48d7-89a1-c13fb8741c3a">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" useWsAddressing="false" id="19be0677-5b82-484d-9afb-d10784fac509">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2018Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2018Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>false</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="2 - Dev - Request" incomingWss="Inflow DEV" outgoingWss="Outflow DEV" id="5a938188-1774-4765-9d67-b99b91ef590f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2018Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2018Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="ed3d1eb5-d306-432b-91a6-c817a03b0767">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v12:getDmfaServiceRequest xmlns:v12="http://fidus.brussels/service/dmfaservice/messages/v1">
         <v12:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v12:messageContext>
         <v12:legalContext>ServiceIntegrator</v12:legalContext>
         <v12:request>
            <v12:personNumber>85032546212</v12:personNumber>
            <v12:cbeNumber>0473798181</v12:cbeNumber>
            <v12:beginDate>2014-01-01</v12:beginDate>
         </v12:request>
      </v12:getDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="ff0700d8-5416-4544-91af-743c4a1b3c90">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2016Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2016Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="4faeecdb-d5a2-410c-aa25-1e741b4c0536">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2018Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2018Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="81b807f8-b7f5-43e5-a219-b28ab15faac9">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/DmfaService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>92051460074</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2016Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2016Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/household/getHouseHold"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      
      
      
      
      
      
      
      
    </con:operation>
  </con:interface>
  <con:testSuite id="3ce7dad3-8e62-4181-bbf8-f21aeeeb0189" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="446a2512-a7fb-47f3-8e0d-ecf86bf8d998" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getDmfaService" searchProperties="true"><con:settings/><con:testStep type="request" id="121938ae-7cd6-42f6-b112-c1be77ea03bb" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DmfaServiceHTTPBinding</con:interface><con:operation>getDmfaService</con:operation><con:request name="testcase2 - Dev - Request" id="8848da02-6df0-4283-a336-ad7539a0b04b" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/DmfaService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2018Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2018Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="48477b81-d20d-415d-966f-435262789c31" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8f2476d1-a9d2-4236-b3f1-a5717edf891c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="07274bdb-c61b-42b6-a1e7-7eeddd504d3f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/dmfaservice/getDmfaService"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="efc9b54b-ade0-400e-8901-4aac35b1239a" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f7e0d264-bd70-43dd-b8a5-8c58dcc9e1e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getDmfaService" searchProperties="true"><con:settings/><con:testStep type="request" id="6a9dd429-424a-483d-845d-c293aee96068" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DmfaServiceHTTPBinding</con:interface><con:operation>getDmfaService</con:operation><con:request name="testcase3 - Test - External - Request" id="bcd686ec-0b3c-4321-b3fb-42a356af03db" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/DmfaService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/household/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v12:getDmfaServiceRequest xmlns:v12="http://fidus.brussels/service/dmfaservice/messages/v1">
         <v12:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v12:messageContext>
         <v12:legalContext>ServiceIntegrator</v12:legalContext>
         <v12:request>
            <v12:personNumber>85032546212</v12:personNumber>
            <v12:cbeNumber>0473798181</v12:cbeNumber>
            <v12:beginDate>2014-01-01</v12:beginDate>
         </v12:request>
      </v12:getDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e4cf018d-953a-496f-b35a-184cbce0d266" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="87e0ebaf-350e-4d80-96d6-a96fe9fede72" name="SOAP Response"/><con:assertion type="Schema Compliance" id="36a1a5d1-f0c3-4bc4-8b07-38e0ea86b2f3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/dmfaservice/getDmfaService"/></con:request></con:config></con:testStep><con:testStep type="request" id="5c3b0d6c-45af-48ce-b2c8-30a9e7ae6c6c" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DmfaServiceHTTPBinding</con:interface><con:operation>getDmfaService</con:operation><con:request name="testcase3 - Test - LB - Request" id="de781da5-949b-4d23-a070-0b776cedaa57" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/DmfaService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2016Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2016Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1145f333-61fc-4cf4-a70d-ea6ab7e9659a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="403f9983-d116-49e8-b2ff-83410dbbaf44" name="SOAP Response"/><con:assertion type="Schema Compliance" id="25722567-8e4e-4118-8f23-6695b2bfa1ae" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/dmfaservice/getDmfaService"/></con:request></con:config></con:testStep><con:testStep type="request" id="8748e61a-5501-40c2-847a-fa0cf3c7772b" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DmfaServiceHTTPBinding</con:interface><con:operation>getDmfaService</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="89fb4d62-9908-48a6-8d9b-a1832df8be9b" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/DmfaService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91092233113</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2018Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2018Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="aba0105a-24a9-4af5-96a7-b44279127d59" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="189f9226-9d83-46b8-9a90-cd8c96f56ca8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="f2bff0f7-84e7-415c-9b58-57190949155a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/dmfaservice/getDmfaService"/></con:request></con:config></con:testStep><con:testStep type="request" id="feda1eeb-4b47-454d-8577-8075997d3832" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DmfaServiceHTTPBinding</con:interface><con:operation>getDmfaService</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="c8c4db0a-7c28-4e02-90ef-3e70feba0fd5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/DmfaService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/dmfaservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:consultDmfaServiceRequest>
         <v1:messageContext>
            <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <!--Optional:-->
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>92051460074</v1:personNumber>
            <v1:period>
               <v1:beginDate>2014-01-01</v1:beginDate>
               <v1:endDate>2018-01-01</v1:endDate>
            </v1:period>
            <v1:periodQuarter>
               <v1:beginQuarter>2016Q1</v1:beginQuarter>
               <!--Optional:-->
               <v1:endQuarter>2016Q1</v1:endQuarter>
            </v1:periodQuarter>
            <v1:latestSituationOnly>true</v1:latestSituationOnly>
         </v1:request>
      </v1:consultDmfaServiceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="94895a46-1533-45fb-8bdb-634999c57013" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9a7a96a5-ccdb-4976-bf87-46e654ea4a5e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="38c1ae82-53f7-47d8-85b9-f640579c0618" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/dmfaservice/getDmfaService"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>